/**
* DO NOT EDIT THIS FILE.
* See the following change record for more information,
* https://www.drupal.org/node/2815083
* @preserve
**/

(function ($, once) {
  var deprecatedMessageSuffix = "is deprecated in Drupal 9.3.0 and will be removed in Drupal 10.0.0. Use the core/once library instead. See https://www.drupal.org/node/3158256";
  var originalJQOnce = $.fn.once;
  var originalJQRemoveOnce = $.fn.removeOnce;

  $.fn.once = function jQueryOnce(id) {
    Drupal.deprecationError({
      message: "jQuery.once() ".concat(deprecatedMessageSuffix)
    });
    return originalJQOnce.apply(this, [id]);
  };

  $.fn.removeOnce = function jQueryRemoveOnce(id) {
    Drupal.deprecationError({
      message: "jQuery.removeOnce() ".concat(deprecatedMessageSuffix)
    });
    return originalJQRemoveOnce.apply(this, [id]);
  };

  var drupalOnce = once;

  function augmentedOnce(id, selector, context) {
    originalJQOnce.apply($(selector, context), [id]);
    return drupalOnce(id, selector, context);
  }

  function remove(id, selector, context) {
    originalJQRemoveOnce.apply($(selector, context), [id]);
    return drupalOnce.remove(id, selector, context);
  }

  window.once = Object.assign(augmentedOnce, drupalOnce, {
    remove: remove
  });
})(jQuery, once);;
"use strict";

/**
 * @file
 * JS functionality for moving the modal component to the body when the modal is opened
 */
(function ($) {
  "use strict";

  $(document).on("show.bs.modal", function (event) {
    var $modalTarget = $(event.target);
    $modalTarget.once("modal-moved").each(function () {
      var $modal = $(this);
      $modal.detach();
      $("body").append($modal);
    });
  });
})(window.jQuery);;
"use strict";

/**
 * @file
 * Behaviors for the attsite_vbtheme theme.
 */
(function ($, _, Drupal) {
  'use strict';

  var init = false;
  /**
   * @type {string[]} Domains to be considered internal.
   *
   * No link tracking will be fired when navigating between these!
   */

  var linkInternalFilters = ['javascript:', 'experience.att.com', 'watch.att.com', 'more.att.com', 'audiencenetwork.att.com']; // Event.composedPath

  (function (e, d, w) {
    if (!e.composedPath) {
      e.composedPath = function () {
        if (this.path) {
          return this.path;
        }

        var target = this.target;
        this.path = [];

        while (target.parentNode !== null) {
          this.path.push(target);
          target = target.parentNode;
        }

        this.path.push(d, w);
        return this.path;
      };
    }
  })(Event.prototype, document, window);

  Drupal.behaviors.attsite_analytics = {
    attach: function attach(context) {
      if (init || drupalSettings.user.uid != null && drupalSettings.user.uid != 0) {
        return;
      }

      init = true;
      var counter = 10;

      var isAnalyticsLoaded = function isAnalyticsLoaded() {
        return window.s && window.s.isReadyToTrack();
      };

      var updateEventTracking = function updateEventTracking() {
        document.addEventListener('click', function (event) {
          var path = event.path || event.composedPath && event.composedPath();
          var eventPath = path.slice(0, path.length - 5);
          var targetLocation = 'link location';
          var destinationUrl;
          var linkName;

          for (var i = 0; i < eventPath.length; i++) {
            var currentTag = eventPath[i];

            if (currentTag.tagName === 'A' && !destinationUrl) {
              destinationUrl = currentTag.href || undefined;
              linkName = currentTag.textContent.trim();
            }

            if (destinationUrl && currentTag.getAttribute('data-track')) {
              targetLocation = "".concat(targetLocation, " | ").concat(currentTag.getAttribute('data-track'));
            }

            if (currentTag.classList && currentTag.classList.contains('content')) {
              break;
            }
          }

          destinationUrl && linkClicked(linkName, destinationUrl, targetLocation);
        }, true);
      };

      var linkClicked = function linkClicked(linkName, destinationUrl, targetLocation) {
        // These props were removed from s.setupLinkTrack()
        // call in the analytics script, in order to fill them here.
        window.s.prop19 = destinationUrl;
        window.s.prop20 = targetLocation; // Manually trigger "Other click" link tracking, as the analytics script
        // only triggers for "real" external links (not part of att.com)

        if (isExternalUrl(destinationUrl)) {
          s.tl(true, 'o', linkName, {
            prop19: destinationUrl,
            prop20: targetLocation
          });
        }
      };

      var isExternalUrl = function isExternalUrl(url) {
        url = url.toLowerCase().replace(/(^https?:\/\/)|(^\/\/)/, '');

        for (var i = 0; i < linkInternalFilters.length; ++i) {
          var filter = linkInternalFilters[i].toLowerCase();

          if (url.match(new RegExp('^[^\/\?]*' + escapeRegExp(filter), 'i'))) {
            return false;
          }
        }

        return true;
      };

      var escapeRegExp = function escapeRegExp(string) {
        return string.replace(/[.*+?^${}()|[\]\\]/g, '\\$&');
      };

      (function initializeTracking() {
        if (!isAnalyticsLoaded()) {
          if (counter-- > 0) {
            setTimeout(initializeTracking, 256);
          } else {
            console.log('Adobe DTM is not running properly. Please check if the js is loaded and working!');
          }
        } else {
          updateEventTracking();
        }
      })();
    }
  };
})(window.jQuery, window._, window.Drupal);;
"use strict";

/**
 * @file
 * Behaviors for the attsite_vbtheme theme.
 */
(function ($, Drupal) {
  'use strict';

  Drupal.behaviors.attsite_vbtheme = {
    attach: function attach(context) {
      // Vartheme subtheme JavaScript behaviors goes here.
      var scroll = new SmoothScroll('a[href*="#"]', {
        header: '.sticky-header',
        easing: 'easeInQuad',
        speedAsDuration: true
      });
      $('.att-lightbox-button').click(function () {
        var dataTarget = $(this).attr('data-target') + ' img';
        showBlazy(dataTarget);
      });
    }
  }; // Function to swap blazy data-src and src attributes.

  var showBlazy = function showBlazy(dataTarget) {
    $(dataTarget).attr('src', $(dataTarget).attr('data-src')).addClass('b-loaded');
    $('<style>.media--loading:before {display: none}</style>').appendTo('head');
  };
})(window.jQuery, window.Drupal);;
/**
 * @file
 * Bootstrap Popovers.
 */

var Drupal = Drupal || {};

(function ($, Drupal, Bootstrap) {
  "use strict";

  var $document = $(document);

  /**
   * Extend the Bootstrap Popover plugin constructor class.
   */
  Bootstrap.extendPlugin('popover', function (settings) {
    return {
      DEFAULTS: {
        animation: !!settings.popover_animation,
        autoClose: !!settings.popover_auto_close,
        enabled: settings.popover_enabled,
        html: !!settings.popover_html,
        placement: settings.popover_placement,
        selector: settings.popover_selector,
        trigger: settings.popover_trigger,
        title: settings.popover_title,
        content: settings.popover_content,
        delay: parseInt(settings.popover_delay, 10),
        container: settings.popover_container
      }
    };
  });

  /**
   * Bootstrap Popovers.
   *
   * @todo This should really be properly delegated if selector option is set.
   */
  Drupal.behaviors.bootstrapPopovers = {
    $activePopover: null,
    attach: function (context) {
      // Immediately return if popovers are not available.
      if (!$.fn.popover || !$.fn.popover.Constructor.DEFAULTS.enabled) {
        return;
      }

      var _this = this;

      $document
        .on('show.bs.popover', '[data-toggle=popover]', function () {
          var $trigger = $(this);
          var popover = $trigger.data('bs.popover');

          // Only keep track of clicked triggers that we're manually handling.
          if (popover.options.originalTrigger === 'click') {
            if (_this.$activePopover && _this.getOption('autoClose') && !_this.$activePopover.is($trigger)) {
              _this.$activePopover.popover('hide');
            }
            _this.$activePopover = $trigger;
          }
        })
        // Unfortunately, :focusable is only made available when using jQuery
        // UI. While this would be the most semantic pseudo selector to use
        // here, jQuery UI may not always be loaded. Instead, just use :visible
        // here as this just needs some sort of selector here. This activates
        // delegate binding to elements in jQuery so it can work it's bubbling
        // focus magic since elements don't really propagate their focus events.
        // @see https://www.drupal.org/project/bootstrap/issues/3013236
        .on('focus.bs.popover', ':visible', function (e) {
          var $target = $(e.target);
          if (_this.$activePopover && _this.getOption('autoClose') && !_this.$activePopover.is($target) && !$target.closest('.popover.in')[0]) {
            _this.$activePopover.popover('hide');
            _this.$activePopover = null;
          }
        })
        .on('click.bs.popover', function (e) {
          var $target = $(e.target);
          if (_this.$activePopover && _this.getOption('autoClose') && !$target.is('[data-toggle=popover]') && !$target.closest('.popover.in')[0]) {
            _this.$activePopover.popover('hide');
            _this.$activePopover = null;
          }
        })
        .on('keyup.bs.popover', function (e) {
          if (_this.$activePopover && _this.getOption('autoClose') && e.which === 27) {
            _this.$activePopover.popover('hide');
            _this.$activePopover = null;
          }
        })
      ;

      var elements = $(context).find('[data-toggle=popover]').toArray();
      for (var i = 0; i < elements.length; i++) {
        var $element = $(elements[i]);
        var options = $.extend({}, $.fn.popover.Constructor.DEFAULTS, $element.data());

        // Store the original trigger.
        options.originalTrigger = options.trigger;

        // If the trigger is "click", then we'll handle it manually here.
        if (options.trigger === 'click') {
          options.trigger = 'manual';
        }

        // Retrieve content from a target element.
        var target = options.target || $element.is('a[href^="#"]') && $element.attr('href');
        var $target = $document.find(target).clone();
        if (!options.content && $target[0]) {
          $target.removeClass('visually-hidden hidden').removeAttr('aria-hidden');
          options.content = $target.wrap('<div/>').parent()[options.html ? 'html' : 'text']() || '';
        }

        // Initialize the popover.
        $element.popover(options);

        // Handle clicks manually.
        if (options.originalTrigger === 'click') {
          // To ensure the element is bound multiple times, remove any
          // previously set event handler before adding another one.
          $element
            .off('click.drupal.bootstrap.popover')
            .on('click.drupal.bootstrap.popover', function (e) {
              $(this).popover('toggle');
              e.preventDefault();
              e.stopPropagation();
            })
          ;
        }
      }
    },
    detach: function (context) {
      // Immediately return if popovers are not available.
      if (!$.fn.popover || !$.fn.popover.Constructor.DEFAULTS.enabled) {
        return;
      }

      // Destroy all popovers.
      $(context).find('[data-toggle="popover"]')
        .off('click.drupal.bootstrap.popover')
        .popover('destroy')
      ;
    },
    getOption: function(name, defaultValue, element) {
      var $element = element ? $(element) : this.$activePopover;
      var options = $.extend(true, {}, $.fn.popover.Constructor.DEFAULTS, ($element && $element.data('bs.popover') || {}).options);
      if (options[name] !== void 0) {
        return options[name];
      }
      return defaultValue !== void 0 ? defaultValue : void 0;
    }
  };

})(window.jQuery, window.Drupal, window.Drupal.bootstrap);
;
/**
 * @file
 * Bootstrap Tooltips.
 */

var Drupal = Drupal || {};

(function ($, Drupal, Bootstrap) {
  "use strict";

  /**
   * Extend the Bootstrap Tooltip plugin constructor class.
   */
  Bootstrap.extendPlugin('tooltip', function (settings) {
    return {
      DEFAULTS: {
        animation: !!settings.tooltip_animation,
        enabled: settings.tooltip_enabled,
        html: !!settings.tooltip_html,
        placement: settings.tooltip_placement,
        selector: settings.tooltip_selector,
        trigger: settings.tooltip_trigger,
        delay: parseInt(settings.tooltip_delay, 10),
        container: settings.tooltip_container
      }
    };
  });

  /**
   * Bootstrap Tooltips.
   *
   * @todo This should really be properly delegated if selector option is set.
   */
  Drupal.behaviors.bootstrapTooltips = {
    attach: function (context) {
      // Immediately return if tooltips are not available.
      if (!$.fn.tooltip || !$.fn.tooltip.Constructor.DEFAULTS.enabled) {
        return;
      }

      var elements = $(context).find('[data-toggle="tooltip"]').toArray();
      for (var i = 0; i < elements.length; i++) {
        var $element = $(elements[i]);
        var options = $.extend({}, $.fn.tooltip.Constructor.DEFAULTS, $element.data());
        $element.tooltip(options);
      }
    },
    detach: function (context) {
      // Immediately return if tooltips are not available.
      if (!$.fn.tooltip || !$.fn.tooltip.Constructor.DEFAULTS.enabled) {
        return;
      }

      // Destroy all tooltips.
      $(context).find('[data-toggle="tooltip"]').tooltip('destroy');
    }
  };

})(window.jQuery, window.Drupal, window.Drupal.bootstrap);
;
"use strict";

/**
 * @file
 * JS functionality for responsive tables inside CKeditor (Internet Explorer fix).
 */
(function ($, Drupal) {
  Drupal.behaviors.attsite_responsive_tables = {
    attach: function attach(context) {
      $(context).find('.paragraph--type--bp-simple table:not(table[responsivedisabled="true"])').once('ckeditor-table').each(function () {
        var table = $(this);
        var borderSettings = table.attr('border');

        if (borderSettings > 0) {
          table.addClass('has-border');
        } else {
          table.removeClass('has-border');
        }
      });
    }
  };
})(window.jQuery, window.Drupal);;
"use strict";

/**
 * @file
 * JS functionality for fixing new tab links.
 */
(function ($, Drupal) {
  Drupal.behaviors.attsite_new_tab_link = {
    attach: function attach(context) {
      $(context).find('.paragraph--type--bp-simple a[target="_blank"]').once("new-tab-link").on("click", function (e) {
        e.stopPropagation();
      });
    }
  };
})(window.jQuery, window.Drupal);;
"use strict";

/**
 * @file
 * JS functionality for fixing line-heights smaller than font-sizes in the CKEDITOR.
 */
(function ($, Drupal) {
  Drupal.behaviors.attsite_line_height = {
    attach: function attach(context) {
      var lineHeightStr = "line-height";
      $(context).find('.field--type-text-long span').once("line-height").each(function () {
        var span = $(this);
        var spanStyle = span.attr("style");

        if (spanStyle) {
          if (spanStyle.indexOf(lineHeightStr) > -1 && span.css('display') !== 'block') {
            span.css('display', 'block');
          }
        }
      });
    }
  };
})(window.jQuery, window.Drupal);;
"use strict";

// @codingStandardsIgnoreFile

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

/**
 * @file
 * CKEditor plugin "BpButton" definition.
 */
(function ($, Drupal) {
  'use strict';

  /**
   * Attaches the bpButton behavior.
   *
   * @type {Drupal~behavior}
   *
   * @prop {Drupal~behaviorAttach} attach
   *   Attaches the bpButton behavior.
   */
  Drupal.behaviors.attsite_ckeditor_bpbutton_init = {
    attach: function attach(context, settings) {
      /** @var settings no inspection */
      $(context).find('.bpbutton').once('bpbutton-init').each(function () {
        Drupal.bpButton.init($(this));
      });
    }
  };

  /**
   * Class to wrap list of our functions which should help for plugin normal work.
   */
  Drupal.bpButton = new function () {

    /**
     * Storage for list of keys which will be used to style data.
     *
     * @return array
     */
    this.keys = function () {
      return [
        // Main tab.
       'font_size', 'font_weight', 'font_style', 'font_size_sub', 'font_weight_sub', 'font_style_sub', 'extra_class',
        // Style tab.
       'background', 'opacity', 'color', 'hover_background', 'hover_opacity', 'hover_color', 'min_width', 'max_width',
        // Border tab.
        'border_style', 'border_width', 'border_color', 'border_radius', 'hover_border_style', 'hover_border_width', 'hover_border_color', 'hover_border_radius',
        // Shadow tab.
        'shadow_shift_horizontal', 'shadow_shift_vertical', 'shadow_spread', 'shadow_blur', 'shadow_color', 'shadow_inset', 'hover_shadow_shift_horizontal', 'hover_shadow_shift_vertical', 'hover_shadow_spread', 'hover_shadow_blur', 'hover_shadow_color', 'hover_shadow_inset',
        // Gradient tab.
        'gradient_type', 'gradient_color_first', 'gradient_color_second', 'hover_gradient_type', 'hover_gradient_color_first', 'hover_gradient_color_second',
        // Spacing tab.
        'margin_top', 'margin_right', 'margin_bottom', 'margin_left', 'padding_top', 'padding_right', 'padding_bottom', 'padding_left',
      ];
    };

    /**
     * Function to get data for some element.
     *
     * @param $element
     *   jQuery element which should be used as storage.
     *
     * @returns object
     *   Element data.
     */
    this.getData = function ($element) {
      var rawData = $element.attr('data-bpbutton');
      var data = typeof rawData === 'undefined' ? {} : JSON.parse(rawData);

      return this.defaultData(data);
    };

    /**
     * Function to set data for some element.
     *
     * @param $element
     *   jQuery element which should be used as storage.
     * @param data
     *   Object of data to set to the element.
     *
     * @returns object
     *   Element data.
     */
    this.setData = function ($element, data) {
      $element.attr('data-bpbutton', JSON.stringify(this.defaultData(data)));
    };

    /**
     * Function to validate data object and it's default keys.
     *
     * @param data
     *   Object of data to validate.
     *
     * @returns object
     *   Element data.
     */
    this.defaultData = function (data) {
      data = _typeof(data) !== 'object' ? {} : data;

      // Default keys.
      var keys = this.keys();

      for (var key in keys) {
        data[keys[key]] = typeof data[keys[key]] === 'undefined' ? '' : data[keys[key]];
      }

      return data;
    };

    /**
     * Function to apply default styles to an element.
     *
     * @param $element
     *   jQuery element which should be used for styling.
     *
     * @returns void
     */
    this.styleDefault = function ($element) {
      this.style($element);
    };

    /**
     * Function to apply hover styles to an element.
     *
     * @param $element
     *   jQuery element which should be used for styling.
     *
     * @returns void
     */
    this.styleHover = function ($element) {
      this.style($element, 'hover');
    };

    /**
     * Function to apply styles to an element by prefix.
     *
     * @param $element
     *   jQuery element which should be used for styling.
     * @param prefix
     *   Parameters prefix string.
     *
     * @returns void
     */
    this.style = function ($element) {
      var prefix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';
      var styleSettings = this.getData($element);

      if (prefix) {
        prefix += '_';
      }

      if (prefix === '') {
        // Not prefixed values.
        $element.css('margin-top', styleSettings[prefix + 'margin_top']);
        $element.css('margin-right', styleSettings[prefix + 'margin_right']);
        $element.css('margin-bottom', styleSettings[prefix + 'margin_bottom']);
        $element.css('margin-left', styleSettings[prefix + 'margin_left']);
        $element.css('padding-top', styleSettings[prefix + 'padding_top']);
        $element.css('padding-right', styleSettings[prefix + 'padding_right']);
        $element.css('padding-bottom', styleSettings[prefix + 'padding_bottom']);
        $element.css('padding-left', styleSettings[prefix + 'padding_left']);
        $element.css('min-width', styleSettings[prefix + 'min_width']);
        $element.css('max-width', styleSettings[prefix + 'max_width']);
        $('.text', $element).css('font-size', styleSettings[prefix + 'font_size']);
        $('.glyphicon', $element).css('font-size', styleSettings[prefix + 'font_size']);
        $('i', $element).css('font-size', styleSettings[prefix + 'font_size']);
        $('.text', $element).css('font-weight', styleSettings[prefix + 'font_weight']);
        $('.text', $element).css('font-style', styleSettings[prefix + 'font_style']);
        $('.subtext', $element).css('font-size', styleSettings[prefix + 'font_size_sub']);
        $('.subtext', $element).css('font-weight', styleSettings[prefix + 'font_weight_sub']);
        $('.subtext', $element).css('font-style', styleSettings[prefix + 'font_style_sub']);
      }

      $element.css('background-color', styleSettings[prefix + 'background']);
      $element.css('opacity', styleSettings[prefix + 'opacity']);
      $element.css('color', styleSettings[prefix + 'color']);
      $element.css('border-style', styleSettings[prefix + 'border_style']);
      $element.css('border-color', styleSettings[prefix + 'border_color']);
      $element.css('border-width', styleSettings[prefix + 'border_width']);
      $element.css('border-radius', styleSettings[prefix + 'border_radius']);
      $element.addClass(styleSettings['extra_class']);
      this.cssShadow($element, styleSettings, prefix);
      this.cssGradient($element, styleSettings, prefix);
    };

    /**
     * Function to set vendor prefixes for border radius.
     *
     * @param $element
     *   jQuery element which should be used for styling.
     * @param styleSettings
     *   Settings object.
     * @param prefix
     *   Parameters prefix string.
     */
    this.cssShadow = function ($element, styleSettings) {
      var prefix = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';
      // Prepare list of properties in proper order.
      var keys = ['shadow_inset', 'shadow_shift_horizontal', 'shadow_shift_vertical', 'shadow_blur', 'shadow_spread', 'shadow_color'];

      // Build shadow string.
      var shadow = '',
          value;

      for (var key in keys) {
        // Grab our value from list of properties.
        value = typeof styleSettings[prefix + keys[key]] === 'undefined' ? '' : styleSettings[prefix + keys[key]];

        // Inset value should be modified.
        if (keys[key] === 'shadow_inset') {
          value = value ? 'inset' : '';
        }

        // Insert extra space after each parameter except last one.
        if (keys[key] !== 'shadow_color') {
          value += ' ';
        }

        // Add new value to string.
        if (value) {
          shadow += value;
        }

        value = null;
      }

      // Apply styles.
      if (shadow) {
        $element.css('box-shadow', shadow);
      }
    };

    /**
     * Function to set vendor prefixes for gradient.
     *
     * @param $element
     *   jQuery element which should be used for styling.
     * @param styleSettings
     *   Settings object.
     * @param prefix
     *   Parameters prefix string.
     */
    this.cssGradient = function ($element, styleSettings) {
      var prefix = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';
      // Prepare list of properties.
      var gradient_type = typeof styleSettings[prefix + 'gradient_type'] === 'undefined' ? '' : styleSettings[prefix + 'gradient_type'];
      var gradient_color_first = typeof styleSettings[prefix + 'gradient_color_first'] === 'undefined' ? '' : styleSettings[prefix + 'gradient_color_first'];
      var gradient_color_second = typeof styleSettings[prefix + 'gradient_color_second'] === 'undefined' ? '' : styleSettings[prefix + 'gradient_color_second'];

      // Defaults for cases when you will use horizontal gradient.
      var direction_moz_and_webkit = 'left';
      var direction_default = 'to right';
      var direction_dx = 1;
      var default_gradient_type = 'linear-gradient';

      // Check which variables we should use.
      switch (gradient_type) {
        // Vertical gradient.
        case 'vertical':
          direction_moz_and_webkit = 'top';
          direction_default = 'to bottom';
          direction_dx = 0;
          break;
        // Radial gradient.
        case 'radial':
          direction_moz_and_webkit = 'center, ellipse cover';
          direction_default = 'ellipse at center';
          default_gradient_type = 'radial-gradient';
          break;
        // Diagonal +45 degrees.
        case 'diagonal_plus':
          direction_moz_and_webkit = '45deg';
          direction_default = '45deg';
          break;
        // Diagonal -45 degrees.
        case 'diagonal_minus':
          direction_moz_and_webkit = '-45deg';
          direction_default = '135deg';
          break;
      }

      // Apply styles.
      $element.css('background', default_gradient_type + '(' + direction_default + ',' + gradient_color_first + ' 0%,' + gradient_color_second + ' 100%)');
    };

    /**
     * Initialize possibility to use bpButton.
     *
     * @param $element
     *   jQuery element to initialize.
     */
    this.init = function ($element) {
      // Process styles.
      this.styleDefault($element);
      $element.hover(function () {
        Drupal.bpButton.styleHover($(this));
      }, function () {
        Drupal.bpButton.styleDefault($(this));
      });
    };
  }();
})(jQuery, Drupal);
;
"use strict";

/**
 * @file
 * Initializes modification based on provided configuration.
 */
(function (ImageFxModifier, $) {
  'use strict';

  ImageFxModifier.apply = function (context, selector, media, config) {// @todo Apply JS image fx for IE11-compatibility.
  }; // Loop through all the modifiers to see if there's a link.


  $('.modifiers.att-text-over-image').each(function () {
    if ($(this).find('.field > .paragraph > a').length) {
      var link = $(this).find('.field > .paragraph > a');
      $(this).on('click', function (event) {
        if ($(event.target).is('button') && $(event.target).hasClass('trigger')) {
          return;
        }

        event.stopPropagation();
        window.location.href = link.attr('href');
      });
    }
  }); // Add z-index for image fx scale.

  var element = $('.modifiers .media--image').closest('[data-layout-builder-ui^=bp_column_content]');
  element.mouseenter(function () {
    if ($(this).is('[class^="col-"]')) {
      $(this).css("z-index", "10");
    }
  }).mouseleave(function () {
    $(this).css("z-index", "1");
  }); // Z-index fix for closest column wrapper around a sticky header.

  $('.sticky-header').once('z-index').closest('.paragraph--type--bp-column-wrapper').css('zIndex', 100); // Add z-index for image fx scale in specific case: uneven column layout.

  element = $('.paragraph--type--bp-columns-two-uneven .media--image').closest('.modifiers-bundle-bp-columns-two-uneven');
  element.mouseenter(function () {
    $(this).css("z-index", "10");
  }).mouseleave(function () {
    $(this).css("z-index", "1");
  });
})(window.ImageFxModifier = window.ImageFxModifier || {}, jQuery);;
/**
* DO NOT EDIT THIS FILE.
* See the following change record for more information,
* https://www.drupal.org/node/2815083
* @preserve
**/

Drupal.debounce = function (func, wait, immediate) {
  var timeout;
  var result;
  return function () {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    var context = this;

    var later = function later() {
      timeout = null;

      if (!immediate) {
        result = func.apply(context, args);
      }
    };

    var callNow = immediate && !timeout;
    clearTimeout(timeout);
    timeout = setTimeout(later, wait);

    if (callNow) {
      result = func.apply(context, args);
    }

    return result;
  };
};;
"use strict";

/**
 * @file
 * Simple file for declaring the attServices namespace.
 */
window.attServices = window.attServices ? window.attServices : {};;
"use strict";

/**
 * @file
 * Behaviors for the attsite_vbtheme theme.
 */
(function ($, Drupal, debounce, attServices) {
  'use strict';
  /**
   * Service to control teaser card components.
   */

  attServices.teaserCardController = new function () {
    /**
     * Method to init TC Card Components
     *
     * @param version
     *   TC Card version.
     */
    this.initTCCard = function (context) {
      var version = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';
      // @codingStandardsIgnoreLine
      var teaserCards = $(".paragraph--type--attsite-bp-teaser-card".concat(version), context);
      teaserCards.once('teaser-card').each(function () {
        var mobileTc = $('.tc-mobile .image', this);
        var mobileVideoContainer = mobileTc.find('.paragraph--type--attsite-brightcove-video');

        if (!mobileVideoContainer.length) {
          mobileVideoContainer = mobileTc.find('.paragraph--type--attsite-bp-youtube');
        }

        if (mobileVideoContainer.length) {
          var desktopTc = $('.tc-desktop .image', this);
          var desktopVideoContainer = desktopTc.find('.paragraph--type--attsite-brightcove-video');

          if (!desktopVideoContainer.length) {
            desktopVideoContainer = desktopTc.find('.paragraph--type--attsite-bp-youtube');
          }

          var mobileMove = debounce(function () {
            var ww = $(window).width();
            var type = ww <= 768 ? 'a' : 'b';

            if (desktopVideoContainer.data('type') !== type) {
              desktopVideoContainer.detach();
              mobileVideoContainer.remove();

              if (ww <= 768) {
                mobileTc.append(desktopVideoContainer);
              } else {
                desktopTc.append(desktopVideoContainer);
              }

              desktopVideoContainer.data('type', type);
            }
          }, 32);
          $(window).resize(mobileMove);
          mobileMove();
        }
      });
    };
  }();
})(window.jQuery, window.Drupal, window.Drupal.debounce, window.attServices);;
"use strict";

/**
 * @file
 * JS functionality for Teaser Card component.
 */
(function ($, Drupal, debounce, teaserCardController) {
  "use strict";

  Drupal.behaviors.attsite_vbtheme_component_teaser_card = {
    attach: function attach(context) {
      teaserCardController.initTCCard(context);
    }
  };
})(window.jQuery, window.Drupal, window.Drupal.debounce, window.attServices.teaserCardController);;
"use strict";

/**
 * @file
 * Behaviors for the attsite_vbtheme theme.
 */
(function ($, attServices, debounce) {
  'use strict';

  attServices.lazyLoadService = attServices.lazyLoadService ? attServices.lazyLoadService : {};

  attServices.lazyLoadService.lazyLoad = function (element, id, callback) {
    if (!element) {
      return;
    }

    var checkViewState = function checkViewState(selector) {
      var viewportTop = $(window).scrollTop();
      var viewHeight = $(window).height();
      var viewportBottom = viewportTop + viewHeight;
      var threshold = viewHeight * 0.10;
      var elementTop = selector.offset().top;
      var elementBottom = elementTop + selector.outerHeight();
      var thresholdTop = viewportTop - threshold;
      var thresholdBottom = viewportBottom + threshold;
      return thresholdTop <= elementTop && elementTop <= thresholdBottom || thresholdTop <= elementBottom && elementBottom <= thresholdBottom || thresholdTop > elementTop && elementBottom > thresholdBottom;
    };

    var checkView = debounce(function () {
      if (checkViewState(element)) {
        $(document).off("scroll.".concat(id), checkView);
        window.requestAnimationFrame(callback);
      }
    }, 32);

    if (checkViewState(element)) {
      callback();
    } else {
      $(document).on("scroll.".concat(id), checkView);
    }
  };
})(window.jQuery, window.attServices, window.Drupal.debounce);;
"use strict";

/**
 * @file
 * Behaviors for the attsite_vbtheme theme.
 */
(function ($, attServices) {
  'use strict';
  /**
   * Service to control various video components.
   */

  attServices.videoController = new function () {
    /**
     * Method to stop all video players inside given wrapper.
     *
     * @param $element
     *   Wrapper for video players to stop.
     */
    this.stopAllVideo = function ($element) {
      this.stopAllYouTube($element);
      this.stopAllBrightcove($element);
    };

    this.startAllAutoPlayVideo = function ($element) {
      this.startAllAutoPlayYouTube($element);
      this.startAllAutoPlayBrightcove($element);
    }; // TODO: Change this service to be event based and move specific player logic to their own modules.

    /**
     * Stop all YouTube videos inside given wrapper.
     *
     * @param $element
     *   Wrapper for video players to stop.
     */


    this.stopAllYouTube = function ($element) {
      var $youtubeList = $element.find("iframe[src*='youtube.com'], iframe[src*='youtu.be'], iframe[src*='youtube-nocookie.com']");
      var youtubeApi = window.YT;
      $youtubeList.each(function () {
        var $this = $(this);
        var playerId = $this.attr('id');

        if (youtubeApi && playerId && youtubeApi.get(playerId) && youtubeApi.get(playerId).pauseVideo) {
          youtubeApi.get(playerId).pauseVideo();
        } else if (document.getElementById(playerId) && document.getElementById(playerId).tagName.toLowerCase() === 'iframe') {
          document.getElementById(playerId).contentWindow.postMessage(JSON.stringify({
            event: 'command',
            func: 'pauseVideo'
          }), '*');
        } else {
          $this.attr('src', $this.attr('src')); // For details @see: https://stackoverflow.com/questions/15164942/stop-embedded-youtube-iframe#answer-36313110
        }
      });
    }; // TODO: Change this service to be event based and move specific player logic to their own modules.


    this.startAllAutoPlayYouTube = function ($element) {
      var $youtubeList = $element.find("iframe[src*='youtube.com'], iframe[src*='youtu.be'], iframe[src*='youtube-nocookie.com']");
      var youtubeApi = window.YT;
      $youtubeList.each(function () {
        var $this = $(this);
        var playerId = $this.attr('id');
        var autoplay = $this.attr('src').includes("autoplay=true");

        if (youtubeApi && playerId && autoplay) {
          //youtube API is avaliable
          if (youtubeApi.get(playerId) && youtubeApi.get(playerId).playVideo) {
            youtubeApi.get(playerId).playVideo();
          } else if (document.getElementById(playerId) && document.getElementById(playerId).tagName.toLowerCase() === 'iframe') {
            document.getElementById(playerId).contentWindow.postMessage(JSON.stringify({
              event: 'command',
              func: 'playVideo'
            }), '*');
          }
        }
      });
    }; // TODO: Change this service to be event based and move specific player logic to their own modules.

    /**
     * Stop all Brightcove videos inside given wrapper.
     *
     * @param $element
     *   Wrapper for video players to stop.
     */


    this.stopAllBrightcove = function ($element) {
      var $players = $element.find('.video-js');
      $players.each(function (i, playerElement) {
        var playerId = $(playerElement).attr('id');

        if (!playerId) {
          playerId = $(playerElement).find('video').attr('id');
        }

        if (playerId) {
          var bcPlayer = videojs.getPlayer(playerId);

          if (bcPlayer) {
            bcPlayer.ready(function () {
              // Pausing the video when modal is closed.
              this.pause();
            });
          }
        }
      });
    };

    this.startAllAutoPlayBrightcove = function ($element) {
      var $players = $element.find('.video-js');
      $players.each(function (i, playerElement) {
        var playerId = $(playerElement).attr('id');

        if (!playerId) {
          playerId = $(playerElement).find('video').attr('id');
        }

        if (playerId) {
          var bcPlayer = videojs.getPlayer(playerId);

          if (bcPlayer) {
            var bcAutoplay = $(this).find('video').attr('autoplay');

            if (bcAutoplay === "autoplay") {
              bcPlayer.ready(function () {
                // Starting the autoplay video.
                this.play();
              });
            }
          }
        }
      });
    };
  }();
})(window.jQuery, window.attServices);;
!function(i){"use strict";"function"==typeof define&&define.amd?define(["jquery"],i):"undefined"!=typeof exports?module.exports=i(require("jquery")):i(jQuery)}(function(i){"use strict";var e=window.Slick||{};(e=function(){var e=0;return function(t,o){var s,n=this;n.defaults={accessibility:!0,adaptiveHeight:!1,appendArrows:i(t),appendDots:i(t),arrows:!0,asNavFor:null,prevArrow:'<button class="slick-prev" aria-label="Previous" type="button">Previous</button>',nextArrow:'<button class="slick-next" aria-label="Next" type="button">Next</button>',autoplay:!1,autoplaySpeed:3e3,centerMode:!1,centerPadding:"50px",cssEase:"ease",customPaging:function(e,t){return i('<button type="button" />').text(t+1)},dots:!1,dotsClass:"slick-dots",draggable:!0,easing:"linear",edgeFriction:.35,fade:!1,focusOnSelect:!1,focusOnChange:!1,infinite:!0,initialSlide:0,lazyLoad:"ondemand",mobileFirst:!1,pauseOnHover:!0,pauseOnFocus:!0,pauseOnDotsHover:!1,respondTo:"window",responsive:null,rows:1,rtl:!1,slide:"",slidesPerRow:1,slidesToShow:1,slidesToScroll:1,speed:500,swipe:!0,swipeToSlide:!1,touchMove:!0,touchThreshold:5,useCSS:!0,useTransform:!0,variableWidth:!1,vertical:!1,verticalSwiping:!1,waitForAnimate:!0,zIndex:1e3},n.initials={animating:!1,dragging:!1,autoPlayTimer:null,currentDirection:0,currentLeft:null,currentSlide:0,direction:1,$dots:null,listWidth:null,listHeight:null,loadIndex:0,$nextArrow:null,$prevArrow:null,scrolling:!1,slideCount:null,slideWidth:null,$slideTrack:null,$slides:null,sliding:!1,slideOffset:0,swipeLeft:null,swiping:!1,$list:null,touchObject:{},transformsEnabled:!1,unslicked:!1},i.extend(n,n.initials),n.activeBreakpoint=null,n.animType=null,n.animProp=null,n.breakpoints=[],n.breakpointSettings=[],n.cssTransitions=!1,n.focussed=!1,n.interrupted=!1,n.hidden="hidden",n.paused=!0,n.positionProp=null,n.respondTo=null,n.rowCount=1,n.shouldClick=!0,n.$slider=i(t),n.$slidesCache=null,n.transformType=null,n.transitionType=null,n.visibilityChange="visibilitychange",n.windowWidth=0,n.windowTimer=null,s=i(t).data("slick")||{},n.options=i.extend({},n.defaults,o,s),n.currentSlide=n.options.initialSlide,n.originalSettings=n.options,void 0!==document.mozHidden?(n.hidden="mozHidden",n.visibilityChange="mozvisibilitychange"):void 0!==document.webkitHidden&&(n.hidden="webkitHidden",n.visibilityChange="webkitvisibilitychange"),n.autoPlay=i.proxy(n.autoPlay,n),n.autoPlayClear=i.proxy(n.autoPlayClear,n),n.autoPlayIterator=i.proxy(n.autoPlayIterator,n),n.changeSlide=i.proxy(n.changeSlide,n),n.clickHandler=i.proxy(n.clickHandler,n),n.selectHandler=i.proxy(n.selectHandler,n),n.setPosition=i.proxy(n.setPosition,n),n.swipeHandler=i.proxy(n.swipeHandler,n),n.dragHandler=i.proxy(n.dragHandler,n),n.keyHandler=i.proxy(n.keyHandler,n),n.instanceUid=e++,n.htmlExpr=/^(?:\s*(<[\w\W]+>)[^>]*)$/,n.registerBreakpoints(),n.init(!0)}}()).prototype.activateADA=function(){this.$slideTrack.find(".slick-active").attr({"aria-hidden":"false"}).find("a, input, button, select").attr({tabindex:"0"})},e.prototype.addSlide=e.prototype.slickAdd=function(e,t,o){var s=this;if("boolean"==typeof t)o=t,t=null;else if(t<0||t>=s.slideCount)return!1;s.unload(),"number"==typeof t?0===t&&0===s.$slides.length?i(e).appendTo(s.$slideTrack):o?i(e).insertBefore(s.$slides.eq(t)):i(e).insertAfter(s.$slides.eq(t)):!0===o?i(e).prependTo(s.$slideTrack):i(e).appendTo(s.$slideTrack),s.$slides=s.$slideTrack.children(this.options.slide),s.$slideTrack.children(this.options.slide).detach(),s.$slideTrack.append(s.$slides),s.$slides.each(function(e,t){i(t).attr("data-slick-index",e)}),s.$slidesCache=s.$slides,s.reinit()},e.prototype.animateHeight=function(){var i=this;if(1===i.options.slidesToShow&&!0===i.options.adaptiveHeight&&!1===i.options.vertical){var e=i.$slides.eq(i.currentSlide).outerHeight(!0);i.$list.animate({height:e},i.options.speed)}},e.prototype.animateSlide=function(e,t){var o={},s=this;s.animateHeight(),!0===s.options.rtl&&!1===s.options.vertical&&(e=-e),!1===s.transformsEnabled?!1===s.options.vertical?s.$slideTrack.animate({left:e},s.options.speed,s.options.easing,t):s.$slideTrack.animate({top:e},s.options.speed,s.options.easing,t):!1===s.cssTransitions?(!0===s.options.rtl&&(s.currentLeft=-s.currentLeft),i({animStart:s.currentLeft}).animate({animStart:e},{duration:s.options.speed,easing:s.options.easing,step:function(i){i=Math.ceil(i),!1===s.options.vertical?(o[s.animType]="translate("+i+"px, 0px)",s.$slideTrack.css(o)):(o[s.animType]="translate(0px,"+i+"px)",s.$slideTrack.css(o))},complete:function(){t&&t.call()}})):(s.applyTransition(),e=Math.ceil(e),!1===s.options.vertical?o[s.animType]="translate3d("+e+"px, 0px, 0px)":o[s.animType]="translate3d(0px,"+e+"px, 0px)",s.$slideTrack.css(o),t&&setTimeout(function(){s.disableTransition(),t.call()},s.options.speed))},e.prototype.getNavTarget=function(){var e=this,t=e.options.asNavFor;return t&&null!==t&&(t=i(t).not(e.$slider)),t},e.prototype.asNavFor=function(e){var t=this.getNavTarget();null!==t&&"object"==typeof t&&t.each(function(){var t=i(this).slick("getSlick");t.unslicked||t.slideHandler(e,!0)})},e.prototype.applyTransition=function(i){var e=this,t={};!1===e.options.fade?t[e.transitionType]=e.transformType+" "+e.options.speed+"ms "+e.options.cssEase:t[e.transitionType]="opacity "+e.options.speed+"ms "+e.options.cssEase,!1===e.options.fade?e.$slideTrack.css(t):e.$slides.eq(i).css(t)},e.prototype.autoPlay=function(){var i=this;i.autoPlayClear(),i.slideCount>i.options.slidesToShow&&(i.autoPlayTimer=setInterval(i.autoPlayIterator,i.options.autoplaySpeed))},e.prototype.autoPlayClear=function(){var i=this;i.autoPlayTimer&&clearInterval(i.autoPlayTimer)},e.prototype.autoPlayIterator=function(){var i=this,e=i.currentSlide+i.options.slidesToScroll;i.paused||i.interrupted||i.focussed||(!1===i.options.infinite&&(1===i.direction&&i.currentSlide+1===i.slideCount-1?i.direction=0:0===i.direction&&(e=i.currentSlide-i.options.slidesToScroll,i.currentSlide-1==0&&(i.direction=1))),i.slideHandler(e))},e.prototype.buildArrows=function(){var e=this;!0===e.options.arrows&&(e.$prevArrow=i(e.options.prevArrow).addClass("slick-arrow"),e.$nextArrow=i(e.options.nextArrow).addClass("slick-arrow"),e.slideCount>e.options.slidesToShow?(e.$prevArrow.removeClass("slick-hidden").removeAttr("aria-hidden tabindex"),e.$nextArrow.removeClass("slick-hidden").removeAttr("aria-hidden tabindex"),e.htmlExpr.test(e.options.prevArrow)&&e.$prevArrow.prependTo(e.options.appendArrows),e.htmlExpr.test(e.options.nextArrow)&&e.$nextArrow.appendTo(e.options.appendArrows),!0!==e.options.infinite&&e.$prevArrow.addClass("slick-disabled").attr("aria-disabled","true")):e.$prevArrow.add(e.$nextArrow).addClass("slick-hidden").attr({"aria-disabled":"true",tabindex:"-1"}))},e.prototype.buildDots=function(){var e,t,o=this;if(!0===o.options.dots){for(o.$slider.addClass("slick-dotted"),t=i("<ul />").addClass(o.options.dotsClass),e=0;e<=o.getDotCount();e+=1)t.append(i("<li />").append(o.options.customPaging.call(this,o,e)));o.$dots=t.appendTo(o.options.appendDots),o.$dots.find("li").first().addClass("slick-active")}},e.prototype.buildOut=function(){var e=this;e.$slides=e.$slider.children(e.options.slide+":not(.slick-cloned)").addClass("slick-slide"),e.slideCount=e.$slides.length,e.$slides.each(function(e,t){i(t).attr("data-slick-index",e).data("originalStyling",i(t).attr("style")||"")}),e.$slider.addClass("slick-slider"),e.$slideTrack=0===e.slideCount?i('<div class="slick-track"/>').appendTo(e.$slider):e.$slides.wrapAll('<div class="slick-track"/>').parent(),e.$list=e.$slideTrack.wrap('<div class="slick-list"/>').parent(),e.$slideTrack.css("opacity",0),!0!==e.options.centerMode&&!0!==e.options.swipeToSlide||(e.options.slidesToScroll=1),i("img[data-lazy]",e.$slider).not("[src]").addClass("slick-loading"),e.setupInfinite(),e.buildArrows(),e.buildDots(),e.updateDots(),e.setSlideClasses("number"==typeof e.currentSlide?e.currentSlide:0),!0===e.options.draggable&&e.$list.addClass("draggable")},e.prototype.buildRows=function(){var i,e,t,o,s,n,r,l=this;if(o=document.createDocumentFragment(),n=l.$slider.children(),l.options.rows>1){for(r=l.options.slidesPerRow*l.options.rows,s=Math.ceil(n.length/r),i=0;i<s;i++){var d=document.createElement("div");for(e=0;e<l.options.rows;e++){var a=document.createElement("div");for(t=0;t<l.options.slidesPerRow;t++){var c=i*r+(e*l.options.slidesPerRow+t);n.get(c)&&a.appendChild(n.get(c))}d.appendChild(a)}o.appendChild(d)}l.$slider.empty().append(o),l.$slider.children().children().children().css({width:100/l.options.slidesPerRow+"%",display:"inline-block"})}},e.prototype.checkResponsive=function(e,t){var o,s,n,r=this,l=!1,d=r.$slider.width(),a=window.innerWidth||i(window).width();if("window"===r.respondTo?n=a:"slider"===r.respondTo?n=d:"min"===r.respondTo&&(n=Math.min(a,d)),r.options.responsive&&r.options.responsive.length&&null!==r.options.responsive){s=null;for(o in r.breakpoints)r.breakpoints.hasOwnProperty(o)&&(!1===r.originalSettings.mobileFirst?n<r.breakpoints[o]&&(s=r.breakpoints[o]):n>r.breakpoints[o]&&(s=r.breakpoints[o]));null!==s?null!==r.activeBreakpoint?(s!==r.activeBreakpoint||t)&&(r.activeBreakpoint=s,"unslick"===r.breakpointSettings[s]?r.unslick(s):(r.options=i.extend({},r.originalSettings,r.breakpointSettings[s]),!0===e&&(r.currentSlide=r.options.initialSlide),r.refresh(e)),l=s):(r.activeBreakpoint=s,"unslick"===r.breakpointSettings[s]?r.unslick(s):(r.options=i.extend({},r.originalSettings,r.breakpointSettings[s]),!0===e&&(r.currentSlide=r.options.initialSlide),r.refresh(e)),l=s):null!==r.activeBreakpoint&&(r.activeBreakpoint=null,r.options=r.originalSettings,!0===e&&(r.currentSlide=r.options.initialSlide),r.refresh(e),l=s),e||!1===l||r.$slider.trigger("breakpoint",[r,l])}},e.prototype.changeSlide=function(e,t){var o,s,n,r=this,l=i(e.currentTarget);switch(l.is("a")&&e.preventDefault(),l.is("li")||(l=l.closest("li")),n=r.slideCount%r.options.slidesToScroll!=0,o=n?0:(r.slideCount-r.currentSlide)%r.options.slidesToScroll,e.data.message){case"previous":s=0===o?r.options.slidesToScroll:r.options.slidesToShow-o,r.slideCount>r.options.slidesToShow&&r.slideHandler(r.currentSlide-s,!1,t);break;case"next":s=0===o?r.options.slidesToScroll:o,r.slideCount>r.options.slidesToShow&&r.slideHandler(r.currentSlide+s,!1,t);break;case"index":var d=0===e.data.index?0:e.data.index||l.index()*r.options.slidesToScroll;r.slideHandler(r.checkNavigable(d),!1,t),l.children().trigger("focus");break;default:return}},e.prototype.checkNavigable=function(i){var e,t;if(e=this.getNavigableIndexes(),t=0,i>e[e.length-1])i=e[e.length-1];else for(var o in e){if(i<e[o]){i=t;break}t=e[o]}return i},e.prototype.cleanUpEvents=function(){var e=this;e.options.dots&&null!==e.$dots&&(i("li",e.$dots).off("click.slick",e.changeSlide).off("mouseenter.slick",i.proxy(e.interrupt,e,!0)).off("mouseleave.slick",i.proxy(e.interrupt,e,!1)),!0===e.options.accessibility&&e.$dots.off("keydown.slick",e.keyHandler)),e.$slider.off("focus.slick blur.slick"),!0===e.options.arrows&&e.slideCount>e.options.slidesToShow&&(e.$prevArrow&&e.$prevArrow.off("click.slick",e.changeSlide),e.$nextArrow&&e.$nextArrow.off("click.slick",e.changeSlide),!0===e.options.accessibility&&(e.$prevArrow&&e.$prevArrow.off("keydown.slick",e.keyHandler),e.$nextArrow&&e.$nextArrow.off("keydown.slick",e.keyHandler))),e.$list.off("touchstart.slick mousedown.slick",e.swipeHandler),e.$list.off("touchmove.slick mousemove.slick",e.swipeHandler),e.$list.off("touchend.slick mouseup.slick",e.swipeHandler),e.$list.off("touchcancel.slick mouseleave.slick",e.swipeHandler),e.$list.off("click.slick",e.clickHandler),i(document).off(e.visibilityChange,e.visibility),e.cleanUpSlideEvents(),!0===e.options.accessibility&&e.$list.off("keydown.slick",e.keyHandler),!0===e.options.focusOnSelect&&i(e.$slideTrack).children().off("click.slick",e.selectHandler),i(window).off("orientationchange.slick.slick-"+e.instanceUid,e.orientationChange),i(window).off("resize.slick.slick-"+e.instanceUid,e.resize),i("[draggable!=true]",e.$slideTrack).off("dragstart",e.preventDefault),i(window).off("load.slick.slick-"+e.instanceUid,e.setPosition)},e.prototype.cleanUpSlideEvents=function(){var e=this;e.$list.off("mouseenter.slick",i.proxy(e.interrupt,e,!0)),e.$list.off("mouseleave.slick",i.proxy(e.interrupt,e,!1))},e.prototype.cleanUpRows=function(){var i,e=this;e.options.rows>1&&((i=e.$slides.children().children()).removeAttr("style"),e.$slider.empty().append(i))},e.prototype.clickHandler=function(i){!1===this.shouldClick&&(i.stopImmediatePropagation(),i.stopPropagation(),i.preventDefault())},e.prototype.destroy=function(e){var t=this;t.autoPlayClear(),t.touchObject={},t.cleanUpEvents(),i(".slick-cloned",t.$slider).detach(),t.$dots&&t.$dots.remove(),t.$prevArrow&&t.$prevArrow.length&&(t.$prevArrow.removeClass("slick-disabled slick-arrow slick-hidden").removeAttr("aria-hidden aria-disabled tabindex").css("display",""),t.htmlExpr.test(t.options.prevArrow)&&t.$prevArrow.remove()),t.$nextArrow&&t.$nextArrow.length&&(t.$nextArrow.removeClass("slick-disabled slick-arrow slick-hidden").removeAttr("aria-hidden aria-disabled tabindex").css("display",""),t.htmlExpr.test(t.options.nextArrow)&&t.$nextArrow.remove()),t.$slides&&(t.$slides.removeClass("slick-slide slick-active slick-center slick-visible slick-current").removeAttr("aria-hidden").removeAttr("data-slick-index").each(function(){i(this).attr("style",i(this).data("originalStyling"))}),t.$slideTrack.children(this.options.slide).detach(),t.$slideTrack.detach(),t.$list.detach(),t.$slider.append(t.$slides)),t.cleanUpRows(),t.$slider.removeClass("slick-slider"),t.$slider.removeClass("slick-initialized"),t.$slider.removeClass("slick-dotted"),t.unslicked=!0,e||t.$slider.trigger("destroy",[t])},e.prototype.disableTransition=function(i){var e=this,t={};t[e.transitionType]="",!1===e.options.fade?e.$slideTrack.css(t):e.$slides.eq(i).css(t)},e.prototype.fadeSlide=function(i,e){var t=this;!1===t.cssTransitions?(t.$slides.eq(i).css({zIndex:t.options.zIndex}),t.$slides.eq(i).animate({opacity:1},t.options.speed,t.options.easing,e)):(t.applyTransition(i),t.$slides.eq(i).css({opacity:1,zIndex:t.options.zIndex}),e&&setTimeout(function(){t.disableTransition(i),e.call()},t.options.speed))},e.prototype.fadeSlideOut=function(i){var e=this;!1===e.cssTransitions?e.$slides.eq(i).animate({opacity:0,zIndex:e.options.zIndex-2},e.options.speed,e.options.easing):(e.applyTransition(i),e.$slides.eq(i).css({opacity:0,zIndex:e.options.zIndex-2}))},e.prototype.filterSlides=e.prototype.slickFilter=function(i){var e=this;null!==i&&(e.$slidesCache=e.$slides,e.unload(),e.$slideTrack.children(this.options.slide).detach(),e.$slidesCache.filter(i).appendTo(e.$slideTrack),e.reinit())},e.prototype.focusHandler=function(){var e=this;e.$slider.off("focus.slick blur.slick").on("focus.slick blur.slick","*",function(t){t.stopImmediatePropagation();var o=i(this);setTimeout(function(){e.options.pauseOnFocus&&(e.focussed=o.is(":focus"),e.autoPlay())},0)})},e.prototype.getCurrent=e.prototype.slickCurrentSlide=function(){return this.currentSlide},e.prototype.getDotCount=function(){var i=this,e=0,t=0,o=0;if(!0===i.options.infinite)if(i.slideCount<=i.options.slidesToShow)++o;else for(;e<i.slideCount;)++o,e=t+i.options.slidesToScroll,t+=i.options.slidesToScroll<=i.options.slidesToShow?i.options.slidesToScroll:i.options.slidesToShow;else if(!0===i.options.centerMode)o=i.slideCount;else if(i.options.asNavFor)for(;e<i.slideCount;)++o,e=t+i.options.slidesToScroll,t+=i.options.slidesToScroll<=i.options.slidesToShow?i.options.slidesToScroll:i.options.slidesToShow;else o=1+Math.ceil((i.slideCount-i.options.slidesToShow)/i.options.slidesToScroll);return o-1},e.prototype.getLeft=function(i){var e,t,o,s,n=this,r=0;return n.slideOffset=0,t=n.$slides.first().outerHeight(!0),!0===n.options.infinite?(n.slideCount>n.options.slidesToShow&&(n.slideOffset=n.slideWidth*n.options.slidesToShow*-1,s=-1,!0===n.options.vertical&&!0===n.options.centerMode&&(2===n.options.slidesToShow?s=-1.5:1===n.options.slidesToShow&&(s=-2)),r=t*n.options.slidesToShow*s),n.slideCount%n.options.slidesToScroll!=0&&i+n.options.slidesToScroll>n.slideCount&&n.slideCount>n.options.slidesToShow&&(i>n.slideCount?(n.slideOffset=(n.options.slidesToShow-(i-n.slideCount))*n.slideWidth*-1,r=(n.options.slidesToShow-(i-n.slideCount))*t*-1):(n.slideOffset=n.slideCount%n.options.slidesToScroll*n.slideWidth*-1,r=n.slideCount%n.options.slidesToScroll*t*-1))):i+n.options.slidesToShow>n.slideCount&&(n.slideOffset=(i+n.options.slidesToShow-n.slideCount)*n.slideWidth,r=(i+n.options.slidesToShow-n.slideCount)*t),n.slideCount<=n.options.slidesToShow&&(n.slideOffset=0,r=0),!0===n.options.centerMode&&n.slideCount<=n.options.slidesToShow?n.slideOffset=n.slideWidth*Math.floor(n.options.slidesToShow)/2-n.slideWidth*n.slideCount/2:!0===n.options.centerMode&&!0===n.options.infinite?n.slideOffset+=n.slideWidth*Math.floor(n.options.slidesToShow/2)-n.slideWidth:!0===n.options.centerMode&&(n.slideOffset=0,n.slideOffset+=n.slideWidth*Math.floor(n.options.slidesToShow/2)),e=!1===n.options.vertical?i*n.slideWidth*-1+n.slideOffset:i*t*-1+r,!0===n.options.variableWidth&&(o=n.slideCount<=n.options.slidesToShow||!1===n.options.infinite?n.$slideTrack.children(".slick-slide").eq(i):n.$slideTrack.children(".slick-slide").eq(i+n.options.slidesToShow),e=!0===n.options.rtl?o[0]?-1*(n.$slideTrack.width()-o[0].offsetLeft-o.width()):0:o[0]?-1*o[0].offsetLeft:0,!0===n.options.centerMode&&(o=n.slideCount<=n.options.slidesToShow||!1===n.options.infinite?n.$slideTrack.children(".slick-slide").eq(i):n.$slideTrack.children(".slick-slide").eq(i+n.options.slidesToShow+1),e=!0===n.options.rtl?o[0]?-1*(n.$slideTrack.width()-o[0].offsetLeft-o.width()):0:o[0]?-1*o[0].offsetLeft:0,e+=(n.$list.width()-o.outerWidth())/2)),e},e.prototype.getOption=e.prototype.slickGetOption=function(i){return this.options[i]},e.prototype.getNavigableIndexes=function(){var i,e=this,t=0,o=0,s=[];for(!1===e.options.infinite?i=e.slideCount:(t=-1*e.options.slidesToScroll,o=-1*e.options.slidesToScroll,i=2*e.slideCount);t<i;)s.push(t),t=o+e.options.slidesToScroll,o+=e.options.slidesToScroll<=e.options.slidesToShow?e.options.slidesToScroll:e.options.slidesToShow;return s},e.prototype.getSlick=function(){return this},e.prototype.getSlideCount=function(){var e,t,o=this;return t=!0===o.options.centerMode?o.slideWidth*Math.floor(o.options.slidesToShow/2):0,!0===o.options.swipeToSlide?(o.$slideTrack.find(".slick-slide").each(function(s,n){if(n.offsetLeft-t+i(n).outerWidth()/2>-1*o.swipeLeft)return e=n,!1}),Math.abs(i(e).attr("data-slick-index")-o.currentSlide)||1):o.options.slidesToScroll},e.prototype.goTo=e.prototype.slickGoTo=function(i,e){this.changeSlide({data:{message:"index",index:parseInt(i)}},e)},e.prototype.init=function(e){var t=this;i(t.$slider).hasClass("slick-initialized")||(i(t.$slider).addClass("slick-initialized"),t.buildRows(),t.buildOut(),t.setProps(),t.startLoad(),t.loadSlider(),t.initializeEvents(),t.updateArrows(),t.updateDots(),t.checkResponsive(!0),t.focusHandler()),e&&t.$slider.trigger("init",[t]),!0===t.options.accessibility&&t.initADA(),t.options.autoplay&&(t.paused=!1,t.autoPlay())},e.prototype.initADA=function(){var e=this,t=Math.ceil(e.slideCount/e.options.slidesToShow),o=e.getNavigableIndexes().filter(function(i){return i>=0&&i<e.slideCount});e.$slides.add(e.$slideTrack.find(".slick-cloned")).attr({"aria-hidden":"true",tabindex:"-1"}).find("a, input, button, select").attr({tabindex:"-1"}),null!==e.$dots&&(e.$slides.not(e.$slideTrack.find(".slick-cloned")).each(function(t){var s=o.indexOf(t);i(this).attr({role:"tabpanel",id:"slick-slide"+e.instanceUid+t,tabindex:-1}),-1!==s&&i(this).attr({"aria-describedby":"slick-slide-control"+e.instanceUid+s})}),e.$dots.attr("role","tablist").find("li").each(function(s){var n=o[s];i(this).attr({role:"presentation"}),i(this).find("button").first().attr({role:"tab",id:"slick-slide-control"+e.instanceUid+s,"aria-controls":"slick-slide"+e.instanceUid+n,"aria-label":s+1+" of "+t,"aria-selected":null,tabindex:"-1"})}).eq(e.currentSlide).find("button").attr({"aria-selected":"true",tabindex:"0"}).end());for(var s=e.currentSlide,n=s+e.options.slidesToShow;s<n;s++)e.$slides.eq(s).attr("tabindex",0);e.activateADA()},e.prototype.initArrowEvents=function(){var i=this;!0===i.options.arrows&&i.slideCount>i.options.slidesToShow&&(i.$prevArrow.off("click.slick").on("click.slick",{message:"previous"},i.changeSlide),i.$nextArrow.off("click.slick").on("click.slick",{message:"next"},i.changeSlide),!0===i.options.accessibility&&(i.$prevArrow.on("keydown.slick",i.keyHandler),i.$nextArrow.on("keydown.slick",i.keyHandler)))},e.prototype.initDotEvents=function(){var e=this;!0===e.options.dots&&(i("li",e.$dots).on("click.slick",{message:"index"},e.changeSlide),!0===e.options.accessibility&&e.$dots.on("keydown.slick",e.keyHandler)),!0===e.options.dots&&!0===e.options.pauseOnDotsHover&&i("li",e.$dots).on("mouseenter.slick",i.proxy(e.interrupt,e,!0)).on("mouseleave.slick",i.proxy(e.interrupt,e,!1))},e.prototype.initSlideEvents=function(){var e=this;e.options.pauseOnHover&&(e.$list.on("mouseenter.slick",i.proxy(e.interrupt,e,!0)),e.$list.on("mouseleave.slick",i.proxy(e.interrupt,e,!1)))},e.prototype.initializeEvents=function(){var e=this;e.initArrowEvents(),e.initDotEvents(),e.initSlideEvents(),e.$list.on("touchstart.slick mousedown.slick",{action:"start"},e.swipeHandler),e.$list.on("touchmove.slick mousemove.slick",{action:"move"},e.swipeHandler),e.$list.on("touchend.slick mouseup.slick",{action:"end"},e.swipeHandler),e.$list.on("touchcancel.slick mouseleave.slick",{action:"end"},e.swipeHandler),e.$list.on("click.slick",e.clickHandler),i(document).on(e.visibilityChange,i.proxy(e.visibility,e)),!0===e.options.accessibility&&e.$list.on("keydown.slick",e.keyHandler),!0===e.options.focusOnSelect&&i(e.$slideTrack).children().on("click.slick",e.selectHandler),i(window).on("orientationchange.slick.slick-"+e.instanceUid,i.proxy(e.orientationChange,e)),i(window).on("resize.slick.slick-"+e.instanceUid,i.proxy(e.resize,e)),i("[draggable!=true]",e.$slideTrack).on("dragstart",e.preventDefault),i(window).on("load.slick.slick-"+e.instanceUid,e.setPosition),i(e.setPosition)},e.prototype.initUI=function(){var i=this;!0===i.options.arrows&&i.slideCount>i.options.slidesToShow&&(i.$prevArrow.show(),i.$nextArrow.show()),!0===i.options.dots&&i.slideCount>i.options.slidesToShow&&i.$dots.show()},e.prototype.keyHandler=function(i){var e=this;i.target.tagName.match("TEXTAREA|INPUT|SELECT")||(37===i.keyCode&&!0===e.options.accessibility?e.changeSlide({data:{message:!0===e.options.rtl?"next":"previous"}}):39===i.keyCode&&!0===e.options.accessibility&&e.changeSlide({data:{message:!0===e.options.rtl?"previous":"next"}}))},e.prototype.lazyLoad=function(){function e(e){i("img[data-lazy]",e).each(function(){var e=i(this),t=i(this).attr("data-lazy"),o=i(this).attr("data-srcset"),s=i(this).attr("data-sizes")||n.$slider.attr("data-sizes"),r=document.createElement("img");r.onload=function(){e.animate({opacity:0},100,function(){o&&(e.attr("srcset",o),s&&e.attr("sizes",s)),e.attr("src",t).animate({opacity:1},200,function(){e.removeAttr("data-lazy data-srcset data-sizes").removeClass("slick-loading")}),n.$slider.trigger("lazyLoaded",[n,e,t])})},r.onerror=function(){e.removeAttr("data-lazy").removeClass("slick-loading").addClass("slick-lazyload-error"),n.$slider.trigger("lazyLoadError",[n,e,t])},r.src=t})}var t,o,s,n=this;if(!0===n.options.centerMode?!0===n.options.infinite?s=(o=n.currentSlide+(n.options.slidesToShow/2+1))+n.options.slidesToShow+2:(o=Math.max(0,n.currentSlide-(n.options.slidesToShow/2+1)),s=n.options.slidesToShow/2+1+2+n.currentSlide):(o=n.options.infinite?n.options.slidesToShow+n.currentSlide:n.currentSlide,s=Math.ceil(o+n.options.slidesToShow),!0===n.options.fade&&(o>0&&o--,s<=n.slideCount&&s++)),t=n.$slider.find(".slick-slide").slice(o,s),"anticipated"===n.options.lazyLoad)for(var r=o-1,l=s,d=n.$slider.find(".slick-slide"),a=0;a<n.options.slidesToScroll;a++)r<0&&(r=n.slideCount-1),t=(t=t.add(d.eq(r))).add(d.eq(l)),r--,l++;e(t),n.slideCount<=n.options.slidesToShow?e(n.$slider.find(".slick-slide")):n.currentSlide>=n.slideCount-n.options.slidesToShow?e(n.$slider.find(".slick-cloned").slice(0,n.options.slidesToShow)):0===n.currentSlide&&e(n.$slider.find(".slick-cloned").slice(-1*n.options.slidesToShow))},e.prototype.loadSlider=function(){var i=this;i.setPosition(),i.$slideTrack.css({opacity:1}),i.$slider.removeClass("slick-loading"),i.initUI(),"progressive"===i.options.lazyLoad&&i.progressiveLazyLoad()},e.prototype.next=e.prototype.slickNext=function(){this.changeSlide({data:{message:"next"}})},e.prototype.orientationChange=function(){var i=this;i.checkResponsive(),i.setPosition()},e.prototype.pause=e.prototype.slickPause=function(){var i=this;i.autoPlayClear(),i.paused=!0},e.prototype.play=e.prototype.slickPlay=function(){var i=this;i.autoPlay(),i.options.autoplay=!0,i.paused=!1,i.focussed=!1,i.interrupted=!1},e.prototype.postSlide=function(e){var t=this;t.unslicked||(t.$slider.trigger("afterChange",[t,e]),t.animating=!1,t.slideCount>t.options.slidesToShow&&t.setPosition(),t.swipeLeft=null,t.options.autoplay&&t.autoPlay(),!0===t.options.accessibility&&(t.initADA(),t.options.focusOnChange&&i(t.$slides.get(t.currentSlide)).attr("tabindex",0).focus()))},e.prototype.prev=e.prototype.slickPrev=function(){this.changeSlide({data:{message:"previous"}})},e.prototype.preventDefault=function(i){i.preventDefault()},e.prototype.progressiveLazyLoad=function(e){e=e||1;var t,o,s,n,r,l=this,d=i("img[data-lazy]",l.$slider);d.length?(t=d.first(),o=t.attr("data-lazy"),s=t.attr("data-srcset"),n=t.attr("data-sizes")||l.$slider.attr("data-sizes"),(r=document.createElement("img")).onload=function(){s&&(t.attr("srcset",s),n&&t.attr("sizes",n)),t.attr("src",o).removeAttr("data-lazy data-srcset data-sizes").removeClass("slick-loading"),!0===l.options.adaptiveHeight&&l.setPosition(),l.$slider.trigger("lazyLoaded",[l,t,o]),l.progressiveLazyLoad()},r.onerror=function(){e<3?setTimeout(function(){l.progressiveLazyLoad(e+1)},500):(t.removeAttr("data-lazy").removeClass("slick-loading").addClass("slick-lazyload-error"),l.$slider.trigger("lazyLoadError",[l,t,o]),l.progressiveLazyLoad())},r.src=o):l.$slider.trigger("allImagesLoaded",[l])},e.prototype.refresh=function(e){var t,o,s=this;o=s.slideCount-s.options.slidesToShow,!s.options.infinite&&s.currentSlide>o&&(s.currentSlide=o),s.slideCount<=s.options.slidesToShow&&(s.currentSlide=0),t=s.currentSlide,s.destroy(!0),i.extend(s,s.initials,{currentSlide:t}),s.init(),e||s.changeSlide({data:{message:"index",index:t}},!1)},e.prototype.registerBreakpoints=function(){var e,t,o,s=this,n=s.options.responsive||null;if("array"===i.type(n)&&n.length){s.respondTo=s.options.respondTo||"window";for(e in n)if(o=s.breakpoints.length-1,n.hasOwnProperty(e)){for(t=n[e].breakpoint;o>=0;)s.breakpoints[o]&&s.breakpoints[o]===t&&s.breakpoints.splice(o,1),o--;s.breakpoints.push(t),s.breakpointSettings[t]=n[e].settings}s.breakpoints.sort(function(i,e){return s.options.mobileFirst?i-e:e-i})}},e.prototype.reinit=function(){var e=this;e.$slides=e.$slideTrack.children(e.options.slide).addClass("slick-slide"),e.slideCount=e.$slides.length,e.currentSlide>=e.slideCount&&0!==e.currentSlide&&(e.currentSlide=e.currentSlide-e.options.slidesToScroll),e.slideCount<=e.options.slidesToShow&&(e.currentSlide=0),e.registerBreakpoints(),e.setProps(),e.setupInfinite(),e.buildArrows(),e.updateArrows(),e.initArrowEvents(),e.buildDots(),e.updateDots(),e.initDotEvents(),e.cleanUpSlideEvents(),e.initSlideEvents(),e.checkResponsive(!1,!0),!0===e.options.focusOnSelect&&i(e.$slideTrack).children().on("click.slick",e.selectHandler),e.setSlideClasses("number"==typeof e.currentSlide?e.currentSlide:0),e.setPosition(),e.focusHandler(),e.paused=!e.options.autoplay,e.autoPlay(),e.$slider.trigger("reInit",[e])},e.prototype.resize=function(){var e=this;i(window).width()!==e.windowWidth&&(clearTimeout(e.windowDelay),e.windowDelay=window.setTimeout(function(){e.windowWidth=i(window).width(),e.checkResponsive(),e.unslicked||e.setPosition()},50))},e.prototype.removeSlide=e.prototype.slickRemove=function(i,e,t){var o=this;if(i="boolean"==typeof i?!0===(e=i)?0:o.slideCount-1:!0===e?--i:i,o.slideCount<1||i<0||i>o.slideCount-1)return!1;o.unload(),!0===t?o.$slideTrack.children().remove():o.$slideTrack.children(this.options.slide).eq(i).remove(),o.$slides=o.$slideTrack.children(this.options.slide),o.$slideTrack.children(this.options.slide).detach(),o.$slideTrack.append(o.$slides),o.$slidesCache=o.$slides,o.reinit()},e.prototype.setCSS=function(i){var e,t,o=this,s={};!0===o.options.rtl&&(i=-i),e="left"==o.positionProp?Math.ceil(i)+"px":"0px",t="top"==o.positionProp?Math.ceil(i)+"px":"0px",s[o.positionProp]=i,!1===o.transformsEnabled?o.$slideTrack.css(s):(s={},!1===o.cssTransitions?(s[o.animType]="translate("+e+", "+t+")",o.$slideTrack.css(s)):(s[o.animType]="translate3d("+e+", "+t+", 0px)",o.$slideTrack.css(s)))},e.prototype.setDimensions=function(){var i=this;!1===i.options.vertical?!0===i.options.centerMode&&i.$list.css({padding:"0px "+i.options.centerPadding}):(i.$list.height(i.$slides.first().outerHeight(!0)*i.options.slidesToShow),!0===i.options.centerMode&&i.$list.css({padding:i.options.centerPadding+" 0px"})),i.listWidth=i.$list.width(),i.listHeight=i.$list.height(),!1===i.options.vertical&&!1===i.options.variableWidth?(i.slideWidth=Math.ceil(i.listWidth/i.options.slidesToShow),i.$slideTrack.width(Math.ceil(i.slideWidth*i.$slideTrack.children(".slick-slide").length))):!0===i.options.variableWidth?i.$slideTrack.width(5e3*i.slideCount):(i.slideWidth=Math.ceil(i.listWidth),i.$slideTrack.height(Math.ceil(i.$slides.first().outerHeight(!0)*i.$slideTrack.children(".slick-slide").length)));var e=i.$slides.first().outerWidth(!0)-i.$slides.first().width();!1===i.options.variableWidth&&i.$slideTrack.children(".slick-slide").width(i.slideWidth-e)},e.prototype.setFade=function(){var e,t=this;t.$slides.each(function(o,s){e=t.slideWidth*o*-1,!0===t.options.rtl?i(s).css({position:"relative",right:e,top:0,zIndex:t.options.zIndex-2,opacity:0}):i(s).css({position:"relative",left:e,top:0,zIndex:t.options.zIndex-2,opacity:0})}),t.$slides.eq(t.currentSlide).css({zIndex:t.options.zIndex-1,opacity:1})},e.prototype.setHeight=function(){var i=this;if(1===i.options.slidesToShow&&!0===i.options.adaptiveHeight&&!1===i.options.vertical){var e=i.$slides.eq(i.currentSlide).outerHeight(!0);i.$list.css("height",e)}},e.prototype.setOption=e.prototype.slickSetOption=function(){var e,t,o,s,n,r=this,l=!1;if("object"===i.type(arguments[0])?(o=arguments[0],l=arguments[1],n="multiple"):"string"===i.type(arguments[0])&&(o=arguments[0],s=arguments[1],l=arguments[2],"responsive"===arguments[0]&&"array"===i.type(arguments[1])?n="responsive":void 0!==arguments[1]&&(n="single")),"single"===n)r.options[o]=s;else if("multiple"===n)i.each(o,function(i,e){r.options[i]=e});else if("responsive"===n)for(t in s)if("array"!==i.type(r.options.responsive))r.options.responsive=[s[t]];else{for(e=r.options.responsive.length-1;e>=0;)r.options.responsive[e].breakpoint===s[t].breakpoint&&r.options.responsive.splice(e,1),e--;r.options.responsive.push(s[t])}l&&(r.unload(),r.reinit())},e.prototype.setPosition=function(){var i=this;i.setDimensions(),i.setHeight(),!1===i.options.fade?i.setCSS(i.getLeft(i.currentSlide)):i.setFade(),i.$slider.trigger("setPosition",[i])},e.prototype.setProps=function(){var i=this,e=document.body.style;i.positionProp=!0===i.options.vertical?"top":"left","top"===i.positionProp?i.$slider.addClass("slick-vertical"):i.$slider.removeClass("slick-vertical"),void 0===e.WebkitTransition&&void 0===e.MozTransition&&void 0===e.msTransition||!0===i.options.useCSS&&(i.cssTransitions=!0),i.options.fade&&("number"==typeof i.options.zIndex?i.options.zIndex<3&&(i.options.zIndex=3):i.options.zIndex=i.defaults.zIndex),void 0!==e.OTransform&&(i.animType="OTransform",i.transformType="-o-transform",i.transitionType="OTransition",void 0===e.perspectiveProperty&&void 0===e.webkitPerspective&&(i.animType=!1)),void 0!==e.MozTransform&&(i.animType="MozTransform",i.transformType="-moz-transform",i.transitionType="MozTransition",void 0===e.perspectiveProperty&&void 0===e.MozPerspective&&(i.animType=!1)),void 0!==e.webkitTransform&&(i.animType="webkitTransform",i.transformType="-webkit-transform",i.transitionType="webkitTransition",void 0===e.perspectiveProperty&&void 0===e.webkitPerspective&&(i.animType=!1)),void 0!==e.msTransform&&(i.animType="msTransform",i.transformType="-ms-transform",i.transitionType="msTransition",void 0===e.msTransform&&(i.animType=!1)),void 0!==e.transform&&!1!==i.animType&&(i.animType="transform",i.transformType="transform",i.transitionType="transition"),i.transformsEnabled=i.options.useTransform&&null!==i.animType&&!1!==i.animType},e.prototype.setSlideClasses=function(i){var e,t,o,s,n=this;if(t=n.$slider.find(".slick-slide").removeClass("slick-active slick-center slick-current").attr("aria-hidden","true"),n.$slides.eq(i).addClass("slick-current"),!0===n.options.centerMode){var r=n.options.slidesToShow%2==0?1:0;e=Math.floor(n.options.slidesToShow/2),!0===n.options.infinite&&(i>=e&&i<=n.slideCount-1-e?n.$slides.slice(i-e+r,i+e+1).addClass("slick-active").attr("aria-hidden","false"):(o=n.options.slidesToShow+i,t.slice(o-e+1+r,o+e+2).addClass("slick-active").attr("aria-hidden","false")),0===i?t.eq(t.length-1-n.options.slidesToShow).addClass("slick-center"):i===n.slideCount-1&&t.eq(n.options.slidesToShow).addClass("slick-center")),n.$slides.eq(i).addClass("slick-center")}else i>=0&&i<=n.slideCount-n.options.slidesToShow?n.$slides.slice(i,i+n.options.slidesToShow).addClass("slick-active").attr("aria-hidden","false"):t.length<=n.options.slidesToShow?t.addClass("slick-active").attr("aria-hidden","false"):(s=n.slideCount%n.options.slidesToShow,o=!0===n.options.infinite?n.options.slidesToShow+i:i,n.options.slidesToShow==n.options.slidesToScroll&&n.slideCount-i<n.options.slidesToShow?t.slice(o-(n.options.slidesToShow-s),o+s).addClass("slick-active").attr("aria-hidden","false"):t.slice(o,o+n.options.slidesToShow).addClass("slick-active").attr("aria-hidden","false"));"ondemand"!==n.options.lazyLoad&&"anticipated"!==n.options.lazyLoad||n.lazyLoad()},e.prototype.setupInfinite=function(){var e,t,o,s=this;if(!0===s.options.fade&&(s.options.centerMode=!1),!0===s.options.infinite&&!1===s.options.fade&&(t=null,s.slideCount>s.options.slidesToShow)){for(o=!0===s.options.centerMode?s.options.slidesToShow+1:s.options.slidesToShow,e=s.slideCount;e>s.slideCount-o;e-=1)t=e-1,i(s.$slides[t]).clone(!0).attr("id","").attr("data-slick-index",t-s.slideCount).prependTo(s.$slideTrack).addClass("slick-cloned");for(e=0;e<o+s.slideCount;e+=1)t=e,i(s.$slides[t]).clone(!0).attr("id","").attr("data-slick-index",t+s.slideCount).appendTo(s.$slideTrack).addClass("slick-cloned");s.$slideTrack.find(".slick-cloned").find("[id]").each(function(){i(this).attr("id","")})}},e.prototype.interrupt=function(i){var e=this;i||e.autoPlay(),e.interrupted=i},e.prototype.selectHandler=function(e){var t=this,o=i(e.target).is(".slick-slide")?i(e.target):i(e.target).parents(".slick-slide"),s=parseInt(o.attr("data-slick-index"));s||(s=0),t.slideCount<=t.options.slidesToShow?t.slideHandler(s,!1,!0):t.slideHandler(s)},e.prototype.slideHandler=function(i,e,t){var o,s,n,r,l,d=null,a=this;if(e=e||!1,!(!0===a.animating&&!0===a.options.waitForAnimate||!0===a.options.fade&&a.currentSlide===i))if(!1===e&&a.asNavFor(i),o=i,d=a.getLeft(o),r=a.getLeft(a.currentSlide),a.currentLeft=null===a.swipeLeft?r:a.swipeLeft,!1===a.options.infinite&&!1===a.options.centerMode&&(i<0||i>a.getDotCount()*a.options.slidesToScroll))!1===a.options.fade&&(o=a.currentSlide,!0!==t?a.animateSlide(r,function(){a.postSlide(o)}):a.postSlide(o));else if(!1===a.options.infinite&&!0===a.options.centerMode&&(i<0||i>a.slideCount-a.options.slidesToScroll))!1===a.options.fade&&(o=a.currentSlide,!0!==t?a.animateSlide(r,function(){a.postSlide(o)}):a.postSlide(o));else{if(a.options.autoplay&&clearInterval(a.autoPlayTimer),s=o<0?a.slideCount%a.options.slidesToScroll!=0?a.slideCount-a.slideCount%a.options.slidesToScroll:a.slideCount+o:o>=a.slideCount?a.slideCount%a.options.slidesToScroll!=0?0:o-a.slideCount:o,a.animating=!0,a.$slider.trigger("beforeChange",[a,a.currentSlide,s]),n=a.currentSlide,a.currentSlide=s,a.setSlideClasses(a.currentSlide),a.options.asNavFor&&(l=(l=a.getNavTarget()).slick("getSlick")).slideCount<=l.options.slidesToShow&&l.setSlideClasses(a.currentSlide),a.updateDots(),a.updateArrows(),!0===a.options.fade)return!0!==t?(a.fadeSlideOut(n),a.fadeSlide(s,function(){a.postSlide(s)})):a.postSlide(s),void a.animateHeight();!0!==t?a.animateSlide(d,function(){a.postSlide(s)}):a.postSlide(s)}},e.prototype.startLoad=function(){var i=this;!0===i.options.arrows&&i.slideCount>i.options.slidesToShow&&(i.$prevArrow.hide(),i.$nextArrow.hide()),!0===i.options.dots&&i.slideCount>i.options.slidesToShow&&i.$dots.hide(),i.$slider.addClass("slick-loading")},e.prototype.swipeDirection=function(){var i,e,t,o,s=this;return i=s.touchObject.startX-s.touchObject.curX,e=s.touchObject.startY-s.touchObject.curY,t=Math.atan2(e,i),(o=Math.round(180*t/Math.PI))<0&&(o=360-Math.abs(o)),o<=45&&o>=0?!1===s.options.rtl?"left":"right":o<=360&&o>=315?!1===s.options.rtl?"left":"right":o>=135&&o<=225?!1===s.options.rtl?"right":"left":!0===s.options.verticalSwiping?o>=35&&o<=135?"down":"up":"vertical"},e.prototype.swipeEnd=function(i){var e,t,o=this;if(o.dragging=!1,o.swiping=!1,o.scrolling)return o.scrolling=!1,!1;if(o.interrupted=!1,o.shouldClick=!(o.touchObject.swipeLength>10),void 0===o.touchObject.curX)return!1;if(!0===o.touchObject.edgeHit&&o.$slider.trigger("edge",[o,o.swipeDirection()]),o.touchObject.swipeLength>=o.touchObject.minSwipe){switch(t=o.swipeDirection()){case"left":case"down":e=o.options.swipeToSlide?o.checkNavigable(o.currentSlide+o.getSlideCount()):o.currentSlide+o.getSlideCount(),o.currentDirection=0;break;case"right":case"up":e=o.options.swipeToSlide?o.checkNavigable(o.currentSlide-o.getSlideCount()):o.currentSlide-o.getSlideCount(),o.currentDirection=1}"vertical"!=t&&(o.slideHandler(e),o.touchObject={},o.$slider.trigger("swipe",[o,t]))}else o.touchObject.startX!==o.touchObject.curX&&(o.slideHandler(o.currentSlide),o.touchObject={})},e.prototype.swipeHandler=function(i){var e=this;if(!(!1===e.options.swipe||"ontouchend"in document&&!1===e.options.swipe||!1===e.options.draggable&&-1!==i.type.indexOf("mouse")))switch(e.touchObject.fingerCount=i.originalEvent&&void 0!==i.originalEvent.touches?i.originalEvent.touches.length:1,e.touchObject.minSwipe=e.listWidth/e.options.touchThreshold,!0===e.options.verticalSwiping&&(e.touchObject.minSwipe=e.listHeight/e.options.touchThreshold),i.data.action){case"start":e.swipeStart(i);break;case"move":e.swipeMove(i);break;case"end":e.swipeEnd(i)}},e.prototype.swipeMove=function(i){var e,t,o,s,n,r,l=this;return n=void 0!==i.originalEvent?i.originalEvent.touches:null,!(!l.dragging||l.scrolling||n&&1!==n.length)&&(e=l.getLeft(l.currentSlide),l.touchObject.curX=void 0!==n?n[0].pageX:i.clientX,l.touchObject.curY=void 0!==n?n[0].pageY:i.clientY,l.touchObject.swipeLength=Math.round(Math.sqrt(Math.pow(l.touchObject.curX-l.touchObject.startX,2))),r=Math.round(Math.sqrt(Math.pow(l.touchObject.curY-l.touchObject.startY,2))),!l.options.verticalSwiping&&!l.swiping&&r>4?(l.scrolling=!0,!1):(!0===l.options.verticalSwiping&&(l.touchObject.swipeLength=r),t=l.swipeDirection(),void 0!==i.originalEvent&&l.touchObject.swipeLength>4&&(l.swiping=!0,i.preventDefault()),s=(!1===l.options.rtl?1:-1)*(l.touchObject.curX>l.touchObject.startX?1:-1),!0===l.options.verticalSwiping&&(s=l.touchObject.curY>l.touchObject.startY?1:-1),o=l.touchObject.swipeLength,l.touchObject.edgeHit=!1,!1===l.options.infinite&&(0===l.currentSlide&&"right"===t||l.currentSlide>=l.getDotCount()&&"left"===t)&&(o=l.touchObject.swipeLength*l.options.edgeFriction,l.touchObject.edgeHit=!0),!1===l.options.vertical?l.swipeLeft=e+o*s:l.swipeLeft=e+o*(l.$list.height()/l.listWidth)*s,!0===l.options.verticalSwiping&&(l.swipeLeft=e+o*s),!0!==l.options.fade&&!1!==l.options.touchMove&&(!0===l.animating?(l.swipeLeft=null,!1):void l.setCSS(l.swipeLeft))))},e.prototype.swipeStart=function(i){var e,t=this;if(t.interrupted=!0,1!==t.touchObject.fingerCount||t.slideCount<=t.options.slidesToShow)return t.touchObject={},!1;void 0!==i.originalEvent&&void 0!==i.originalEvent.touches&&(e=i.originalEvent.touches[0]),t.touchObject.startX=t.touchObject.curX=void 0!==e?e.pageX:i.clientX,t.touchObject.startY=t.touchObject.curY=void 0!==e?e.pageY:i.clientY,t.dragging=!0},e.prototype.unfilterSlides=e.prototype.slickUnfilter=function(){var i=this;null!==i.$slidesCache&&(i.unload(),i.$slideTrack.children(this.options.slide).detach(),i.$slidesCache.appendTo(i.$slideTrack),i.reinit())},e.prototype.unload=function(){var e=this;i(".slick-cloned",e.$slider).remove(),e.$dots&&e.$dots.remove(),e.$prevArrow&&e.htmlExpr.test(e.options.prevArrow)&&e.$prevArrow.remove(),e.$nextArrow&&e.htmlExpr.test(e.options.nextArrow)&&e.$nextArrow.remove(),e.$slides.removeClass("slick-slide slick-active slick-visible slick-current").attr("aria-hidden","true").css("width","")},e.prototype.unslick=function(i){var e=this;e.$slider.trigger("unslick",[e,i]),e.destroy()},e.prototype.updateArrows=function(){var i=this;Math.floor(i.options.slidesToShow/2),!0===i.options.arrows&&i.slideCount>i.options.slidesToShow&&!i.options.infinite&&(i.$prevArrow.removeClass("slick-disabled").attr("aria-disabled","false"),i.$nextArrow.removeClass("slick-disabled").attr("aria-disabled","false"),0===i.currentSlide?(i.$prevArrow.addClass("slick-disabled").attr("aria-disabled","true"),i.$nextArrow.removeClass("slick-disabled").attr("aria-disabled","false")):i.currentSlide>=i.slideCount-i.options.slidesToShow&&!1===i.options.centerMode?(i.$nextArrow.addClass("slick-disabled").attr("aria-disabled","true"),i.$prevArrow.removeClass("slick-disabled").attr("aria-disabled","false")):i.currentSlide>=i.slideCount-1&&!0===i.options.centerMode&&(i.$nextArrow.addClass("slick-disabled").attr("aria-disabled","true"),i.$prevArrow.removeClass("slick-disabled").attr("aria-disabled","false")))},e.prototype.updateDots=function(){var i=this;null!==i.$dots&&(i.$dots.find("li").removeClass("slick-active").end(),i.$dots.find("li").eq(Math.floor(i.currentSlide/i.options.slidesToScroll)).addClass("slick-active"))},e.prototype.visibility=function(){var i=this;i.options.autoplay&&(document[i.hidden]?i.interrupted=!0:i.interrupted=!1)},i.fn.slick=function(){var i,t,o=this,s=arguments[0],n=Array.prototype.slice.call(arguments,1),r=o.length;for(i=0;i<r;i++)if("object"==typeof s||void 0===s?o[i].slick=new e(o[i],s):t=o[i].slick[s].apply(o[i].slick,n),void 0!==t)return t;return o}});
;
"use strict";

function _readOnlyError(name) { throw new Error("\"" + name + "\" is read-only"); }

/**
 * @file
 * Behaviors for the attsite_vbtheme theme.
 */
// @codingStandardsIgnoreFile
(function ($, attServices, videoController, blazy) {
  'use strict';

  attServices.slickService = attServices.slickService ? attServices.slickService : {};
  var head = $("head");

  attServices.slickService.slickInit = function (currentCarousel, currentSettings) {
    var carouselId = typeof currentCarousel.attr('id') == 'undefined' ? currentCarousel[0].parentNode.id : currentCarousel.attr('id');
    var showArrows = false;
    var paginationEnabled = false;
    var paginationClass = 'slick-dots';

    if (currentSettings['arrowPosition'] == 'outside') {
      currentCarousel.parent().addClass('c-p-arrow-outside');
    }

    if (currentSettings['arrowDisplay'] !== 'disabled') {
      showArrows = true;
      currentCarousel.addClass(currentSettings['arrowDisplay']);
    }

    if (currentSettings['paginationStyle'] !== 'none') {
      paginationEnabled = true;
      paginationClass = paginationClass + " ".concat(currentSettings['paginationStyle']);
      currentCarousel.addClass('pagination-enabled');
    }
    /**
     * Declare carousel style configuration
     */


    head.append("<style id=\"".concat(carouselId, "\" type=\"text/css\"></style>"));
    var styleSheet = $("#".concat(carouselId))[0].sheet;
    styleSheet.insertRule("#".concat(carouselId, " .slick-disabled { opacity: ").concat(currentSettings['disabledOpacity'], "; }"), 0);

    if (currentSettings['carousel1st'] || currentSettings['carousel2nd']) {
      if (currentSettings['carousel1st']) {
        styleSheet.insertRule("#".concat(carouselId, " .slick-prev, #").concat(carouselId, " .slick-next { background-color: ").concat(currentSettings['arrowBgColor'], "; color: ").concat(currentSettings['arrowColor'], ";}"), 1);
      } else if (currentSettings.carousel2nd) {
        if (currentSettings['arrowPosition'] === 'outside') {
          if (currentSettings['arrowFormat'] === 'circle') {
            styleSheet.insertRule("#".concat(carouselId, " .preview-slider-bottom .slick-prev, #").concat(carouselId, " .preview-slider-bottom .slick-next {border-radius: 50%;width: 50px;height: 50px;background-color: ").concat(currentSettings['arrowBgColorPreview'], "; color: ").concat(currentSettings['arrowColorPreview'], ";}"), 1);
          } else if (currentSettings['arrowFormat'] === 'squared') {
            styleSheet.insertRule("#".concat(carouselId, " .preview-slider-bottom .slick-prev, #").concat(carouselId, " .preview-slider-bottom .slick-next {width: 50px;height: 50px;background-color: ").concat(currentSettings['arrowBgColorPreview'], "; color: ").concat(currentSettings['arrowColorPreview'], ";}"), 1);
          } else {
            styleSheet.insertRule("#".concat(carouselId, " .preview-slider-bottom .slick-prev, #").concat(carouselId, " .preview-slider-bottom .slick-next {width: 50px;height: 50px;background-color: transparent; color: ").concat(currentSettings['arrowColorPreview'], ";}"), 1);
          }
        }

        styleSheet.insertRule("#".concat(carouselId, " .preview-slider-bottom .slick-prev, #").concat(carouselId, " .preview-slider-bottom .slick-next {background-color: ").concat(currentSettings['arrowBgColorPreview'], "; color: ").concat(currentSettings['arrowColorPreview'], ";}"), 1);

        if (currentSettings['highlightMode'] === 'faded') {
          currentCarousel.addClass('c-p-faded');
        } else if (currentSettings['highlightMode'] === 'bw') {
          currentCarousel.addClass('c-p-bw');
        }
      }
    } else {
      styleSheet.insertRule("#".concat(carouselId, " .slick-prev, #").concat(carouselId, " .slick-next { background-color: ").concat(currentSettings['arrowBgColor'], "; color: ").concat(currentSettings['arrowColor'], ";}"), 1);
      styleSheet.insertRule("#".concat(carouselId, " .slick-dots li button { background-color: ").concat(currentSettings['paginationColor'], ";}"), 1);
    }

    var config = {
      'centerMode': currentSettings['centerModeEnabled'],
      'centerPadding': currentSettings['centerModeEnabled'] ? '10%' : '0',
      'infinite': currentSettings['infiniteModeEnabled'],
      'autoplay': currentSettings['autoplayEnabled'],
      'autoplaySpeed': parseInt(currentSettings['autoplayInterval'], 10) * 1000,
      'adaptiveHeight': currentSettings['centerModeEnabled'],
      'dots': paginationEnabled,
      'dotsClass': paginationClass,
      'arrows': showArrows,
      'prevArrow': "<a href=\"#\" class=\"slick-prev fas fa-chevron-left ".concat(currentSettings['arrowFormat'], "\">\n                        <span class=\"sr-only\">Previous</span>\n                      </a>"),
      'nextArrow': "<a href=\"#\" class=\"slick-next fas fa-chevron-right ".concat(currentSettings['arrowFormat'], "\">\n                        <span class=\"sr-only\">Next</span>\n                      </a>"),
      'slidesToShow': currentSettings['slidesToShow'],
      'slidesToScroll': currentSettings['slidesToScroll'],
      'speed': currentSettings['fadeEffectEnabled'] ? 0 : currentSettings['animationSpeed'],
      'responsive': [{
        breakpoint: 768,
        settings: {
          slidesToShow: currentSettings['slidesToShowNew'] ? currentSettings['slidesToShowNew'] : 1,
          slidesToScroll: currentSettings['slidesToScrollNew'] ? currentSettings['slidesToScrollNew'] : 1
        }
      }]
    };

    if (currentSettings.carousel2nd) {
      config.responsive = [{
        breakpoint: 1
      }];
      var l = $(currentCarousel).find('.carousel-item:not(.slick-cloned)').length;
      config.slidesToShow = currentSettings.hasPreviewSlides;

      if (config.slidesToShow === 'all') {
        config.slidesToShow = l;

        if (currentSettings['carousel2nd']) {
          $(currentCarousel).addClass('c-p-showall');
        }
      } else if (config.slidesToShow === 'all_1') {
        config.slidesToShow = l - 1;

        if (config.slidesToShow < 1) {
          config.slidesToShow = 1;
        }
      }

      config.slidesToScroll = 1;
      config.focusOnSelect = true;
    }

    if (currentSettings.asNavFor) {
      config.asNavFor = currentSettings.asNavFor;
    }

    function arrowListener(carousel) {
      var slickArrows = $(carousel).find('.slick-arrow');
      var carouselHeight = carousel.height();
      var carouselHeightCalc = carouselHeight / 10;
      slickArrows.css({
        'height': "calc(".concat(carouselHeightCalc, "px * 2)"),
        'width': "calc(".concat(carouselHeightCalc, "px)"),
        'font-size': "calc(".concat(carouselHeightCalc, "px / 2)")
      });
    }

    ;
    currentCarousel.on('init', function (event, slick) {
      blazy && blazy.init.load(slick.$slider.find('img'), true);

      if (!currentSettings['infiniteModeEnabled'] && !slick.$slides.hasClass('slick-active')) {
        slick.$slides.each(function (ind, el) {
          var $el = $(el);

          if ($el.hasClass('slick-current')) {
            $el.addClass('slick-active');
          }
        });
      }

      var dynamicArrows = currentSettings['dynamicArrowsEnabled'];
      var outsideArrows = currentSettings['outsideArrowsEnabled'];

      if (dynamicArrows && !outsideArrows) {
        arrowListener(currentCarousel);
        currentCarousel.once('dynamic-arrow-resize').each(function () {
          $(window).on('resize', function () {
            setTimeout(arrowListener(currentCarousel), 1);
          });
        });
      }
    });
    currentCarousel.slick(config);

    function updateCarousel() {
      currentCarousel.slick('setPosition');
    }

    var $win = $(window);
    var resizeTimeout = null;
    window.currentWindowWidthForSlick = $win.width();
    $win.on('resize', function () {
      clearTimeout(resizeTimeout);
      resizeTimeout = setTimeout(function () {
        if ($win.width() !== window.currentWindowWidthForSlick) {
          currentCarousel.needResize = true;
        }

        window.currentWindowWidthForSlick = $win.width();
        updateCarousel();
      }, 1000);
    });

    if (!window.slickTimeout) {
      window.slickTimeout = {};
    }

    if (currentSettings['carousel2nd']) {
      currentCarousel.on('afterChange', function (event, slick, i) {
        if (i !== parseInt($(currentCarousel).prev().find('.slick-active').attr('data-slick-index'))) {
          clearTimeout(window.slickTimeout[slick.$slider.data('id')]);
          window.slickTimeout[slick.$slider.data('id')] = setTimeout(function () {
            $(currentCarousel).slick('slickGoTo', i);
          }, 1);
        }
      });
    }

    if (currentSettings['centerModeEnabled']) {
      currentCarousel.needResize = true;
      currentCarousel.on('setPosition', function (event, slick) {
        if (currentCarousel.needResize) {
          currentCarousel.css('min-height', 'auto');
          slick.$list.css('min-height', 'auto');
          slick.$list.css('height', 'auto');
          slick.$slider.css('height', 'auto');
          slick.$slider.find('.tc-type-vertical .image').css('height', 'auto');
          slick.$slider.find('.tc-type-vertical .text').css('height', 'auto');
        }

        setTimeout(function () {
          var maxImageHeight = slick.$slides.find('.is-largest-image:visible').height();
          var loaded = maxImageHeight > 1;
          var maxTextHeight = slick.$slides.find('.tc-type-vertical .is-largest-text:visible').outerHeight(true) || 0;
          var isSpotlightCarousel = slick.$slider.parents('.spotlight-carousel').length > 0;
          var sizeCalculated = slick.sizeCalculated || false;

          if (sizeCalculated) {
            if (currentCarousel.needResize) {
              currentCarousel.needResize = false;
            } else {
              return;
            }
          }

          if (!loaded) {
            setTimeout(updateCarousel, 32);
            return;
          }

          var biggestHeight = 0;
          slick.$slides.each(function (index) {
            var currentSlide = $(slick.$slides[index]);
            var isVerticalTeaser = currentSlide.find('.tc-type-vertical').length;
            var slidesToShow = currentSettings['slidesToShow'];

            if (isVerticalTeaser) {
              slick.$slider.find('.tc-type-vertical .image').css('height', "".concat(maxImageHeight, "px"));
              slick.$slider.find('.tc-type-vertical .text').css('height', "".concat(maxTextHeight, "px"));
            }

            if (isSpotlightCarousel && slidesToShow === 1) {
              var spotlightHeight = (maxImageHeight + maxTextHeight) * 1.06;
              currentSlide.css('height', "".concat(spotlightHeight, "px"));
              biggestHeight = spotlightHeight;
            } else {
              currentSlide.css('height', "".concat(maxImageHeight + maxTextHeight, "px"));
              biggestHeight = maxImageHeight + maxTextHeight;
            }
          });
          var h = slick.$list.height() * 1.06;

          if (biggestHeight > h) {
            h = (_readOnlyError("h"), biggestHeight);
          }

          slick.$list.height(h); // the padding-top value is 20

          currentCarousel.css('min-height', h + 20);
          slick.$list.css('min-height', h + 20);
          slick.sizeCalculated = true;
          currentCarousel.needResize = false;

          if (slick.$prevArrow) {
            slick.$prevArrow.css('top', "".concat(maxImageHeight / 2, "px"));
          }

          if (slick.$nextArrow) {
            slick.$nextArrow.css('top', "".concat(maxImageHeight / 2, "px"));
          }
        }, 0);
      });

      if (!currentSettings['infiniteModeEnabled']) {
        currentCarousel.on('afterChange', function (event, slick, i) {
          var currentEls = [];
          slick.$slides.each(function (ind, el) {
            var jEl = $(el);

            if (jEl.hasClass('slick-current')) {
              currentEls.push(jEl);
            }
          });
          var length = currentEls.length;
          slick.$slides.removeClass('slick-active');

          for (var j = 0; j < length; j++) {
            currentEls[j].addClass('slick-active');
          }
        });
      }
    }

    currentCarousel.on('beforeChange', function (event, slick, currentSlide, nextSlide) {
      if (videoController) {
        // Stop all video players for current slide.
        videoController.stopAllVideo($(slick['$slides'][currentSlide]));
        videoController.startAllAutoPlayVideo($(slick['$slides'][nextSlide]));
      }
    });

    if (currentSettings["autoplayEnabled"]) {
      $(".slick-prev, .slick-next").on("click", function () {
        currentCarousel.slick("slickPlay");
      });
    }
  };
})(window.jQuery, window.attServices, window.attServices.videoController, window.Drupal.blazy);;
"use strict";

/**
 * @file
 * Behaviors for the attsite_vbtheme theme.
 */
(function ($, attServices, videoController, slickService) {
  'use strict';

  attServices.modalService = attServices.modalService ? attServices.modalService : {};

  attServices.modalService.modalSlickInit = function ($modal, modalCarousel, modalCarouselContent, modalInitiators, modalSlickConfig, modalConfig, syncCarousel) {
    var modalCarouselInitialized = false;
    modalCarousel.append(modalCarouselContent);
    $modal.appendTo("body");
    $modal.modal({
      show: false,
      keyboard: true
    });
    modalInitiators.on('click', function (event) {
      // Prevent click event propagation from contextual elements to components.
      if ($(event.target).is('button') && $(event.target).hasClass('trigger')) {
        event.stopPropagation();
      } else {
        // Stops autoplay on sync carousel.
        syncCarousel && syncCarousel.slick('slickPause');

        if (!modalCarouselInitialized) {
          slickService.slickInit(modalCarousel, modalSlickConfig);
          modalCarouselInitialized = true;
        }

        var carouselTargetId = $(event.currentTarget).data('paragraphId'); // @codingStandardsIgnoreLine

        modalCarousel.slick('slickGoTo', modalCarousel.find("[data-paragraph-id=".concat(carouselTargetId, "]")).data('slickIndex'), true);
        $modal.modal('show', event.currentTarget);
      }
    });
    $modal.on('shown.bs.modal', function (evt) {
      modalCarousel.slick('refresh');
      videoController.startAllAutoPlayVideo($(evt.currentTarget));
      setTimeout(function () {
        try {
          window.dispatchEvent(new Event('resize'));
        } catch (e) {}

        try {
          $(window).trigger('resize');
        } catch (e) {}
      }, 0);
    });
    $modal.on('hidden.bs.modal', function (event) {
      var currentModalCarouselId = $(event.currentTarget).find('.slick-current').data('paragraphId');
      syncCarousel && syncCarousel.slick('slickGoTo', syncCarousel.find("[data-paragraph-id=".concat(currentModalCarouselId, "]")).parents('.carousel-item').data('slickIndex'), true); // Stop all video players for current modal.

      videoController.stopAllVideo($(event.currentTarget)); // Restart autoplay on sync carousel if it was enabled before pausing.

      if (syncCarousel && syncCarousel.slick('slickGetOption', 'autoplay') === true) {
        syncCarousel.slick('slickPlay');
      }
    });
    /* Visual settings */

    $modal.find('.close > span').css('background-color', modalConfig['modalCloseButtonColor']);
    $modal.find('.modal-content').css('background-color', modalConfig['modalBgColor']);
  };
})(window.jQuery, window.attServices, window.attServices.videoController, window.attServices.slickService);;
"use strict";

/**
 * @file
 * JS functionality for the Carousel component.
 */
(function ($, Drupal, drupalSettings, slickService, lazyLoadService, modalService) {
  "use strict";

  Drupal.behaviors.attsite_vbtheme_component_carousel = {
    attach: function attach(context) {
      var carousels = $('.paragraph--type--att-slider-carousel', context);
      carousels.once('carousel').each(function () {
        var carouselWrapper = $(this);
        var carouselId = carouselWrapper.attr('id');
        var editorMode = $('body').hasClass('user-logged-in');

        var initCarousel = function initCarousel() {
          var defaultCarousel = carouselWrapper.find('.att-carousel');
          var settings = drupalSettings['att']['carousel'][carouselId];
          var defaultSlickConfig = settings['slickOptions'];
          var cloned = null;

          if (defaultSlickConfig.paginationStyle === 'thumbnail') {
            cloned = defaultCarousel.clone();

            if (!window.carouselWithPreview) {
              window.carouselWithPreview = 2;
            } else {
              window.carouselWithPreview += 2;
            }

            cloned.attr('data-id', 'att-c-p-' + window.carouselWithPreview).addClass('preview-slider-bottom');
            defaultCarousel.attr('data-id', 'att-c-p-' + (window.carouselWithPreview - 1)).addClass('preview-slider-top');
            carouselWrapper.append(cloned);
          } // @codingStandardsIgnoreLine


          var modalCarouselId = "".concat(carouselId, "-modal");
          var modalCarousel = carouselWrapper.find("#".concat(modalCarouselId));
          var modalSlickConfig = settings['modalSlickOptions'];
          var modalCarouselContent = defaultCarousel.find('.component-modal-content');
          var modalInitiators = defaultCarousel.find('.has-modal'); // @codingStandardsIgnoreLine

          var $modal = $(".component-modal-".concat(carouselId));
          var carouselItems = defaultCarousel.find('.component-modal-initiator');
          var timeout = $(window).width() <= 768 ? 50 : 0;

          if (defaultSlickConfig.centerModeEnabled) {
            var maxImageHeight = -1;
            var maxTextHeight = -1;
            var targetImageIndex = 0;
            var targetTextIndex = 0;
            var targetSelector = 'img';
            setTimeout(function () {
              carouselItems.each(function (index) {
                var localTargetSelector = 'img';
                var teaserImage = $(this).find('img:visible');
                var teaserImageHeight = parseInt(teaserImage.attr('height'), 10) || 0;
                var teaserImageWidth = parseInt(teaserImage.attr('width'), 10) || 0;
                var bcVideoHeight = parseInt($(this).find('.paragraph--type--attsite-brightcove-video').outerHeight(true), 10) || 0;
                var ytVideoHeight = parseInt($(this).find('.paragraph--type--attsite-bp-youtube').outerHeight(true), 10) || 0;
                var teaserText = $(this).find('.tc-type-vertical .text:visible');
                var carouselWidth = carouselWrapper.width();

                if (teaserImage.parents('.tc-type-horizontal').length > 0) {
                  return;
                }

                if (teaserImageWidth > carouselWidth) {
                  teaserImageHeight = teaserImageHeight * carouselWidth / teaserImageWidth;
                }

                if (bcVideoHeight > teaserImageHeight) {
                  localTargetSelector = '.paragraph--type--attsite-brightcove-video';
                  teaserImageHeight = bcVideoHeight;
                }

                if (ytVideoHeight > teaserImageHeight) {
                  localTargetSelector = '.paragraph--type--attsite-bp-youtube';
                  teaserImageHeight = ytVideoHeight;
                }

                if (teaserImageHeight > maxImageHeight) {
                  targetImageIndex = index;
                  maxImageHeight = teaserImageHeight;
                  targetSelector = localTargetSelector;
                }

                if (teaserText.outerHeight() > maxTextHeight) {
                  targetTextIndex = index;
                  maxTextHeight = teaserText.outerHeight();
                }
              });

              if (maxImageHeight > -1) {
                targetSelector = "".concat(targetSelector, ":visible");
                $(carouselItems[targetImageIndex]).find(targetSelector).addClass('is-largest-image');
                $(carouselItems[targetTextIndex]).find('.text').addClass('is-largest-text');
              }
            }, timeout);
            defaultCarousel.addClass('center-mode');
          }

          modalService.modalSlickInit($modal, modalCarousel, modalCarouselContent, modalInitiators, modalSlickConfig, settings, defaultCarousel);

          (function (counterValue) {
            setTimeout(function () {
              /**
               * Init core slick carousel
               */
              if (cloned) {
                var cfg2nd = $.extend(defaultSlickConfig);
                slickService.slickInit(defaultCarousel, $.extend(defaultSlickConfig, {
                  'carousel1st': true,
                  'asNavFor': '[data-id="att-c-p-' + counterValue + '"]',
                  'paginationStyle': 'none'
                }));
                slickService.slickInit(cloned, $.extend(cfg2nd, {
                  'asNavFor': '[data-id="att-c-p-' + (counterValue - 1) + '"]',
                  'centerModeEnabled': false,
                  'carousel2nd': true,
                  'infiniteModeEnabled': true,
                  'arrowDisplay': true,
                  'paginationStyle': 'none',
                  'autoplayEnabled': false,
                  'arrowPosition': defaultSlickConfig.hasPreviewArrowPosition,
                  'highlightMode': defaultSlickConfig.hasPreviewHighlight,
                  'arrowBgColorPreview': defaultSlickConfig.hasPreviewArrowIconBackgroundColor,
                  'arrowColorPreview': defaultSlickConfig.hasPreviewArrowIconColor,
                  'arrowFormat': defaultSlickConfig.hasPreviewArrowFormat,
                  'slidesToShow': parseInt(defaultSlickConfig.hasPreviewSlides),
                  'slidesToScroll': parseInt(defaultSlickConfig.hasPreviewSlidesToSlide)
                }));
              } else {
                slickService.slickInit(defaultCarousel, defaultSlickConfig);
              }
            }, timeout + 1);
          })(window.carouselWithPreview);
        };

        if (editorMode) {
          initCarousel();
        } else {
          lazyLoadService.lazyLoad(carouselWrapper, carouselId, initCarousel);
        }
      });
    }
  };
})(window.jQuery, window.Drupal, window.drupalSettings, window.attServices.slickService, window.attServices.lazyLoadService, window.attServices.modalService);;
"use strict";

/**
 * @file
 * JS functionality for Sticky Header component.
 */
(function ($, Drupal, debounce) {
  'use strict';

  Drupal.behaviors.attsite_vbtheme_component_sticky_header = {
    attach: function attach(context) {
      var header = $('.att-header');
      var main = header.find('.att-navbar__row--main');
      var below = header.find('.att-navbar__row--below');
      var mainHeight = main.outerHeight() || 0;
      var belowHeigth = below.length ? below.outerHeight() : 0;
      var onlyBelow = header.hasClass('att-navbar--sticky-below');
      var stickyOverflow = header.hasClass('sticky-header--overflow');
      var target = onlyBelow ? below : main;
      var targetOffset = target.offset() && target.offset().top || 0;
      var editorMode = $('body').hasClass('user-logged-in');

      if (onlyBelow) {
        !editorMode && stickyOverflow && header.css('margin-bottom', "-".concat(belowHeigth, "px"));
      } else {
        !editorMode && stickyOverflow && header.css('margin-bottom', "-".concat(belowHeigth + mainHeight, "px"));
      }

      var isSticky = debounce(function () {
        var scrollTop = window.pageYOffset !== undefined ? window.pageYOffset : (document.documentElement || document.body.parentNode || document.body).scrollTop;

        if (scrollTop >= targetOffset && scrollTop !== 0) {
          header.addClass("is-sticky");
          onlyBelow && main.addClass("not-sticky");
        } else {
          header.removeClass("is-sticky");
          onlyBelow && main.removeClass("not-sticky");
        }
      }, 10);
      $(document).scroll(isSticky);
      isSticky();
    }
  };
})(window.jQuery, window.Drupal, window.Drupal.debounce);;
/**
 * @file
 * Initializes all modifications.
 */

(function ($, Drupal) {

  'use strict';

  Drupal.behaviors.modifiers = {

    attach: function attach(context, settings) {
      // Process only if there are some modifiers.
      if (typeof settings.modifiers !== 'undefined') {
        this.initAttributes(context, settings);
        this.initSettings(context, settings);
      }
    },

    initSettings: function (context, settings) {
      // Skip processing if there are no modifications.
      if (typeof settings.modifiers.settings !== 'undefined') {
        var modifications = [];

        // Group all modifications into single array.
        $.each(settings.modifiers.settings, function (index, group) {
          modifications = modifications.concat(group);
        });

        // Process all modifications.
        $.each(modifications, function (index, modification) {
          var callback = window[modification.namespace][modification.callback];
          if (typeof callback === 'function') {
            // Check number of callback arguments.
            if (callback.length > 3) {
              // Callback with context and selector for backward compatibility.
              callback(context, modification.selector, modification.media, modification.args);
            }
            else {
              // Limit elements by context.
              $(modification.selector).each(function () {
                if ($.contains(context, this)) {
                  callback(this, modification.media, modification.args);
                }
              });
            }
          }
        });
      }
    },

    initAttributes: function (context, settings) {
      // Skip processing if there are no attributes.
      if (typeof settings.modifiers.attributes !== 'undefined') {
        var attributes = {};

        // Group all attributes into single array.
        $.each(settings.modifiers.attributes, function (index, group) {
          $.each(group, function (media, selectors) {
            // Initialize array for this media.
            if (typeof attributes[media] === 'undefined') {
              attributes[media] = {};
            }
            $.each(selectors, function (selector, values) {
              attributes[media][selector] = values;
            });
          });
        });

        // Process all attributes immediately.
        this.toggleAttributes(context, attributes);

        var that = this;
        // Process all attributes again after resize.
        window.addEventListener('resize', function () {
          that.toggleAttributes(context, attributes);
        });
      }
    },

    toggleAttributes: function (context, attributes) {
      var enable = {};
      var disable = {};

      // Check all media queries validity and split selectors to sets.
      $.each(attributes, function (media, selectors) {
        if (window.matchMedia(media).matches) {
          // Fill these selectors for enabling.
          $.each(selectors, function (selector, values) {
            enable[selector] = values;
          });
        }
        else {
          // Fill these selectors for disabling.
          $.each(selectors, function (selector, values) {
            disable[selector] = values;
          });
        }
      });

      // Remove unwanted attributes from target objects.
      $.each(disable, function (selector, values) {
        // Limit elements by context.
        var elements = $(selector).filter(function () {
          return $.contains(context, this);
        });
        if (elements.length) {
          // Process all attributes.
          $.each(values, function (attribute, value) {
            if (attribute === 'class') {
              $.each(value, function (index, item) {
                elements.removeClass(item);
              });
            }
            else {
              elements.prop(attribute, null);
            }
          });
        }
      });

      // Set required attributes to target objects.
      $.each(enable, function (selector, values) {
        // Limit elements by context.
        var elements = $(selector).filter(function () {
          return $.contains(context, this);
        });
        if (elements.length) {
          // Process all attributes.
          $.each(values, function (attribute, value) {
            if (attribute === 'class') {
              $.each(value, function (index, item) {
                elements.addClass(item);
              });
            }
            else if (typeof value === 'object') {
              elements.prop(attribute, value.join(' '));
            }
            else {
              elements.prop(attribute, value);
            }
          });
        }
      });
    }
  };

})(jQuery, Drupal);
;
