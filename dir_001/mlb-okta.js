/*! For license information please see mlb-okta.2414833db5da1d2b2beb.js.LICENSE.txt */
(()=>{var t={686:t=>{var e=document.querySelector('meta[name="env"]')?document.querySelector('meta[name="env"]').content:"production",n={local:{clientId:"0oafudk8vcCsZRpRj0h7",shim:"https://qa-ids-shim.mlb.com",okta:"https://qa-ids.mlb.com",issuer:"https://qa-ids.mlb.com/oauth2/ausg0y0s07iKGqVKv0h7",redirectUri:"http://local.mlb.com:3000",entitlementServices:"https://mlbentitlementservices.commerce-qa.mlbinfra.com/entitlements?",profile:"https://profile-qa.mlb.com/api/v1"},development:{clientId:"0oafudk8vcCsZRpRj0h7",shim:"https://qa-ids-shim.mlb.com",okta:"https://qa-ids.mlb.com",issuer:"https://qa-ids.mlb.com/oauth2/ausg0y0s07iKGqVKv0h7",redirectUri:"https://dev-gcp.mlb.com/login",entitlementServices:"https://mlbentitlementservices.commerce-qa.mlbinfra.com/entitlements?",profile:"https://profile-qa.mlb.com/api/v1"},qa:{clientId:"0oafudk8vcCsZRpRj0h7",shim:"https://qa-ids-shim.mlb.com",okta:"https://qa-ids.mlb.com",issuer:"https://qa-ids.mlb.com/oauth2/ausg0y0s07iKGqVKv0h7",redirectUri:"https://qa-aws.mlb.com/login",entitlementServices:"https://mlbentitlementservices.commerce-qa.mlbinfra.com/entitlements?",profile:"https://profile-qa.mlb.com/api/v1"},beta:{clientId:"0oap7wa857jcvPlZ5355",shim:"https://ids-shim.mlb.com",okta:"https://ids.mlb.com",issuer:"https://ids.mlb.com/oauth2/aus1m088yK07noBfh356",redirectUri:"https://beta-aws.mlb.com/login",entitlementServices:"https://mlbentitlementservices.mlb.com/entitlements?",profile:"https://profile.mlb.com/api/v1"},production:{clientId:"0oap7wa857jcvPlZ5355",shim:"https://ids-shim.mlb.com",okta:"https://ids.mlb.com",issuer:"https://ids.mlb.com/oauth2/aus1m088yK07noBfh356",redirectUri:"https://www.mlb.com/login",entitlementServices:"https://mlbentitlementservices.mlb.com/entitlements?",profile:"https://profile.mlb.com/api/v1"}};t.exports={config:n[e]||n.production,env:e,CONFIG:n}},310:(t,e,n)=>{"use strict";t.exports=n(702).polyfill()},702:function(t,e,n){var r=n(155);t.exports=function(){"use strict";function t(t){return"function"==typeof t}var e=Array.isArray?Array.isArray:function(t){return"[object Array]"===Object.prototype.toString.call(t)},o=0,i=void 0,a=void 0,u=function(t,e){d[o]=t,d[o+1]=e,2===(o+=2)&&(a?a(v):w())};var s="undefined"!=typeof window?window:void 0,c=s||{},f=c.MutationObserver||c.WebKitMutationObserver,l="undefined"==typeof self&&void 0!==r&&"[object process]"==={}.toString.call(r),h="undefined"!=typeof Uint8ClampedArray&&"undefined"!=typeof importScripts&&"undefined"!=typeof MessageChannel;function p(){var t=setTimeout;return function(){return t(v,1)}}var d=new Array(1e3);function v(){for(var t=0;t<o;t+=2)(0,d[t])(d[t+1]),d[t]=void 0,d[t+1]=void 0;o=0}var y,g,m,b,w=void 0;function x(t,e){var n=this,r=new this.constructor(O);void 0===r[T]&&U(r);var o=n._state;if(o){var i=arguments[o-1];u((function(){return I(o,r,i,n._result)}))}else P(n,r,t,e);return r}function k(t){if(t&&"object"==typeof t&&t.constructor===this)return t;var e=new this(O);return E(e,t),e}w=l?function(){return r.nextTick(v)}:f?(g=0,m=new f(v),b=document.createTextNode(""),m.observe(b,{characterData:!0}),function(){b.data=g=++g%2}):h?((y=new MessageChannel).port1.onmessage=v,function(){return y.port2.postMessage(0)}):void 0===s?function(){try{var t=Function("return this")().require("vertx");return void 0!==(i=t.runOnLoop||t.runOnContext)?function(){i(v)}:p()}catch(t){return p()}}():p();var T=Math.random().toString(36).substring(2);function O(){}var S=void 0;function _(e,n,r){n.constructor===e.constructor&&r===x&&n.constructor.resolve===k?function(t,e){1===e._state?j(t,e._result):2===e._state?R(t,e._result):P(e,void 0,(function(e){return E(t,e)}),(function(e){return R(t,e)}))}(e,n):void 0===r?j(e,n):t(r)?function(t,e,n){u((function(t){var r=!1,o=function(t,e,n,r){try{t.call(e,n,r)}catch(t){return t}}(n,e,(function(n){r||(r=!0,e!==n?E(t,n):j(t,n))}),(function(e){r||(r=!0,R(t,e))}),t._label);!r&&o&&(r=!0,R(t,o))}),t)}(e,n,r):j(e,n)}function E(t,e){if(t===e)R(t,new TypeError("You cannot resolve a promise with itself"));else if(o=typeof(r=e),null===r||"object"!==o&&"function"!==o)j(t,e);else{var n=void 0;try{n=e.then}catch(e){return void R(t,e)}_(t,e,n)}var r,o}function A(t){t._onerror&&t._onerror(t._result),C(t)}function j(t,e){t._state===S&&(t._result=e,t._state=1,0!==t._subscribers.length&&u(C,t))}function R(t,e){t._state===S&&(t._state=2,t._result=e,u(A,t))}function P(t,e,n,r){var o=t._subscribers,i=o.length;t._onerror=null,o[i]=e,o[i+1]=n,o[i+2]=r,0===i&&t._state&&u(C,t)}function C(t){var e=t._subscribers,n=t._state;if(0!==e.length){for(var r=void 0,o=void 0,i=t._result,a=0;a<e.length;a+=3)r=e[a],o=e[a+n],r?I(n,r,o,i):o(i);t._subscribers.length=0}}function I(e,n,r,o){var i=t(r),a=void 0,u=void 0,s=!0;if(i){try{a=r(o)}catch(t){s=!1,u=t}if(n===a)return void R(n,new TypeError("A promises callback cannot return that same promise."))}else a=o;n._state!==S||(i&&s?E(n,a):!1===s?R(n,u):1===e?j(n,a):2===e&&R(n,a))}var M=0;function U(t){t[T]=M++,t._state=void 0,t._result=void 0,t._subscribers=[]}var L=function(){function t(t,n){this._instanceConstructor=t,this.promise=new t(O),this.promise[T]||U(this.promise),e(n)?(this.length=n.length,this._remaining=n.length,this._result=new Array(this.length),0===this.length?j(this.promise,this._result):(this.length=this.length||0,this._enumerate(n),0===this._remaining&&j(this.promise,this._result))):R(this.promise,new Error("Array Methods must be provided an Array"))}return t.prototype._enumerate=function(t){for(var e=0;this._state===S&&e<t.length;e++)this._eachEntry(t[e],e)},t.prototype._eachEntry=function(t,e){var n=this._instanceConstructor,r=n.resolve;if(r===k){var o=void 0,i=void 0,a=!1;try{o=t.then}catch(t){a=!0,i=t}if(o===x&&t._state!==S)this._settledAt(t._state,e,t._result);else if("function"!=typeof o)this._remaining--,this._result[e]=t;else if(n===F){var u=new n(O);a?R(u,i):_(u,t,o),this._willSettleAt(u,e)}else this._willSettleAt(new n((function(e){return e(t)})),e)}else this._willSettleAt(r(t),e)},t.prototype._settledAt=function(t,e,n){var r=this.promise;r._state===S&&(this._remaining--,2===t?R(r,n):this._result[e]=n),0===this._remaining&&j(r,this._result)},t.prototype._willSettleAt=function(t,e){var n=this;P(t,void 0,(function(t){return n._settledAt(1,e,t)}),(function(t){return n._settledAt(2,e,t)}))},t}();var F=function(){function e(t){this[T]=M++,this._result=this._state=void 0,this._subscribers=[],O!==t&&("function"!=typeof t&&function(){throw new TypeError("You must pass a resolver function as the first argument to the promise constructor")}(),this instanceof e?function(t,e){try{e((function(e){E(t,e)}),(function(e){R(t,e)}))}catch(e){R(t,e)}}(this,t):function(){throw new TypeError("Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.")}())}return e.prototype.catch=function(t){return this.then(null,t)},e.prototype.finally=function(e){var n=this,r=n.constructor;return t(e)?n.then((function(t){return r.resolve(e()).then((function(){return t}))}),(function(t){return r.resolve(e()).then((function(){throw t}))})):n.then(e,e)},e}();return F.prototype.then=x,F.all=function(t){return new L(this,t).promise},F.race=function(t){var n=this;return e(t)?new n((function(e,r){for(var o=t.length,i=0;i<o;i++)n.resolve(t[i]).then(e,r)})):new n((function(t,e){return e(new TypeError("You must pass an array to race."))}))},F.resolve=k,F.reject=function(t){var e=new this(O);return R(e,t),e},F._setScheduler=function(t){a=t},F._setAsap=function(t){u=t},F._asap=u,F.polyfill=function(){var t=void 0;if(void 0!==n.g)t=n.g;else if("undefined"!=typeof self)t=self;else try{t=Function("return this")()}catch(t){throw new Error("polyfill failed because global object is unavailable in this environment")}var e=t.Promise;if(e){var r=null;try{r=Object.prototype.toString.call(e.resolve())}catch(t){}if("[object Promise]"===r&&!e.cast)return}t.Promise=F},F.Promise=F,F}()},155:t=>{var e,n,r=t.exports={};function o(){throw new Error("setTimeout has not been defined")}function i(){throw new Error("clearTimeout has not been defined")}function a(t){if(e===setTimeout)return setTimeout(t,0);if((e===o||!e)&&setTimeout)return e=setTimeout,setTimeout(t,0);try{return e(t,0)}catch(n){try{return e.call(null,t,0)}catch(n){return e.call(this,t,0)}}}!function(){try{e="function"==typeof setTimeout?setTimeout:o}catch(t){e=o}try{n="function"==typeof clearTimeout?clearTimeout:i}catch(t){n=i}}();var u,s=[],c=!1,f=-1;function l(){c&&u&&(c=!1,u.length?s=u.concat(s):f=-1,s.length&&h())}function h(){if(!c){var t=a(l);c=!0;for(var e=s.length;e;){for(u=s,s=[];++f<e;)u&&u[f].run();f=-1,e=s.length}u=null,c=!1,function(t){if(n===clearTimeout)return clearTimeout(t);if((n===i||!n)&&clearTimeout)return n=clearTimeout,clearTimeout(t);try{n(t)}catch(e){try{return n.call(null,t)}catch(e){return n.call(this,t)}}}(t)}}function p(t,e){this.fun=t,this.array=e}function d(){}r.nextTick=function(t){var e=new Array(arguments.length-1);if(arguments.length>1)for(var n=1;n<arguments.length;n++)e[n-1]=arguments[n];s.push(new p(t,e)),1!==s.length||c||a(h)},p.prototype.run=function(){this.fun.apply(null,this.array)},r.title="browser",r.browser=!0,r.env={},r.argv=[],r.version="",r.versions={},r.on=d,r.addListener=d,r.once=d,r.off=d,r.removeListener=d,r.removeAllListeners=d,r.emit=d,r.prependListener=d,r.prependOnceListener=d,r.listeners=function(t){return[]},r.binding=function(t){throw new Error("process.binding is not supported")},r.cwd=function(){return"/"},r.chdir=function(t){throw new Error("process.chdir is not supported")},r.umask=function(){return 0}},147:function(){!function(t){"use strict";if(!t.fetch){var e="URLSearchParams"in t,n="Symbol"in t&&"iterator"in Symbol,r="FileReader"in t&&"Blob"in t&&function(){try{return new Blob,!0}catch(t){return!1}}(),o="FormData"in t,i="ArrayBuffer"in t;if(i)var a=["[object Int8Array]","[object Uint8Array]","[object Uint8ClampedArray]","[object Int16Array]","[object Uint16Array]","[object Int32Array]","[object Uint32Array]","[object Float32Array]","[object Float64Array]"],u=function(t){return t&&DataView.prototype.isPrototypeOf(t)},s=ArrayBuffer.isView||function(t){return t&&a.indexOf(Object.prototype.toString.call(t))>-1};d.prototype.append=function(t,e){t=l(t),e=h(e);var n=this.map[t];this.map[t]=n?n+","+e:e},d.prototype.delete=function(t){delete this.map[l(t)]},d.prototype.get=function(t){return t=l(t),this.has(t)?this.map[t]:null},d.prototype.has=function(t){return this.map.hasOwnProperty(l(t))},d.prototype.set=function(t,e){this.map[l(t)]=h(e)},d.prototype.forEach=function(t,e){for(var n in this.map)this.map.hasOwnProperty(n)&&t.call(e,this.map[n],n,this)},d.prototype.keys=function(){var t=[];return this.forEach((function(e,n){t.push(n)})),p(t)},d.prototype.values=function(){var t=[];return this.forEach((function(e){t.push(e)})),p(t)},d.prototype.entries=function(){var t=[];return this.forEach((function(e,n){t.push([n,e])})),p(t)},n&&(d.prototype[Symbol.iterator]=d.prototype.entries);var c=["DELETE","GET","HEAD","OPTIONS","POST","PUT"];w.prototype.clone=function(){return new w(this,{body:this._bodyInit})},b.call(w.prototype),b.call(k.prototype),k.prototype.clone=function(){return new k(this._bodyInit,{status:this.status,statusText:this.statusText,headers:new d(this.headers),url:this.url})},k.error=function(){var t=new k(null,{status:0,statusText:""});return t.type="error",t};var f=[301,302,303,307,308];k.redirect=function(t,e){if(-1===f.indexOf(e))throw new RangeError("Invalid status code");return new k(null,{status:e,headers:{location:t}})},t.Headers=d,t.Request=w,t.Response=k,t.fetch=function(t,e){return new Promise((function(n,o){var i=new w(t,e),a=new XMLHttpRequest;a.onload=function(){var t,e,r={status:a.status,statusText:a.statusText,headers:(t=a.getAllResponseHeaders()||"",e=new d,t.replace(/\r?\n[\t ]+/g," ").split(/\r?\n/).forEach((function(t){var n=t.split(":"),r=n.shift().trim();if(r){var o=n.join(":").trim();e.append(r,o)}})),e)};r.url="responseURL"in a?a.responseURL:r.headers.get("X-Request-URL");var o="response"in a?a.response:a.responseText;n(new k(o,r))},a.onerror=function(){o(new TypeError("Network request failed"))},a.ontimeout=function(){o(new TypeError("Network request failed"))},a.open(i.method,i.url,!0),"include"===i.credentials?a.withCredentials=!0:"omit"===i.credentials&&(a.withCredentials=!1),"responseType"in a&&r&&(a.responseType="blob"),i.headers.forEach((function(t,e){a.setRequestHeader(e,t)})),a.send(void 0===i._bodyInit?null:i._bodyInit)}))},t.fetch.polyfill=!0}function l(t){if("string"!=typeof t&&(t=String(t)),/[^a-z0-9\-#$%&'*+.\^_`|~]/i.test(t))throw new TypeError("Invalid character in header field name");return t.toLowerCase()}function h(t){return"string"!=typeof t&&(t=String(t)),t}function p(t){var e={next:function(){var e=t.shift();return{done:void 0===e,value:e}}};return n&&(e[Symbol.iterator]=function(){return e}),e}function d(t){this.map={},t instanceof d?t.forEach((function(t,e){this.append(e,t)}),this):Array.isArray(t)?t.forEach((function(t){this.append(t[0],t[1])}),this):t&&Object.getOwnPropertyNames(t).forEach((function(e){this.append(e,t[e])}),this)}function v(t){if(t.bodyUsed)return Promise.reject(new TypeError("Already read"));t.bodyUsed=!0}function y(t){return new Promise((function(e,n){t.onload=function(){e(t.result)},t.onerror=function(){n(t.error)}}))}function g(t){var e=new FileReader,n=y(e);return e.readAsArrayBuffer(t),n}function m(t){if(t.slice)return t.slice(0);var e=new Uint8Array(t.byteLength);return e.set(new Uint8Array(t)),e.buffer}function b(){return this.bodyUsed=!1,this._initBody=function(t){if(this._bodyInit=t,t)if("string"==typeof t)this._bodyText=t;else if(r&&Blob.prototype.isPrototypeOf(t))this._bodyBlob=t;else if(o&&FormData.prototype.isPrototypeOf(t))this._bodyFormData=t;else if(e&&URLSearchParams.prototype.isPrototypeOf(t))this._bodyText=t.toString();else if(i&&r&&u(t))this._bodyArrayBuffer=m(t.buffer),this._bodyInit=new Blob([this._bodyArrayBuffer]);else{if(!i||!ArrayBuffer.prototype.isPrototypeOf(t)&&!s(t))throw new Error("unsupported BodyInit type");this._bodyArrayBuffer=m(t)}else this._bodyText="";this.headers.get("content-type")||("string"==typeof t?this.headers.set("content-type","text/plain;charset=UTF-8"):this._bodyBlob&&this._bodyBlob.type?this.headers.set("content-type",this._bodyBlob.type):e&&URLSearchParams.prototype.isPrototypeOf(t)&&this.headers.set("content-type","application/x-www-form-urlencoded;charset=UTF-8"))},r&&(this.blob=function(){var t=v(this);if(t)return t;if(this._bodyBlob)return Promise.resolve(this._bodyBlob);if(this._bodyArrayBuffer)return Promise.resolve(new Blob([this._bodyArrayBuffer]));if(this._bodyFormData)throw new Error("could not read FormData body as blob");return Promise.resolve(new Blob([this._bodyText]))},this.arrayBuffer=function(){return this._bodyArrayBuffer?v(this)||Promise.resolve(this._bodyArrayBuffer):this.blob().then(g)}),this.text=function(){var t,e,n,r=v(this);if(r)return r;if(this._bodyBlob)return t=this._bodyBlob,n=y(e=new FileReader),e.readAsText(t),n;if(this._bodyArrayBuffer)return Promise.resolve(function(t){for(var e=new Uint8Array(t),n=new Array(e.length),r=0;r<e.length;r++)n[r]=String.fromCharCode(e[r]);return n.join("")}(this._bodyArrayBuffer));if(this._bodyFormData)throw new Error("could not read FormData body as text");return Promise.resolve(this._bodyText)},o&&(this.formData=function(){return this.text().then(x)}),this.json=function(){return this.text().then(JSON.parse)},this}function w(t,e){var n,r,o=(e=e||{}).body;if(t instanceof w){if(t.bodyUsed)throw new TypeError("Already read");this.url=t.url,this.credentials=t.credentials,e.headers||(this.headers=new d(t.headers)),this.method=t.method,this.mode=t.mode,o||null==t._bodyInit||(o=t._bodyInit,t.bodyUsed=!0)}else this.url=String(t);if(this.credentials=e.credentials||this.credentials||"omit",!e.headers&&this.headers||(this.headers=new d(e.headers)),this.method=(r=(n=e.method||this.method||"GET").toUpperCase(),c.indexOf(r)>-1?r:n),this.mode=e.mode||this.mode||null,this.referrer=null,("GET"===this.method||"HEAD"===this.method)&&o)throw new TypeError("Body not allowed for GET or HEAD requests");this._initBody(o)}function x(t){var e=new FormData;return t.trim().split("&").forEach((function(t){if(t){var n=t.split("="),r=n.shift().replace(/\+/g," "),o=n.join("=").replace(/\+/g," ");e.append(decodeURIComponent(r),decodeURIComponent(o))}})),e}function k(t,e){e||(e={}),this.type="default",this.status=void 0===e.status?200:e.status,this.ok=this.status>=200&&this.status<300,this.statusText="statusText"in e?e.statusText:"OK",this.headers=new d(e.headers),this.url=e.url||"",this._initBody(t)}}("undefined"!=typeof self?self:this)},840:t=>{window,t.exports=function(t){var e={};function n(r){if(e[r])return e[r].exports;var o=e[r]={i:r,l:!1,exports:{}};return t[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}return n.m=t,n.c=e,n.d=function(t,e,r){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:r})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var o in t)n.d(r,o,function(e){return t[e]}.bind(null,o));return r},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="",n(n.s=414)}([function(t,e,n){"use strict";function r(){return"undefined"!=typeof window?window.console:"undefined"!=typeof console?console:void 0}function o(){var t=r();return t&&t.log?t:{log:function(){},warn:function(){},group:function(){},groupEnd:function(){}}}function i(t){o().warn("[okta-auth-sdk] WARN: "+t)}function a(t){o().warn("[okta-auth-sdk] DEPRECATION: "+t)}function u(t,e){return function(){return a(t),e.apply(null,arguments)}}function s(t){var e=t.match(/\d+/g),n=Date.UTC(e[0],e[1]-1,e[2],e[3],e[4],e[5]);return new Date(n).toUTCString()}function c(t){for(var e="abcdefghijklnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789",n="",r=0,o=e.length;r<t;++r)n+=e[Math.floor(Math.random()*o)];return n}function f(t){return new Promise((function(e){setTimeout(e,t)}))}function l(t,e){var n=Array.prototype.slice.call(arguments,2);return function(){var r=Array.prototype.slice.call(arguments);return r=n.concat(r),t.apply(e,r)}}function h(){var t=arguments[0];return[].slice.call(arguments,1).forEach((function(e){for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&void 0!==e[n]&&(t[n]=e[n])})),t}function p(t){var e={};for(var n in t)if(Object.prototype.hasOwnProperty.call(t,n)){var r=t[n];null!=r&&(e[n]=r)}return e}function d(t){if(t){var e=JSON.stringify(t);if(e)return JSON.parse(e)}return t}function v(t){for(var e={},n=arguments.length,r=new Array(n>1?n-1:0),o=1;o<n;o++)r[o-1]=arguments[o];for(var i in t)Object.prototype.hasOwnProperty.call(t,i)&&-1==r.indexOf(i)&&(e[i]=t[i]);return d(e)}function y(t,e){for(var n=t.length;n--;){var r=t[n],o=!0;for(var i in e)if(Object.prototype.hasOwnProperty.call(e,i)&&r[i]!==e[i]){o=!1;break}if(o)return r}}function g(t,e,n){if(t&&t._links){var r=d(t._links[e]);return r&&r.name&&n?r.name===n?r:void 0:r}}function m(t){return"[object String]"===Object.prototype.toString.call(t)}function b(t){return"[object Object]"===Object.prototype.toString.call(t)}function w(t){return"[object Number]"===Object.prototype.toString.call(t)}function x(t){return!!t&&"[object Function]"==={}.toString.call(t)}function k(t){return t&&t.finally&&"function"==typeof t.finally}function T(t){return/^(?:[a-z]+:)?\/\//i.test(t)}function O(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"",e=arguments.length>1?arguments[1]:void 0;return T(t)?t:(e=E(e),"/"===t[0]?"".concat(e).concat(t):"".concat(e,"/").concat(t))}function S(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"",e=arguments.length>1?arguments[1]:void 0;return T(t)&&(t=t.substring(e.length)),"/"===t[0]?t:"/".concat(t)}function _(t){var e=[];if(null!==t)for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&void 0!==t[n]&&null!==t[n]&&e.push(n+"="+encodeURIComponent(t[n]));return e.length?"?"+e.join("&"):""}function E(t){if(t)return t.replace(/^\s+|\s+$/gm,"").replace(/\/+$/,"")}n.d(e,"k",(function(){return r})),n.d(e,"i",(function(){return o})),n.d(e,"y",(function(){return i})),n.d(e,"d",(function(){return a})),n.d(e,"e",(function(){return u})),n.d(e,"r",(function(){return s})),n.d(e,"h",(function(){return c})),n.d(e,"c",(function(){return f})),n.d(e,"a",(function(){return l})),n.d(e,"f",(function(){return h})),n.d(e,"t",(function(){return p})),n.d(e,"b",(function(){return d})),n.d(e,"s",(function(){return v})),n.d(e,"g",(function(){return y})),n.d(e,"j",(function(){return g})),n.d(e,"q",(function(){return m})),n.d(e,"o",(function(){return b})),n.d(e,"n",(function(){return w})),n.d(e,"m",(function(){return x})),n.d(e,"p",(function(){return k})),n.d(e,"l",(function(){return T})),n.d(e,"v",(function(){return O})),n.d(e,"x",(function(){return S})),n.d(e,"w",(function(){return _})),n.d(e,"u",(function(){return E}))},function(t,e,n){t.exports=n(131)},function(t,e,n){"use strict";n.d(e,"e",(function(){return v})),n.d(e,"a",(function(){return r.a})),n.d(e,"b",(function(){return o.a})),n.d(e,"c",(function(){return i.a})),n.d(e,"d",(function(){return d}));var r=n(65),o=n(66),i=n(8),a=n(4),u=n.n(a),s=n(6),c=n.n(s),f=n(7),l=n.n(f),h=n(3),p=n.n(h);var d=function(t){c()(n,t);var e=function(t){var e=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}();return function(){var n,r=p()(t);if(e){var o=p()(this).constructor;n=Reflect.construct(r,arguments,o)}else n=r.apply(this,arguments);return l()(this,n)}}(n);function n(t,r){var o;return u()(this,n),(o=e.call(this,r)).name="OAuthError",o.errorCode=t,o.errorSummary=r,o}return n}(n(34).a);function v(t){return t instanceof r.a}},function(t,e){function n(e){return t.exports=n=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)},t.exports.default=t.exports,t.exports.__esModule=!0,n(e)}t.exports=n,t.exports.default=t.exports,t.exports.__esModule=!0},function(t,e){t.exports=function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")},t.exports.default=t.exports,t.exports.__esModule=!0},function(t,e){function n(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}t.exports=function(t,e,r){return e&&n(t.prototype,e),r&&n(t,r),t},t.exports.default=t.exports,t.exports.__esModule=!0},function(t,e,n){var r=n(87);t.exports=function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&r(t,e)},t.exports.default=t.exports,t.exports.__esModule=!0},function(t,e,n){var r=n(24).default,o=n(86);t.exports=function(t,e){return!e||"object"!==r(e)&&"function"!=typeof e?o(t):e},t.exports.default=t.exports,t.exports.__esModule=!0},function(t,e,n){"use strict";n.d(e,"a",(function(){return l}));var r=n(4),o=n.n(r),i=n(6),a=n.n(i),u=n(7),s=n.n(u),c=n(3),f=n.n(c);var l=function(t){a()(n,t);var e=function(t){var e=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}();return function(){var n,r=f()(t);if(e){var o=f()(this).constructor;n=Reflect.construct(r,arguments,o)}else n=r.apply(this,arguments);return s()(this,n)}}(n);function n(t,r){var i;return o()(this,n),(i=e.call(this,t)).name="AuthSdkError",i.errorCode="INTERNAL",i.errorSummary=t,i.errorLink="INTERNAL",i.errorId="INTERNAL",i.errorCauses=[],r&&(i.xhr=r),i}return n}(n(34).a)},function(t,e,n){"use strict";var r=n(14),o=n(51).f,i=n(139),a=n(17),u=n(40),s=n(29),c=n(23),f=function(t){var e=function(e,n,r){if(this instanceof t){switch(arguments.length){case 0:return new t;case 1:return new t(e);case 2:return new t(e,n)}return new t(e,n,r)}return t.apply(this,arguments)};return e.prototype=t.prototype,e};t.exports=function(t,e){var n,l,h,p,d,v,y,g,m=t.target,b=t.global,w=t.stat,x=t.proto,k=b?r:w?r[m]:(r[m]||{}).prototype,T=b?a:a[m]||(a[m]={}),O=T.prototype;for(h in e)n=!i(b?h:m+(w?".":"#")+h,t.forced)&&k&&c(k,h),d=T[h],n&&(v=t.noTargetGet?(g=o(k,h))&&g.value:k[h]),p=n&&v?v:e[h],n&&typeof d==typeof p||(y=t.bind&&n?u(p,r):t.wrap&&n?f(p):x&&"function"==typeof p?u(Function.call,p):p,(t.sham||p&&p.sham||d&&d.sham)&&s(y,"sham",!0),T[h]=y,x&&(c(a,l=m+"Prototype")||s(a,l,{}),a[l][h]=p,t.real&&O&&!O[h]&&s(O,h,p)))}},function(t,e,n){"use strict";n.r(e),n.d(e,"isBrowser",(function(){return i})),n.d(e,"isIE11OrLess",(function(){return a})),n.d(e,"getUserAgent",(function(){return u})),n.d(e,"isFingerprintSupported",(function(){return s})),n.d(e,"isPopupPostMessageSupported",(function(){return c})),n.d(e,"isTokenVerifySupported",(function(){return f})),n.d(e,"hasTextEncoder",(function(){return l})),n.d(e,"isPKCESupported",(function(){return h})),n.d(e,"isHTTPS",(function(){return p})),n.d(e,"isLocalhost",(function(){return d}));var r=n(15),o=/windows phone|iemobile|wpdesktop/i;function i(){return"undefined"!=typeof document&&"undefined"!=typeof window}function a(){return i()&&!!document.documentMode&&document.documentMode<=11}function u(){return navigator.userAgent}function s(){var t=u();return t&&!o.test(t)}function c(){if(!i())return!1;var t=document.documentMode&&document.documentMode<10;return!(!window.postMessage||t)}function f(){return void 0!==r.webcrypto&&void 0!==r.webcrypto.subtle&&"undefined"!=typeof Uint8Array}function l(){return"undefined"!=typeof TextEncoder}function h(){return f()&&l()}function p(){return!!i()&&"https:"===window.location.protocol}function d(){return i()&&"localhost"===window.location.hostname}},function(t,e,n){var r=n(223),o=n(136),i=n(88),a=n(224);t.exports=function(t){return r(t)||o(t)||i(t)||a()},t.exports.default=t.exports,t.exports.__esModule=!0},function(t,e,n){var r=n(17),o=n(23),i=n(118),a=n(33).f;t.exports=function(t){var e=r.Symbol||(r.Symbol={});o(e,t)||a(e,t,{value:i.f(t)})}},function(t,e,n){var r=n(14),o=n(94),i=n(23),a=n(96),u=n(100),s=n(149),c=o("wks"),f=r.Symbol,l=s?f:f&&f.withoutSetter||a;t.exports=function(t){return i(c,t)&&(u||"string"==typeof c[t])||(u&&i(f,t)?c[t]=f[t]:c[t]=l("Symbol."+t)),c[t]}},function(t,e,n){(function(e){var n=function(t){return t&&t.Math==Math&&t};t.exports=n("object"==typeof globalThis&&globalThis)||n("object"==typeof window&&window)||n("object"==typeof self&&self)||n("object"==typeof e&&e)||function(){return this}()||Function("return this")()}).call(this,n(67))},function(t,e,n){"use strict";n.r(e),n.d(e,"stringToBase64Url",(function(){return u})),n.d(e,"base64ToBase64Url",(function(){return s})),n.d(e,"base64UrlToBase64",(function(){return c})),n.d(e,"base64UrlToString",(function(){return f})),n.d(e,"stringToBuffer",(function(){return l})),n.d(e,"base64UrlDecode",(function(){return h})),n.d(e,"getOidcHash",(function(){return p})),n.d(e,"verifyToken",(function(){return v})),n.d(e,"atob",(function(){return o})),n.d(e,"btoa",(function(){return i})),n.d(e,"webcrypto",(function(){return a}));var r=n(2),o=function(t){return atob(t)},i=function(t){return btoa(t)},a="undefined"==typeof crypto?null:crypto;function u(t){return s(i(t))}function s(t){return t.replace(/\+/g,"-").replace(/\//g,"_").replace(/=+$/,"")}function c(t){return t.replace(/-/g,"+").replace(/_/g,"/")}function f(t){var e=c(t);switch(e.length%4){case 0:break;case 2:e+="==";break;case 3:e+="=";break;default:throw new r.c("Not a valid Base64Url")}var n=o(e);try{return decodeURIComponent(escape(n))}catch(t){return n}}function l(t){for(var e=new Uint8Array(t.length),n=0;n<t.length;n++)e[n]=t.charCodeAt(n);return e}function h(t){return o(c(t))}function p(t){var e=(new TextEncoder).encode(t);return a.subtle.digest("SHA-256",e).then((function(t){var e=new Uint8Array(t).slice(0,16);return u(String.fromCharCode.apply(null,e))}))}var d=n(0);function v(t,e){e=Object(d.b)(e);var n={name:"RSASSA-PKCS1-v1_5",hash:{name:"SHA-256"}};return delete e.use,a.subtle.importKey("jwk",e,n,!0,["verify"]).then((function(e){var r=t.split("."),o=l(r[0]+"."+r[1]),i=l(h(r[2]));return a.subtle.verify(n,e,i,o)}))}},function(t,e){t.exports=function(t){try{return!!t()}catch(t){return!0}}},function(t,e){t.exports={}},function(t,e,n){var r=n(411);function o(e,n,i){return"undefined"!=typeof Reflect&&Reflect.get?(t.exports=o=Reflect.get,t.exports.default=t.exports,t.exports.__esModule=!0):(t.exports=o=function(t,e,n){var o=r(t,e);if(o){var i=Object.getOwnPropertyDescriptor(o,e);return i.get?i.get.call(n):i.value}},t.exports.default=t.exports,t.exports.__esModule=!0),o(e,n,i||e)}t.exports=o,t.exports.default=t.exports,t.exports.__esModule=!0},function(t,e,n){var r=n(16);t.exports=!r((function(){return 7!=Object.defineProperty({},1,{get:function(){return 7}})[1]}))},function(t,e,n){var r=n(22);t.exports=function(t){if(!r(t))throw TypeError(String(t)+" is not an object");return t}},function(t,e,n){t.exports=n(228)},function(t,e){t.exports=function(t){return"object"==typeof t?null!==t:"function"==typeof t}},function(t,e,n){var r=n(32),o={}.hasOwnProperty;t.exports=Object.hasOwn||function(t,e){return o.call(r(t),e)}},function(t,e){function n(e){return"function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?(t.exports=n=function(t){return typeof t},t.exports.default=t.exports,t.exports.__esModule=!0):(t.exports=n=function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},t.exports.default=t.exports,t.exports.__esModule=!0),n(e)}t.exports=n,t.exports.default=t.exports,t.exports.__esModule=!0},function(t,e){t.exports=function(t){return t&&t.__esModule?t:{default:t}},t.exports.default=t.exports,t.exports.__esModule=!0},function(t,e,n){(function(e){var n=function(t){return t&&t.Math==Math&&t};t.exports=n("object"==typeof globalThis&&globalThis)||n("object"==typeof window&&window)||n("object"==typeof self&&self)||n("object"==typeof e&&e)||function(){return this}()||Function("return this")()}).call(this,n(67))},function(t,e){t.exports=function(t){try{return!!t()}catch(t){return!0}}},function(t,e,n){var r=n(89),o=n(90);t.exports=function(t){return r(o(t))}},function(t,e,n){var r=n(19),o=n(33),i=n(35);t.exports=r?function(t,e,n){return o.f(t,e,i(1,n))}:function(t,e,n){return t[e]=n,t}},function(t,e,n){var r=n(17),o=n(14),i=function(t){return"function"==typeof t?t:void 0};t.exports=function(t,e){return arguments.length<2?i(r[t])||i(o[t]):r[t]&&r[t][e]||o[t]&&o[t][e]}},function(t,e,n){"use strict";var r=n(21),o=n(25);r(e,"__esModule",{value:!0}),e.default=void 0;var i=o(n(42)),a=o(n(230)),u=o(n(52)),s=o(n(248));n(256),n(171);var c=o(n(50)),f=o(n(290)),l=o(n(320)),h=o(n(370)),p=n(82),d=function(){var t=(0,c.default)(i.default.mark((function t(e){var n,r,o,c,p,d,v,y,g,m,b,w,x,k,T,O,S,_,E,A,j;return i.default.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(o=e.clientId,c=e.domain,p=e.issuer,d=e.stateHandle,v=e.interactionHandle,y=e.version,g=e.redirectUri,m=e.state,b=e.scopes,w=e.codeChallenge,x=e.codeChallengeMethod,p=null===(n=p)||void 0===n?void 0:n.replace(/\/+$/,""),k=(null===(r=p)||void 0===r?void 0:(0,a.default)(r).call(r,"/oauth2"))>0?p:p+"/oauth2",T={baseUrl:k,clientId:o,state:m},c||p){t.next=6;break}return t.abrupt("return",u.default.reject({error:"issuer is required"}));case 6:if(d||o){t.next=8;break}return t.abrupt("return",u.default.reject({error:"clientId is required"}));case 8:if(d||g){t.next=10;break}return t.abrupt("return",u.default.reject({error:"redirectUri is required"}));case 10:if(d||w&&x){t.next=12;break}return t.abrupt("return",u.default.reject({error:"PKCE params (codeChallenge, codeChallengeMethod) are required"}));case 12:if(c||(c=new s.default(p).origin),y){t.next=15;break}return t.abrupt("return",u.default.reject({error:"version is required"}));case 15:if((null!=y?y:"").replace(/[^0-9a-zA-Z._-]/,"")===y&&y){t.next=18;break}return t.abrupt("return",u.default.reject({error:"invalid version supplied - version is required and uses semver syntax"}));case 18:if(d||v){t.next=31;break}return t.prev=19,O={clientId:o,baseUrl:k,scopes:b,redirectUri:g,codeChallenge:w,codeChallengeMethod:x,state:m},t.next=23,(0,l.default)(O);case 23:S=t.sent,v=S,T.interactionHandle=v,t.next=31;break;case 28:return t.prev=28,t.t0=t.catch(19),t.abrupt("return",u.default.reject({error:t.t0}));case 31:return t.prev=31,_=(0,h.default)(y),E=_.makeIdxState,t.next=35,(0,f.default)({domain:c,interactionHandle:v,stateHandle:d,version:y}).catch((function(t){return u.default.reject({error:"introspect call failed",details:E(t,T)})}));case 35:return A=t.sent,j=E(A,T),t.abrupt("return",j);case 40:return t.prev=40,t.t1=t.catch(31),t.abrupt("return",u.default.reject({error:t.t1}));case 43:case"end":return t.stop()}}),t,null,[[19,28],[31,40]])})));return function(e){return t.apply(this,arguments)}}(),v=(0,h.default)("1.0.0").makeIdxState,y={start:d,introspect:f.default,interact:l.default,makeIdxState:v,client:p.HttpClient,LATEST_SUPPORTED_IDX_API_VERSION:"1.0.0"};e.default=y},function(t,e,n){var r=n(90);t.exports=function(t){return Object(r(t))}},function(t,e,n){var r=n(19),o=n(138),i=n(20),a=n(70),u=Object.defineProperty;e.f=r?u:function(t,e,n){if(i(t),e=a(e,!0),i(n),o)try{return u(t,e,n)}catch(t){}if("get"in n||"set"in n)throw TypeError("Accessors not supported");return"value"in n&&(t[e]=n.value),t}},function(t,e,n){"use strict";n.d(e,"a",(function(){return d}));var r=n(4),o=n.n(r),i=n(86),a=n.n(i),u=n(6),s=n.n(u),c=n(7),f=n.n(c),l=n(3),h=n.n(l),p=n(128);var d=function(t){s()(n,t);var e=function(t){var e=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}();return function(){var n,r=h()(t);if(e){var o=h()(this).constructor;n=Reflect.construct(r,arguments,o)}else n=r.apply(this,arguments);return f()(this,n)}}(n);function n(t){var r;return o()(this,n),r=e.call(this,t),Object.setPrototypeOf(a()(r),(this instanceof n?this.constructor:void 0).prototype),r}return n}(n.n(p)()(Error))},function(t,e){t.exports=function(t,e){return{enumerable:!(1&t),configurable:!(2&t),writable:!(4&t),value:e}}},function(t,e,n){var r=n(17);t.exports=function(t){return r[t+"Prototype"]}},function(t,e){t.exports=!0},function(t,e,n){var r=n(29);t.exports=function(t,e,n,o){o&&o.enumerable?t[e]=n:r(t,e,n)}},function(t,e,n){var r=n(102),o=n(33).f,i=n(29),a=n(23),u=n(239),s=n(13)("toStringTag");t.exports=function(t,e,n,c){if(t){var f=n?t:t.prototype;a(f,s)||o(f,s,{configurable:!0,value:e}),c&&!r&&i(f,"toString",u)}}},function(t,e,n){var r=n(41);t.exports=function(t,e,n){if(r(t),void 0===e)return t;switch(n){case 0:return function(){return t.call(e)};case 1:return function(n){return t.call(e,n)};case 2:return function(n,r){return t.call(e,n,r)};case 3:return function(n,r,o){return t.call(e,n,r,o)}}return function(){return t.apply(e,arguments)}}},function(t,e){t.exports=function(t){if("function"!=typeof t)throw TypeError(String(t)+" is not a function");return t}},function(t,e,n){t.exports=n(131)},function(t,e,n){var r=n(92),o=Math.min;t.exports=function(t){return t>0?o(r(t),9007199254740991):0}},function(t,e){t.exports={}},function(t,e,n){var r,o,i,a=n(244),u=n(14),s=n(22),c=n(29),f=n(23),l=n(95),h=n(71),p=n(73),d=u.WeakMap;if(a||l.state){var v=l.state||(l.state=new d),y=v.get,g=v.has,m=v.set;r=function(t,e){if(g.call(v,t))throw new TypeError("Object already initialized");return e.facade=t,m.call(v,t,e),e},o=function(t){return y.call(v,t)||{}},i=function(t){return g.call(v,t)}}else{var b=h("state");p[b]=!0,r=function(t,e){if(f(t,b))throw new TypeError("Object already initialized");return e.facade=t,c(t,b,e),e},o=function(t){return f(t,b)?t[b]:{}},i=function(t){return f(t,b)}}t.exports={set:r,get:o,has:i,enforce:function(t){return i(t)?o(t):r(t,{})},getterFor:function(t){return function(e){var n;if(!s(e)||(n=o(e)).type!==t)throw TypeError("Incompatible receiver, "+t+" required");return n}}}},function(t,e,n){"use strict";var r=n(162).charAt,o=n(45),i=n(163),a=o.set,u=o.getterFor("String Iterator");i(String,"String",(function(t){a(this,{type:"String Iterator",string:String(t),index:0})}),(function(){var t,e=u(this),n=e.string,o=e.index;return o>=n.length?{value:void 0,done:!0}:(t=r(n,o),e.index+=t.length,{value:t,done:!1})}))},function(t,e,n){var r=n(27);t.exports=!r((function(){return 7!=Object.defineProperty({},1,{get:function(){return 7}})[1]}))},function(t,e,n){var r=n(177),o={}.hasOwnProperty;t.exports=Object.hasOwn||function(t,e){return o.call(r(t),e)}},function(t,e,n){var r=n(78);t.exports=function(t){if(!r(t))throw TypeError(String(t)+" is not an object");return t}},function(t,e,n){var r=n(284);function o(t,e,n,o,i,a,u){try{var s=t[a](u),c=s.value}catch(t){return void n(t)}s.done?e(c):r.resolve(c).then(o,i)}t.exports=function(t){return function(){var e=this,n=arguments;return new r((function(r,i){var a=t.apply(e,n);function u(t){o(a,r,i,u,s,"next",t)}function s(t){o(a,r,i,u,s,"throw",t)}u(void 0)}))}},t.exports.default=t.exports,t.exports.__esModule=!0},function(t,e,n){var r=n(19),o=n(68),i=n(35),a=n(28),u=n(70),s=n(23),c=n(138),f=Object.getOwnPropertyDescriptor;e.f=r?f:function(t,e){if(t=a(t),e=u(e,!0),c)try{return f(t,e)}catch(t){}if(s(t,e))return i(!o.f.call(t,e),t[e])}},function(t,e,n){t.exports=n(234)},function(t,e,n){var r=n(146),o=n(99);t.exports=Object.keys||function(t){return r(t,o)}},function(t,e,n){var r=n(20),o=n(148),i=n(43),a=n(40),u=n(55),s=n(150),c=function(t,e){this.stopped=t,this.result=e};t.exports=function(t,e,n){var f,l,h,p,d,v,y,g=n&&n.that,m=!(!n||!n.AS_ENTRIES),b=!(!n||!n.IS_ITERATOR),w=!(!n||!n.INTERRUPTED),x=a(e,g,1+m+w),k=function(t){return f&&s(f),new c(!0,t)},T=function(t){return m?(r(t),w?x(t[0],t[1],k):x(t[0],t[1])):w?x(t,k):x(t)};if(b)f=t;else{if("function"!=typeof(l=u(t)))throw TypeError("Target is not iterable");if(o(l)){for(h=0,p=i(t.length);p>h;h++)if((d=T(t[h]))&&d instanceof c)return d;return new c(!1)}f=l.call(t)}for(v=f.next;!(y=v.call(f)).done;){try{d=T(y.value)}catch(t){throw s(f),t}if("object"==typeof d&&d&&d instanceof c)return d}return new c(!1)}},function(t,e,n){var r=n(56),o=n(44),i=n(13)("iterator");t.exports=function(t){if(null!=t)return t[i]||t["@@iterator"]||o[r(t)]}},function(t,e,n){var r=n(102),o=n(69),i=n(13)("toStringTag"),a="Arguments"==o(function(){return arguments}());t.exports=r?o:function(t){var e,n,r;return void 0===t?"Undefined":null===t?"Null":"string"==typeof(n=function(t,e){try{return t[e]}catch(t){}}(e=Object(t),i))?n:a?o(e):"Object"==(r=o(e))&&"function"==typeof e.callee?"Arguments":r}},function(t,e,n){"use strict";var r=n(41),o=function(t){var e,n;this.promise=new t((function(t,r){if(void 0!==e||void 0!==n)throw TypeError("Bad Promise constructor");e=t,n=r})),this.resolve=r(e),this.reject=r(n)};t.exports.f=function(t){return new o(t)}},function(t,e,n){n(105);var r=n(247),o=n(14),i=n(56),a=n(29),u=n(44),s=n(13)("toStringTag");for(var c in r){var f=o[c],l=f&&f.prototype;l&&i(l)!==s&&a(l,s,c),u[c]=u.Array}},function(t,e,n){"use strict";var r=n(70),o=n(33),i=n(35);t.exports=function(t,e,n){var a=r(e);a in t?o.f(t,a,i(0,n)):t[a]=n}},function(t,e,n){var r=n(47),o=n(79),i=n(174);t.exports=r?function(t,e,n){return o.f(t,e,i(1,n))}:function(t,e,n){return t[e]=n,t}},function(t,e,n){var r=n(69);t.exports=Array.isArray||function(t){return"Array"==r(t)}},function(t,e,n){var r=n(40),o=n(89),i=n(32),a=n(43),u=n(191),s=[].push,c=function(t){var e=1==t,n=2==t,c=3==t,f=4==t,l=6==t,h=7==t,p=5==t||l;return function(d,v,y,g){for(var m,b,w=i(d),x=o(w),k=r(v,y,3),T=a(x.length),O=0,S=g||u,_=e?S(d,T):n||h?S(d,0):void 0;T>O;O++)if((p||O in x)&&(b=k(m=x[O],O,w),t))if(e)_[O]=b;else if(b)switch(t){case 3:return!0;case 5:return m;case 6:return O;case 2:s.call(_,m)}else switch(t){case 4:return!1;case 7:s.call(_,m)}return l?-1:c||f?f:_}};t.exports={forEach:c(0),map:c(1),filter:c(2),some:c(3),every:c(4),find:c(5),findIndex:c(6),filterOut:c(7)}},function(t,e,n){t.exports=n(305)},function(t,e,n){var r=n(47),o=n(79).f,i=Function.prototype,a=i.toString,u=/^\s*function ([^ (]*)/;r&&!("name"in i)&&o(i,"name",{configurable:!0,get:function(){try{return a.call(this).match(u)[1]}catch(t){return""}}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return l}));var r=n(4),o=n.n(r),i=n(6),a=n.n(i),u=n(7),s=n.n(u),c=n(3),f=n.n(c);var l=function(t){a()(n,t);var e=function(t){var e=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}();return function(){var n,r=f()(t);if(e){var o=f()(this).constructor;n=Reflect.construct(r,arguments,o)}else n=r.apply(this,arguments);return s()(this,n)}}(n);function n(t,r){var i;o()(this,n);var a=t.errorSummary;return(i=e.call(this,a)).name="AuthApiError",i.errorSummary=t.errorSummary,i.errorCode=t.errorCode,i.errorLink=t.errorLink,i.errorId=t.errorId,i.errorCauses=t.errorCauses,r&&(i.xhr=r),i}return n}(n(34).a)},function(t,e,n){"use strict";n.d(e,"a",(function(){return l}));var r=n(4),o=n.n(r),i=n(6),a=n.n(i),u=n(7),s=n.n(u),c=n(3),f=n.n(c);var l=function(t){a()(n,t);var e=function(t){var e=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}();return function(){var n,r=f()(t);if(e){var o=f()(this).constructor;n=Reflect.construct(r,arguments,o)}else n=r.apply(this,arguments);return s()(this,n)}}(n);function n(){return o()(this,n),e.call(this,"The poll was stopped by the sdk")}return n}(n(34).a)},function(t,e){var n;n=function(){return this}();try{n=n||new Function("return this")()}catch(t){"object"==typeof window&&(n=window)}t.exports=n},function(t,e,n){"use strict";var r={}.propertyIsEnumerable,o=Object.getOwnPropertyDescriptor,i=o&&!r.call({1:2},1);e.f=i?function(t){var e=o(this,t);return!!e&&e.enumerable}:r},function(t,e){var n={}.toString;t.exports=function(t){return n.call(t).slice(8,-1)}},function(t,e,n){var r=n(22);t.exports=function(t,e){if(!r(t))return t;var n,o;if(e&&"function"==typeof(n=t.toString)&&!r(o=n.call(t)))return o;if("function"==typeof(n=t.valueOf)&&!r(o=n.call(t)))return o;if(!e&&"function"==typeof(n=t.toString)&&!r(o=n.call(t)))return o;throw TypeError("Can't convert object to primitive value")}},function(t,e,n){var r=n(94),o=n(96),i=r("keys");t.exports=function(t){return i[t]||(i[t]=o(t))}},function(t,e,n){var r,o=n(20),i=n(98),a=n(99),u=n(73),s=n(147),c=n(91),f=n(71)("IE_PROTO"),l=function(){},h=function(t){return"<script>"+t+"<\/script>"},p=function(){try{r=document.domain&&new ActiveXObject("htmlfile")}catch(t){}var t,e;p=r?function(t){t.write(h("")),t.close();var e=t.parentWindow.Object;return t=null,e}(r):((e=c("iframe")).style.display="none",s.appendChild(e),e.src=String("javascript:"),(t=e.contentWindow.document).open(),t.write(h("document.F=Object")),t.close(),t.F);for(var n=a.length;n--;)delete p.prototype[a[n]];return p()};u[f]=!0,t.exports=Object.create||function(t,e){var n;return null!==t?(l.prototype=o(t),n=new l,l.prototype=null,n[f]=t):n=p(),void 0===e?n:i(n,e)}},function(t,e){t.exports={}},function(t,e,n){var r,o,i=n(14),a=n(101),u=i.process,s=u&&u.versions,c=s&&s.v8;c?o=(r=c.split("."))[0]<4?1:r[0]+r[1]:a&&(!(r=a.match(/Edge\/(\d+)/))||r[1]>=74)&&(r=a.match(/Chrome\/(\d+)/))&&(o=r[1]),t.exports=o&&+o},function(t,e){t.exports=function(t){try{return{error:!1,value:t()}}catch(t){return{error:!0,value:t}}}},function(t,e,n){var r=n(175),o=n(77);t.exports=function(t){return r(o(t))}},function(t,e){t.exports=function(t){if(null==t)throw TypeError("Can't call method on "+t);return t}},function(t,e){t.exports=function(t){return"object"==typeof t?null!==t:"function"==typeof t}},function(t,e,n){var r=n(47),o=n(178),i=n(49),a=n(176),u=Object.defineProperty;e.f=r?u:function(t,e,n){if(i(t),e=a(e,!0),i(n),o)try{return u(t,e,n)}catch(t){}if("get"in n||"set"in n)throw TypeError("Accessors not supported");return"value"in n&&(t[e]=n.value),t}},function(t,e){var n=Math.ceil,r=Math.floor;t.exports=function(t){return isNaN(t=+t)?0:(t>0?r:n)(t)}},function(t,e,n){var r=n(26),o=n(111),i=n(48),a=n(183),u=n(186),s=n(279),c=o("wks"),f=r.Symbol,l=s?f:f&&f.withoutSetter||a;t.exports=function(t){return i(c,t)&&(u||"string"==typeof c[t])||(u&&i(f,t)?c[t]=f[t]:c[t]=l("Symbol."+t)),c[t]}},function(t,e,n){"use strict";var r=n(83),o=n(116),i=n(84),a=n(119),u=n(63),s=n(120),c=n(121),f=n(21),l=n(25);f(e,"__esModule",{value:!0}),e.request=e.HttpClient=void 0;var h=l(n(42)),p=l(n(63)),d=l(n(122)),v=l(n(50)),y=l(n(130)),g=n(319);function m(t,e){var n=r(t);if(o){var u=o(t);e&&(u=i(u).call(u,(function(e){return a(t,e).enumerable}))),n.push.apply(n,u)}return n}function b(t){for(var e=1;e<arguments.length;e++){var n,r=null!=arguments[e]?arguments[e]:{};if(e%2)u(n=m(Object(r),!0)).call(n,(function(e){(0,d.default)(t,e,r[e])}));else if(s)c(t,s(r));else{var o;u(o=m(Object(r))).call(o,(function(e){f(t,e,a(r,e))}))}}return t}var w={interceptors:{request:new function(){this.handlers=[],this.use=function(t){this.handlers.push({before:t})},this.clear=function(){this.handlers=[]}}}};e.HttpClient=w;var x=function(){var t=(0,v.default)(h.default.mark((function t(e,n){var r,o,i,a,u,s,c,f,l,d;return h.default.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return r=n.method,o=void 0===r?"POST":r,i=n.headers,a=void 0===i?{}:i,u=n.credentials,s=void 0===u?"include":u,c=n.body,f={url:e,method:o,headers:b(b({},(0,g.userAgentHeaders)()),a),credentials:s,body:c},w.interceptors&&(0,p.default)(l=w.interceptors.request.handlers).call(l,(function(t){t.before(f)})),d=f.url,delete f.url,t.abrupt("return",(0,y.default)(d,f));case 6:case"end":return t.stop()}}),t)})));return function(e,n){return t.apply(this,arguments)}}();e.request=x},function(t,e,n){t.exports=n(294)},function(t,e,n){t.exports=n(298)},function(t,e,n){var r=n(16),o=n(13),i=n(74),a=o("species");t.exports=function(t){return i>=51||!r((function(){var e=[];return(e.constructor={})[a]=function(){return{foo:1}},1!==e[t](Boolean).foo}))}},function(t,e){t.exports=function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t},t.exports.default=t.exports,t.exports.__esModule=!0},function(t,e){function n(e,r){return t.exports=n=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t},t.exports.default=t.exports,t.exports.__esModule=!0,n(e,r)}t.exports=n,t.exports.default=t.exports,t.exports.__esModule=!0},function(t,e,n){var r=n(133);t.exports=function(t,e){if(t){if("string"==typeof t)return r(t,e);var n=Object.prototype.toString.call(t).slice(8,-1);return"Object"===n&&t.constructor&&(n=t.constructor.name),"Map"===n||"Set"===n?Array.from(t):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?r(t,e):void 0}},t.exports.default=t.exports,t.exports.__esModule=!0},function(t,e,n){var r=n(16),o=n(69),i="".split;t.exports=r((function(){return!Object("z").propertyIsEnumerable(0)}))?function(t){return"String"==o(t)?i.call(t,""):Object(t)}:Object},function(t,e){t.exports=function(t){if(null==t)throw TypeError("Can't call method on "+t);return t}},function(t,e,n){var r=n(14),o=n(22),i=r.document,a=o(i)&&o(i.createElement);t.exports=function(t){return a?i.createElement(t):{}}},function(t,e){var n=Math.ceil,r=Math.floor;t.exports=function(t){return isNaN(t=+t)?0:(t>0?r:n)(t)}},function(t,e,n){var r=n(23),o=n(32),i=n(71),a=n(236),u=i("IE_PROTO"),s=Object.prototype;t.exports=a?Object.getPrototypeOf:function(t){return t=o(t),r(t,u)?t[u]:"function"==typeof t.constructor&&t instanceof t.constructor?t.constructor.prototype:t instanceof Object?s:null}},function(t,e,n){var r=n(37),o=n(95);(t.exports=function(t,e){return o[t]||(o[t]=void 0!==e?e:{})})("versions",[]).push({version:"3.15.1",mode:r?"pure":"global",copyright:"© 2021 Denis Pushkarev (zloirock.ru)"})},function(t,e,n){var r=n(14),o=n(235),i=r["__core-js_shared__"]||o("__core-js_shared__",{});t.exports=i},function(t,e){var n=0,r=Math.random();t.exports=function(t){return"Symbol("+String(void 0===t?"":t)+")_"+(++n+r).toString(36)}},function(t,e,n){var r=n(20),o=n(237);t.exports=Object.setPrototypeOf||("__proto__"in{}?function(){var t,e=!1,n={};try{(t=Object.getOwnPropertyDescriptor(Object.prototype,"__proto__").set).call(n,[]),e=n instanceof Array}catch(t){}return function(n,i){return r(n),o(i),e?t.call(n,i):n.__proto__=i,n}}():void 0)},function(t,e,n){var r=n(19),o=n(33),i=n(20),a=n(53);t.exports=r?Object.defineProperties:function(t,e){i(t);for(var n,r=a(e),u=r.length,s=0;u>s;)o.f(t,n=r[s++],e[n]);return t}},function(t,e){t.exports=["constructor","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","toLocaleString","toString","valueOf"]},function(t,e,n){var r=n(74),o=n(16);t.exports=!!Object.getOwnPropertySymbols&&!o((function(){var t=Symbol();return!String(t)||!(Object(t)instanceof Symbol)||!Symbol.sham&&r&&r<41}))},function(t,e,n){var r=n(30);t.exports=r("navigator","userAgent")||""},function(t,e,n){var r={};r[n(13)("toStringTag")]="z",t.exports="[object z]"===String(r)},function(t,e){t.exports=function(t,e,n){if(!(t instanceof e))throw TypeError("Incorrect "+(n?n+" ":"")+"invocation");return t}},function(t,e,n){var r=n(69),o=n(14);t.exports="process"==r(o.process)},function(t,e,n){"use strict";var r=n(28),o=n(166),i=n(44),a=n(45),u=n(163),s=a.set,c=a.getterFor("Array Iterator");t.exports=u(Array,"Array",(function(t,e){s(this,{type:"Array Iterator",target:r(t),index:0,kind:e})}),(function(){var t=c(this),e=t.target,n=t.kind,r=t.index++;return!e||r>=e.length?(t.target=void 0,{value:void 0,done:!0}):"keys"==n?{value:r,done:!1}:"values"==n?{value:e[r],done:!1}:{value:[r,e[r]],done:!1}}),"values"),i.Arguments=i.Array,o("keys"),o("values"),o("entries")},function(t,e){e.f=Object.getOwnPropertySymbols},function(t,e){var n={}.toString;t.exports=function(t){return n.call(t).slice(8,-1)}},function(t,e,n){var r=n(26),o=n(60),i=n(48),a=n(109),u=n(180),s=n(181),c=s.get,f=s.enforce,l=String(String).split("String");(t.exports=function(t,e,n,u){var s,c=!!u&&!!u.unsafe,h=!!u&&!!u.enumerable,p=!!u&&!!u.noTargetGet;"function"==typeof n&&("string"!=typeof e||i(n,"name")||o(n,"name",e),(s=f(n)).source||(s.source=l.join("string"==typeof e?e:""))),t!==r?(c?!p&&t[e]&&(h=!0):delete t[e],h?t[e]=n:o(t,e,n)):h?t[e]=n:a(e,n)})(Function.prototype,"toString",(function(){return"function"==typeof this&&c(this).source||u(this)}))},function(t,e,n){var r=n(26),o=n(60);t.exports=function(t,e){try{o(r,t,e)}catch(n){r[t]=e}return e}},function(t,e,n){var r=n(26),o=n(109),i=r["__core-js_shared__"]||o("__core-js_shared__",{});t.exports=i},function(t,e,n){var r=n(260),o=n(110);(t.exports=function(t,e){return o[t]||(o[t]=void 0!==e?e:{})})("versions",[]).push({version:"3.15.1",mode:r?"pure":"global",copyright:"© 2021 Denis Pushkarev (zloirock.ru)"})},function(t,e){t.exports={}},function(t,e,n){var r=n(263),o=n(26),i=function(t){return"function"==typeof t?t:void 0};t.exports=function(t,e){return arguments.length<2?i(r[t])||i(o[t]):r[t]&&r[t][e]||o[t]&&o[t][e]}},function(t,e){t.exports=["constructor","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","toLocaleString","toString","valueOf"]},function(t,e,n){"use strict";var r,o,i=n(269),a=n(270),u=n(111),s=n(271),c=n(181).get,f=n(275),l=n(276),h=RegExp.prototype.exec,p=u("native-string-replace",String.prototype.replace),d=h,v=(r=/a/,o=/b*/g,h.call(r,"a"),h.call(o,"a"),0!==r.lastIndex||0!==o.lastIndex),y=a.UNSUPPORTED_Y||a.BROKEN_CARET,g=void 0!==/()??/.exec("")[1];(v||g||y||f||l)&&(d=function(t){var e,n,r,o,a,u,f,l=this,m=c(l),b=m.raw;if(b)return b.lastIndex=l.lastIndex,e=d.call(b,t),l.lastIndex=b.lastIndex,e;var w=m.groups,x=y&&l.sticky,k=i.call(l),T=l.source,O=0,S=t;if(x&&(-1===(k=k.replace("y","")).indexOf("g")&&(k+="g"),S=String(t).slice(l.lastIndex),l.lastIndex>0&&(!l.multiline||l.multiline&&"\n"!==t[l.lastIndex-1])&&(T="(?: "+T+")",S=" "+S,O++),n=new RegExp("^(?:"+T+")",k)),g&&(n=new RegExp("^"+T+"$(?!\\s)",k)),v&&(r=l.lastIndex),o=h.call(x?n:l,S),x?o?(o.input=o.input.slice(O),o[0]=o[0].slice(O),o.index=l.lastIndex,l.lastIndex+=o[0].length):l.lastIndex=0:v&&o&&(l.lastIndex=l.global?o.index+o[0].length:r),g&&o&&o.length>1&&p.call(o[0],n,(function(){for(a=1;a<arguments.length-2;a++)void 0===arguments[a]&&(o[a]=void 0)})),o&&w)for(o.groups=u=s(null),a=0;a<w.length;a++)u[(f=w[a])[0]]=o[f[1]];return o}),t.exports=d},function(t,e,n){t.exports=n(296)},function(t,e,n){var r=n(146),o=n(99).concat("length","prototype");e.f=Object.getOwnPropertyNames||function(t){return r(t,o)}},function(t,e,n){var r=n(13);e.f=r},function(t,e,n){t.exports=n(302)},function(t,e,n){t.exports=n(310)},function(t,e,n){t.exports=n(314)},function(t,e,n){var r=n(317);t.exports=function(t,e,n){return e in t?r(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t},t.exports.default=t.exports,t.exports.__esModule=!0},function(t,e,n){t.exports=n(327)},function(t,e,n){t.exports=n(351)},function(t,e,n){t.exports=n(359)},function(t,e,n){t.exports=n(396)},function(t,e,n){var r={};r[n(81)("toStringTag")]="z",t.exports="[object z]"===String(r)},function(t,e,n){var r=n(3),o=n(87),i=n(212),a=n(213);function u(e){var n="function"==typeof Map?new Map:void 0;return t.exports=u=function(t){if(null===t||!i(t))return t;if("function"!=typeof t)throw new TypeError("Super expression must either be null or a function");if(void 0!==n){if(n.has(t))return n.get(t);n.set(t,e)}function e(){return a(t,arguments,r(this).constructor)}return e.prototype=Object.create(t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),o(e,t)},t.exports.default=t.exports,t.exports.__esModule=!0,u(e)}t.exports=u,t.exports.default=t.exports,t.exports.__esModule=!0},function(t,e,n){var r=n(132),o=n(215),i=n(88),a=n(134);t.exports=function(t,e){return r(t)||o(t,e)||i(t,e)||a()},t.exports.default=t.exports,t.exports.__esModule=!0},function(t,e){var n="undefined"!=typeof self?self:this,r=function(){function t(){this.fetch=!1,this.DOMException=n.DOMException}return t.prototype=n,new t}();!function(t){!function(e){var n="URLSearchParams"in t,r="Symbol"in t&&"iterator"in Symbol,o="FileReader"in t&&"Blob"in t&&function(){try{return new Blob,!0}catch(t){return!1}}(),i="FormData"in t,a="ArrayBuffer"in t;if(a)var u=["[object Int8Array]","[object Uint8Array]","[object Uint8ClampedArray]","[object Int16Array]","[object Uint16Array]","[object Int32Array]","[object Uint32Array]","[object Float32Array]","[object Float64Array]"],s=ArrayBuffer.isView||function(t){return t&&u.indexOf(Object.prototype.toString.call(t))>-1};function c(t){if("string"!=typeof t&&(t=String(t)),/[^a-z0-9\-#$%&'*+.^_`|~]/i.test(t))throw new TypeError("Invalid character in header field name");return t.toLowerCase()}function f(t){return"string"!=typeof t&&(t=String(t)),t}function l(t){var e={next:function(){var e=t.shift();return{done:void 0===e,value:e}}};return r&&(e[Symbol.iterator]=function(){return e}),e}function h(t){this.map={},t instanceof h?t.forEach((function(t,e){this.append(e,t)}),this):Array.isArray(t)?t.forEach((function(t){this.append(t[0],t[1])}),this):t&&Object.getOwnPropertyNames(t).forEach((function(e){this.append(e,t[e])}),this)}function p(t){if(t.bodyUsed)return Promise.reject(new TypeError("Already read"));t.bodyUsed=!0}function d(t){return new Promise((function(e,n){t.onload=function(){e(t.result)},t.onerror=function(){n(t.error)}}))}function v(t){var e=new FileReader,n=d(e);return e.readAsArrayBuffer(t),n}function y(t){if(t.slice)return t.slice(0);var e=new Uint8Array(t.byteLength);return e.set(new Uint8Array(t)),e.buffer}function g(){return this.bodyUsed=!1,this._initBody=function(t){var e;this._bodyInit=t,t?"string"==typeof t?this._bodyText=t:o&&Blob.prototype.isPrototypeOf(t)?this._bodyBlob=t:i&&FormData.prototype.isPrototypeOf(t)?this._bodyFormData=t:n&&URLSearchParams.prototype.isPrototypeOf(t)?this._bodyText=t.toString():a&&o&&(e=t)&&DataView.prototype.isPrototypeOf(e)?(this._bodyArrayBuffer=y(t.buffer),this._bodyInit=new Blob([this._bodyArrayBuffer])):a&&(ArrayBuffer.prototype.isPrototypeOf(t)||s(t))?this._bodyArrayBuffer=y(t):this._bodyText=t=Object.prototype.toString.call(t):this._bodyText="",this.headers.get("content-type")||("string"==typeof t?this.headers.set("content-type","text/plain;charset=UTF-8"):this._bodyBlob&&this._bodyBlob.type?this.headers.set("content-type",this._bodyBlob.type):n&&URLSearchParams.prototype.isPrototypeOf(t)&&this.headers.set("content-type","application/x-www-form-urlencoded;charset=UTF-8"))},o&&(this.blob=function(){var t=p(this);if(t)return t;if(this._bodyBlob)return Promise.resolve(this._bodyBlob);if(this._bodyArrayBuffer)return Promise.resolve(new Blob([this._bodyArrayBuffer]));if(this._bodyFormData)throw new Error("could not read FormData body as blob");return Promise.resolve(new Blob([this._bodyText]))},this.arrayBuffer=function(){return this._bodyArrayBuffer?p(this)||Promise.resolve(this._bodyArrayBuffer):this.blob().then(v)}),this.text=function(){var t,e,n,r=p(this);if(r)return r;if(this._bodyBlob)return t=this._bodyBlob,n=d(e=new FileReader),e.readAsText(t),n;if(this._bodyArrayBuffer)return Promise.resolve(function(t){for(var e=new Uint8Array(t),n=new Array(e.length),r=0;r<e.length;r++)n[r]=String.fromCharCode(e[r]);return n.join("")}(this._bodyArrayBuffer));if(this._bodyFormData)throw new Error("could not read FormData body as text");return Promise.resolve(this._bodyText)},i&&(this.formData=function(){return this.text().then(w)}),this.json=function(){return this.text().then(JSON.parse)},this}h.prototype.append=function(t,e){t=c(t),e=f(e);var n=this.map[t];this.map[t]=n?n+", "+e:e},h.prototype.delete=function(t){delete this.map[c(t)]},h.prototype.get=function(t){return t=c(t),this.has(t)?this.map[t]:null},h.prototype.has=function(t){return this.map.hasOwnProperty(c(t))},h.prototype.set=function(t,e){this.map[c(t)]=f(e)},h.prototype.forEach=function(t,e){for(var n in this.map)this.map.hasOwnProperty(n)&&t.call(e,this.map[n],n,this)},h.prototype.keys=function(){var t=[];return this.forEach((function(e,n){t.push(n)})),l(t)},h.prototype.values=function(){var t=[];return this.forEach((function(e){t.push(e)})),l(t)},h.prototype.entries=function(){var t=[];return this.forEach((function(e,n){t.push([n,e])})),l(t)},r&&(h.prototype[Symbol.iterator]=h.prototype.entries);var m=["DELETE","GET","HEAD","OPTIONS","POST","PUT"];function b(t,e){var n,r,o=(e=e||{}).body;if(t instanceof b){if(t.bodyUsed)throw new TypeError("Already read");this.url=t.url,this.credentials=t.credentials,e.headers||(this.headers=new h(t.headers)),this.method=t.method,this.mode=t.mode,this.signal=t.signal,o||null==t._bodyInit||(o=t._bodyInit,t.bodyUsed=!0)}else this.url=String(t);if(this.credentials=e.credentials||this.credentials||"same-origin",!e.headers&&this.headers||(this.headers=new h(e.headers)),this.method=(r=(n=e.method||this.method||"GET").toUpperCase(),m.indexOf(r)>-1?r:n),this.mode=e.mode||this.mode||null,this.signal=e.signal||this.signal,this.referrer=null,("GET"===this.method||"HEAD"===this.method)&&o)throw new TypeError("Body not allowed for GET or HEAD requests");this._initBody(o)}function w(t){var e=new FormData;return t.trim().split("&").forEach((function(t){if(t){var n=t.split("="),r=n.shift().replace(/\+/g," "),o=n.join("=").replace(/\+/g," ");e.append(decodeURIComponent(r),decodeURIComponent(o))}})),e}function x(t,e){e||(e={}),this.type="default",this.status=void 0===e.status?200:e.status,this.ok=this.status>=200&&this.status<300,this.statusText="statusText"in e?e.statusText:"OK",this.headers=new h(e.headers),this.url=e.url||"",this._initBody(t)}b.prototype.clone=function(){return new b(this,{body:this._bodyInit})},g.call(b.prototype),g.call(x.prototype),x.prototype.clone=function(){return new x(this._bodyInit,{status:this.status,statusText:this.statusText,headers:new h(this.headers),url:this.url})},x.error=function(){var t=new x(null,{status:0,statusText:""});return t.type="error",t};var k=[301,302,303,307,308];x.redirect=function(t,e){if(-1===k.indexOf(e))throw new RangeError("Invalid status code");return new x(null,{status:e,headers:{location:t}})},e.DOMException=t.DOMException;try{new e.DOMException}catch(t){e.DOMException=function(t,e){this.message=t,this.name=e;var n=Error(t);this.stack=n.stack},e.DOMException.prototype=Object.create(Error.prototype),e.DOMException.prototype.constructor=e.DOMException}function T(t,n){return new Promise((function(r,i){var a=new b(t,n);if(a.signal&&a.signal.aborted)return i(new e.DOMException("Aborted","AbortError"));var u=new XMLHttpRequest;function s(){u.abort()}u.onload=function(){var t,e,n={status:u.status,statusText:u.statusText,headers:(t=u.getAllResponseHeaders()||"",e=new h,t.replace(/\r?\n[\t ]+/g," ").split(/\r?\n/).forEach((function(t){var n=t.split(":"),r=n.shift().trim();if(r){var o=n.join(":").trim();e.append(r,o)}})),e)};n.url="responseURL"in u?u.responseURL:n.headers.get("X-Request-URL");var o="response"in u?u.response:u.responseText;r(new x(o,n))},u.onerror=function(){i(new TypeError("Network request failed"))},u.ontimeout=function(){i(new TypeError("Network request failed"))},u.onabort=function(){i(new e.DOMException("Aborted","AbortError"))},u.open(a.method,a.url,!0),"include"===a.credentials?u.withCredentials=!0:"omit"===a.credentials&&(u.withCredentials=!1),"responseType"in u&&o&&(u.responseType="blob"),a.headers.forEach((function(t,e){u.setRequestHeader(e,t)})),a.signal&&(a.signal.addEventListener("abort",s),u.onreadystatechange=function(){4===u.readyState&&a.signal.removeEventListener("abort",s)}),u.send(void 0===a._bodyInit?null:a._bodyInit)}))}T.polyfill=!0,t.fetch||(t.fetch=T,t.Headers=h,t.Request=b,t.Response=x),e.Headers=h,e.Request=b,e.Response=x,e.fetch=T,Object.defineProperty(e,"__esModule",{value:!0})}({})}(r),r.fetch.ponyfill=!0,delete r.fetch.polyfill;var o=r;(e=o.fetch).default=o.fetch,e.fetch=o.fetch,e.Headers=o.Headers,e.Request=o.Request,e.Response=o.Response,t.exports=e},function(t,e,n){var r=function(t){"use strict";var e=Object.prototype,n=e.hasOwnProperty,r="function"==typeof Symbol?Symbol:{},o=r.iterator||"@@iterator",i=r.asyncIterator||"@@asyncIterator",a=r.toStringTag||"@@toStringTag";function u(t,e,n){return Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}),t[e]}try{u({},"")}catch(t){u=function(t,e,n){return t[e]=n}}function s(t,e,n,r){var o=e&&e.prototype instanceof l?e:l,i=Object.create(o.prototype),a=new T(r||[]);return i._invoke=function(t,e,n){var r="suspendedStart";return function(o,i){if("executing"===r)throw new Error("Generator is already running");if("completed"===r){if("throw"===o)throw i;return{value:void 0,done:!0}}for(n.method=o,n.arg=i;;){var a=n.delegate;if(a){var u=w(a,n);if(u){if(u===f)continue;return u}}if("next"===n.method)n.sent=n._sent=n.arg;else if("throw"===n.method){if("suspendedStart"===r)throw r="completed",n.arg;n.dispatchException(n.arg)}else"return"===n.method&&n.abrupt("return",n.arg);r="executing";var s=c(t,e,n);if("normal"===s.type){if(r=n.done?"completed":"suspendedYield",s.arg===f)continue;return{value:s.arg,done:n.done}}"throw"===s.type&&(r="completed",n.method="throw",n.arg=s.arg)}}}(t,n,a),i}function c(t,e,n){try{return{type:"normal",arg:t.call(e,n)}}catch(t){return{type:"throw",arg:t}}}t.wrap=s;var f={};function l(){}function h(){}function p(){}var d={};d[o]=function(){return this};var v=Object.getPrototypeOf,y=v&&v(v(O([])));y&&y!==e&&n.call(y,o)&&(d=y);var g=p.prototype=l.prototype=Object.create(d);function m(t){["next","throw","return"].forEach((function(e){u(t,e,(function(t){return this._invoke(e,t)}))}))}function b(t,e){var r;this._invoke=function(o,i){function a(){return new e((function(r,a){!function r(o,i,a,u){var s=c(t[o],t,i);if("throw"!==s.type){var f=s.arg,l=f.value;return l&&"object"==typeof l&&n.call(l,"__await")?e.resolve(l.__await).then((function(t){r("next",t,a,u)}),(function(t){r("throw",t,a,u)})):e.resolve(l).then((function(t){f.value=t,a(f)}),(function(t){return r("throw",t,a,u)}))}u(s.arg)}(o,i,r,a)}))}return r=r?r.then(a,a):a()}}function w(t,e){var n=t.iterator[e.method];if(void 0===n){if(e.delegate=null,"throw"===e.method){if(t.iterator.return&&(e.method="return",e.arg=void 0,w(t,e),"throw"===e.method))return f;e.method="throw",e.arg=new TypeError("The iterator does not provide a 'throw' method")}return f}var r=c(n,t.iterator,e.arg);if("throw"===r.type)return e.method="throw",e.arg=r.arg,e.delegate=null,f;var o=r.arg;return o?o.done?(e[t.resultName]=o.value,e.next=t.nextLoc,"return"!==e.method&&(e.method="next",e.arg=void 0),e.delegate=null,f):o:(e.method="throw",e.arg=new TypeError("iterator result is not an object"),e.delegate=null,f)}function x(t){var e={tryLoc:t[0]};1 in t&&(e.catchLoc=t[1]),2 in t&&(e.finallyLoc=t[2],e.afterLoc=t[3]),this.tryEntries.push(e)}function k(t){var e=t.completion||{};e.type="normal",delete e.arg,t.completion=e}function T(t){this.tryEntries=[{tryLoc:"root"}],t.forEach(x,this),this.reset(!0)}function O(t){if(t){var e=t[o];if(e)return e.call(t);if("function"==typeof t.next)return t;if(!isNaN(t.length)){var r=-1,i=function e(){for(;++r<t.length;)if(n.call(t,r))return e.value=t[r],e.done=!1,e;return e.value=void 0,e.done=!0,e};return i.next=i}}return{next:S}}function S(){return{value:void 0,done:!0}}return h.prototype=g.constructor=p,p.constructor=h,h.displayName=u(p,a,"GeneratorFunction"),t.isGeneratorFunction=function(t){var e="function"==typeof t&&t.constructor;return!!e&&(e===h||"GeneratorFunction"===(e.displayName||e.name))},t.mark=function(t){return Object.setPrototypeOf?Object.setPrototypeOf(t,p):(t.__proto__=p,u(t,a,"GeneratorFunction")),t.prototype=Object.create(g),t},t.awrap=function(t){return{__await:t}},m(b.prototype),b.prototype[i]=function(){return this},t.AsyncIterator=b,t.async=function(e,n,r,o,i){void 0===i&&(i=Promise);var a=new b(s(e,n,r,o),i);return t.isGeneratorFunction(n)?a:a.next().then((function(t){return t.done?t.value:a.next()}))},m(g),u(g,a,"Generator"),g[o]=function(){return this},g.toString=function(){return"[object Generator]"},t.keys=function(t){var e=[];for(var n in t)e.push(n);return e.reverse(),function n(){for(;e.length;){var r=e.pop();if(r in t)return n.value=r,n.done=!1,n}return n.done=!0,n}},t.values=O,T.prototype={constructor:T,reset:function(t){if(this.prev=0,this.next=0,this.sent=this._sent=void 0,this.done=!1,this.delegate=null,this.method="next",this.arg=void 0,this.tryEntries.forEach(k),!t)for(var e in this)"t"===e.charAt(0)&&n.call(this,e)&&!isNaN(+e.slice(1))&&(this[e]=void 0)},stop:function(){this.done=!0;var t=this.tryEntries[0].completion;if("throw"===t.type)throw t.arg;return this.rval},dispatchException:function(t){if(this.done)throw t;var e=this;function r(n,r){return a.type="throw",a.arg=t,e.next=n,r&&(e.method="next",e.arg=void 0),!!r}for(var o=this.tryEntries.length-1;o>=0;--o){var i=this.tryEntries[o],a=i.completion;if("root"===i.tryLoc)return r("end");if(i.tryLoc<=this.prev){var u=n.call(i,"catchLoc"),s=n.call(i,"finallyLoc");if(u&&s){if(this.prev<i.catchLoc)return r(i.catchLoc,!0);if(this.prev<i.finallyLoc)return r(i.finallyLoc)}else if(u){if(this.prev<i.catchLoc)return r(i.catchLoc,!0)}else{if(!s)throw new Error("try statement without catch or finally");if(this.prev<i.finallyLoc)return r(i.finallyLoc)}}}},abrupt:function(t,e){for(var r=this.tryEntries.length-1;r>=0;--r){var o=this.tryEntries[r];if(o.tryLoc<=this.prev&&n.call(o,"finallyLoc")&&this.prev<o.finallyLoc){var i=o;break}}i&&("break"===t||"continue"===t)&&i.tryLoc<=e&&e<=i.finallyLoc&&(i=null);var a=i?i.completion:{};return a.type=t,a.arg=e,i?(this.method="next",this.next=i.finallyLoc,f):this.complete(a)},complete:function(t,e){if("throw"===t.type)throw t.arg;return"break"===t.type||"continue"===t.type?this.next=t.arg:"return"===t.type?(this.rval=this.arg=t.arg,this.method="return",this.next="end"):"normal"===t.type&&e&&(this.next=e),f},finish:function(t){for(var e=this.tryEntries.length-1;e>=0;--e){var n=this.tryEntries[e];if(n.finallyLoc===t)return this.complete(n.completion,n.afterLoc),k(n),f}},catch:function(t){for(var e=this.tryEntries.length-1;e>=0;--e){var n=this.tryEntries[e];if(n.tryLoc===t){var r=n.completion;if("throw"===r.type){var o=r.arg;k(n)}return o}}throw new Error("illegal catch attempt")},delegateYield:function(t,e,n){return this.delegate={iterator:O(t),resultName:e,nextLoc:n},"next"===this.method&&(this.arg=void 0),f}},t}(t.exports);try{regeneratorRuntime=r}catch(t){Function("r","regeneratorRuntime = r")(r)}},function(t,e){t.exports=function(t){if(Array.isArray(t))return t},t.exports.default=t.exports,t.exports.__esModule=!0},function(t,e){t.exports=function(t,e){(null==e||e>t.length)&&(e=t.length);for(var n=0,r=new Array(e);n<e;n++)r[n]=t[n];return r},t.exports.default=t.exports,t.exports.__esModule=!0},function(t,e){t.exports=function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")},t.exports.default=t.exports,t.exports.__esModule=!0},function(t,e,n){"use strict";(function(t){var r=n(220),o=n(221),i=n(222);function a(){return s.TYPED_ARRAY_SUPPORT?2147483647:1073741823}function u(t,e){if(a()<e)throw new RangeError("Invalid typed array length");return s.TYPED_ARRAY_SUPPORT?(t=new Uint8Array(e)).__proto__=s.prototype:(null===t&&(t=new s(e)),t.length=e),t}function s(t,e,n){if(!(s.TYPED_ARRAY_SUPPORT||this instanceof s))return new s(t,e,n);if("number"==typeof t){if("string"==typeof e)throw new Error("If encoding is specified then the first argument must be a string");return l(this,t)}return c(this,t,e,n)}function c(t,e,n,r){if("number"==typeof e)throw new TypeError('"value" argument must not be a number');return"undefined"!=typeof ArrayBuffer&&e instanceof ArrayBuffer?function(t,e,n,r){if(e.byteLength,n<0||e.byteLength<n)throw new RangeError("'offset' is out of bounds");if(e.byteLength<n+(r||0))throw new RangeError("'length' is out of bounds");return e=void 0===n&&void 0===r?new Uint8Array(e):void 0===r?new Uint8Array(e,n):new Uint8Array(e,n,r),s.TYPED_ARRAY_SUPPORT?(t=e).__proto__=s.prototype:t=h(t,e),t}(t,e,n,r):"string"==typeof e?function(t,e,n){if("string"==typeof n&&""!==n||(n="utf8"),!s.isEncoding(n))throw new TypeError('"encoding" must be a valid string encoding');var r=0|d(e,n),o=(t=u(t,r)).write(e,n);return o!==r&&(t=t.slice(0,o)),t}(t,e,n):function(t,e){if(s.isBuffer(e)){var n=0|p(e.length);return 0===(t=u(t,n)).length||e.copy(t,0,0,n),t}if(e){if("undefined"!=typeof ArrayBuffer&&e.buffer instanceof ArrayBuffer||"length"in e)return"number"!=typeof e.length||(r=e.length)!=r?u(t,0):h(t,e);if("Buffer"===e.type&&i(e.data))return h(t,e.data)}var r;throw new TypeError("First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.")}(t,e)}function f(t){if("number"!=typeof t)throw new TypeError('"size" argument must be a number');if(t<0)throw new RangeError('"size" argument must not be negative')}function l(t,e){if(f(e),t=u(t,e<0?0:0|p(e)),!s.TYPED_ARRAY_SUPPORT)for(var n=0;n<e;++n)t[n]=0;return t}function h(t,e){var n=e.length<0?0:0|p(e.length);t=u(t,n);for(var r=0;r<n;r+=1)t[r]=255&e[r];return t}function p(t){if(t>=a())throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+a().toString(16)+" bytes");return 0|t}function d(t,e){if(s.isBuffer(t))return t.length;if("undefined"!=typeof ArrayBuffer&&"function"==typeof ArrayBuffer.isView&&(ArrayBuffer.isView(t)||t instanceof ArrayBuffer))return t.byteLength;"string"!=typeof t&&(t=""+t);var n=t.length;if(0===n)return 0;for(var r=!1;;)switch(e){case"ascii":case"latin1":case"binary":return n;case"utf8":case"utf-8":case void 0:return B(t).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 2*n;case"hex":return n>>>1;case"base64":return q(t).length;default:if(r)return B(t).length;e=(""+e).toLowerCase(),r=!0}}function v(t,e,n){var r=!1;if((void 0===e||e<0)&&(e=0),e>this.length)return"";if((void 0===n||n>this.length)&&(n=this.length),n<=0)return"";if((n>>>=0)<=(e>>>=0))return"";for(t||(t="utf8");;)switch(t){case"hex":return j(this,e,n);case"utf8":case"utf-8":return _(this,e,n);case"ascii":return E(this,e,n);case"latin1":case"binary":return A(this,e,n);case"base64":return S(this,e,n);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return R(this,e,n);default:if(r)throw new TypeError("Unknown encoding: "+t);t=(t+"").toLowerCase(),r=!0}}function y(t,e,n){var r=t[e];t[e]=t[n],t[n]=r}function g(t,e,n,r,o){if(0===t.length)return-1;if("string"==typeof n?(r=n,n=0):n>2147483647?n=2147483647:n<-2147483648&&(n=-2147483648),n=+n,isNaN(n)&&(n=o?0:t.length-1),n<0&&(n=t.length+n),n>=t.length){if(o)return-1;n=t.length-1}else if(n<0){if(!o)return-1;n=0}if("string"==typeof e&&(e=s.from(e,r)),s.isBuffer(e))return 0===e.length?-1:m(t,e,n,r,o);if("number"==typeof e)return e&=255,s.TYPED_ARRAY_SUPPORT&&"function"==typeof Uint8Array.prototype.indexOf?o?Uint8Array.prototype.indexOf.call(t,e,n):Uint8Array.prototype.lastIndexOf.call(t,e,n):m(t,[e],n,r,o);throw new TypeError("val must be string, number or Buffer")}function m(t,e,n,r,o){var i,a=1,u=t.length,s=e.length;if(void 0!==r&&("ucs2"===(r=String(r).toLowerCase())||"ucs-2"===r||"utf16le"===r||"utf-16le"===r)){if(t.length<2||e.length<2)return-1;a=2,u/=2,s/=2,n/=2}function c(t,e){return 1===a?t[e]:t.readUInt16BE(e*a)}if(o){var f=-1;for(i=n;i<u;i++)if(c(t,i)===c(e,-1===f?0:i-f)){if(-1===f&&(f=i),i-f+1===s)return f*a}else-1!==f&&(i-=i-f),f=-1}else for(n+s>u&&(n=u-s),i=n;i>=0;i--){for(var l=!0,h=0;h<s;h++)if(c(t,i+h)!==c(e,h)){l=!1;break}if(l)return i}return-1}function b(t,e,n,r){n=Number(n)||0;var o=t.length-n;r?(r=Number(r))>o&&(r=o):r=o;var i=e.length;if(i%2!=0)throw new TypeError("Invalid hex string");r>i/2&&(r=i/2);for(var a=0;a<r;++a){var u=parseInt(e.substr(2*a,2),16);if(isNaN(u))return a;t[n+a]=u}return a}function w(t,e,n,r){return H(B(e,t.length-n),t,n,r)}function x(t,e,n,r){return H(function(t){for(var e=[],n=0;n<t.length;++n)e.push(255&t.charCodeAt(n));return e}(e),t,n,r)}function k(t,e,n,r){return x(t,e,n,r)}function T(t,e,n,r){return H(q(e),t,n,r)}function O(t,e,n,r){return H(function(t,e){for(var n,r,o,i=[],a=0;a<t.length&&!((e-=2)<0);++a)r=(n=t.charCodeAt(a))>>8,o=n%256,i.push(o),i.push(r);return i}(e,t.length-n),t,n,r)}function S(t,e,n){return 0===e&&n===t.length?r.fromByteArray(t):r.fromByteArray(t.slice(e,n))}function _(t,e,n){n=Math.min(t.length,n);for(var r=[],o=e;o<n;){var i,a,u,s,c=t[o],f=null,l=c>239?4:c>223?3:c>191?2:1;if(o+l<=n)switch(l){case 1:c<128&&(f=c);break;case 2:128==(192&(i=t[o+1]))&&(s=(31&c)<<6|63&i)>127&&(f=s);break;case 3:i=t[o+1],a=t[o+2],128==(192&i)&&128==(192&a)&&(s=(15&c)<<12|(63&i)<<6|63&a)>2047&&(s<55296||s>57343)&&(f=s);break;case 4:i=t[o+1],a=t[o+2],u=t[o+3],128==(192&i)&&128==(192&a)&&128==(192&u)&&(s=(15&c)<<18|(63&i)<<12|(63&a)<<6|63&u)>65535&&s<1114112&&(f=s)}null===f?(f=65533,l=1):f>65535&&(f-=65536,r.push(f>>>10&1023|55296),f=56320|1023&f),r.push(f),o+=l}return function(t){var e=t.length;if(e<=4096)return String.fromCharCode.apply(String,t);for(var n="",r=0;r<e;)n+=String.fromCharCode.apply(String,t.slice(r,r+=4096));return n}(r)}function E(t,e,n){var r="";n=Math.min(t.length,n);for(var o=e;o<n;++o)r+=String.fromCharCode(127&t[o]);return r}function A(t,e,n){var r="";n=Math.min(t.length,n);for(var o=e;o<n;++o)r+=String.fromCharCode(t[o]);return r}function j(t,e,n){var r=t.length;(!e||e<0)&&(e=0),(!n||n<0||n>r)&&(n=r);for(var o="",i=e;i<n;++i)o+=D(t[i]);return o}function R(t,e,n){for(var r=t.slice(e,n),o="",i=0;i<r.length;i+=2)o+=String.fromCharCode(r[i]+256*r[i+1]);return o}function P(t,e,n){if(t%1!=0||t<0)throw new RangeError("offset is not uint");if(t+e>n)throw new RangeError("Trying to access beyond buffer length")}function C(t,e,n,r,o,i){if(!s.isBuffer(t))throw new TypeError('"buffer" argument must be a Buffer instance');if(e>o||e<i)throw new RangeError('"value" argument is out of bounds');if(n+r>t.length)throw new RangeError("Index out of range")}function I(t,e,n,r){e<0&&(e=65535+e+1);for(var o=0,i=Math.min(t.length-n,2);o<i;++o)t[n+o]=(e&255<<8*(r?o:1-o))>>>8*(r?o:1-o)}function M(t,e,n,r){e<0&&(e=4294967295+e+1);for(var o=0,i=Math.min(t.length-n,4);o<i;++o)t[n+o]=e>>>8*(r?o:3-o)&255}function U(t,e,n,r,o,i){if(n+r>t.length)throw new RangeError("Index out of range");if(n<0)throw new RangeError("Index out of range")}function L(t,e,n,r,i){return i||U(t,0,n,4),o.write(t,e,n,r,23,4),n+4}function F(t,e,n,r,i){return i||U(t,0,n,8),o.write(t,e,n,r,52,8),n+8}e.Buffer=s,e.SlowBuffer=function(t){return+t!=t&&(t=0),s.alloc(+t)},e.INSPECT_MAX_BYTES=50,s.TYPED_ARRAY_SUPPORT=void 0!==t.TYPED_ARRAY_SUPPORT?t.TYPED_ARRAY_SUPPORT:function(){try{var t=new Uint8Array(1);return t.__proto__={__proto__:Uint8Array.prototype,foo:function(){return 42}},42===t.foo()&&"function"==typeof t.subarray&&0===t.subarray(1,1).byteLength}catch(t){return!1}}(),e.kMaxLength=a(),s.poolSize=8192,s._augment=function(t){return t.__proto__=s.prototype,t},s.from=function(t,e,n){return c(null,t,e,n)},s.TYPED_ARRAY_SUPPORT&&(s.prototype.__proto__=Uint8Array.prototype,s.__proto__=Uint8Array,"undefined"!=typeof Symbol&&Symbol.species&&s[Symbol.species]===s&&Object.defineProperty(s,Symbol.species,{value:null,configurable:!0})),s.alloc=function(t,e,n){return function(t,e,n,r){return f(e),e<=0?u(t,e):void 0!==n?"string"==typeof r?u(t,e).fill(n,r):u(t,e).fill(n):u(t,e)}(null,t,e,n)},s.allocUnsafe=function(t){return l(null,t)},s.allocUnsafeSlow=function(t){return l(null,t)},s.isBuffer=function(t){return!(null==t||!t._isBuffer)},s.compare=function(t,e){if(!s.isBuffer(t)||!s.isBuffer(e))throw new TypeError("Arguments must be Buffers");if(t===e)return 0;for(var n=t.length,r=e.length,o=0,i=Math.min(n,r);o<i;++o)if(t[o]!==e[o]){n=t[o],r=e[o];break}return n<r?-1:r<n?1:0},s.isEncoding=function(t){switch(String(t).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},s.concat=function(t,e){if(!i(t))throw new TypeError('"list" argument must be an Array of Buffers');if(0===t.length)return s.alloc(0);var n;if(void 0===e)for(e=0,n=0;n<t.length;++n)e+=t[n].length;var r=s.allocUnsafe(e),o=0;for(n=0;n<t.length;++n){var a=t[n];if(!s.isBuffer(a))throw new TypeError('"list" argument must be an Array of Buffers');a.copy(r,o),o+=a.length}return r},s.byteLength=d,s.prototype._isBuffer=!0,s.prototype.swap16=function(){var t=this.length;if(t%2!=0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(var e=0;e<t;e+=2)y(this,e,e+1);return this},s.prototype.swap32=function(){var t=this.length;if(t%4!=0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(var e=0;e<t;e+=4)y(this,e,e+3),y(this,e+1,e+2);return this},s.prototype.swap64=function(){var t=this.length;if(t%8!=0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(var e=0;e<t;e+=8)y(this,e,e+7),y(this,e+1,e+6),y(this,e+2,e+5),y(this,e+3,e+4);return this},s.prototype.toString=function(){var t=0|this.length;return 0===t?"":0===arguments.length?_(this,0,t):v.apply(this,arguments)},s.prototype.equals=function(t){if(!s.isBuffer(t))throw new TypeError("Argument must be a Buffer");return this===t||0===s.compare(this,t)},s.prototype.inspect=function(){var t="",n=e.INSPECT_MAX_BYTES;return this.length>0&&(t=this.toString("hex",0,n).match(/.{2}/g).join(" "),this.length>n&&(t+=" ... ")),"<Buffer "+t+">"},s.prototype.compare=function(t,e,n,r,o){if(!s.isBuffer(t))throw new TypeError("Argument must be a Buffer");if(void 0===e&&(e=0),void 0===n&&(n=t?t.length:0),void 0===r&&(r=0),void 0===o&&(o=this.length),e<0||n>t.length||r<0||o>this.length)throw new RangeError("out of range index");if(r>=o&&e>=n)return 0;if(r>=o)return-1;if(e>=n)return 1;if(this===t)return 0;for(var i=(o>>>=0)-(r>>>=0),a=(n>>>=0)-(e>>>=0),u=Math.min(i,a),c=this.slice(r,o),f=t.slice(e,n),l=0;l<u;++l)if(c[l]!==f[l]){i=c[l],a=f[l];break}return i<a?-1:a<i?1:0},s.prototype.includes=function(t,e,n){return-1!==this.indexOf(t,e,n)},s.prototype.indexOf=function(t,e,n){return g(this,t,e,n,!0)},s.prototype.lastIndexOf=function(t,e,n){return g(this,t,e,n,!1)},s.prototype.write=function(t,e,n,r){if(void 0===e)r="utf8",n=this.length,e=0;else if(void 0===n&&"string"==typeof e)r=e,n=this.length,e=0;else{if(!isFinite(e))throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");e|=0,isFinite(n)?(n|=0,void 0===r&&(r="utf8")):(r=n,n=void 0)}var o=this.length-e;if((void 0===n||n>o)&&(n=o),t.length>0&&(n<0||e<0)||e>this.length)throw new RangeError("Attempt to write outside buffer bounds");r||(r="utf8");for(var i=!1;;)switch(r){case"hex":return b(this,t,e,n);case"utf8":case"utf-8":return w(this,t,e,n);case"ascii":return x(this,t,e,n);case"latin1":case"binary":return k(this,t,e,n);case"base64":return T(this,t,e,n);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return O(this,t,e,n);default:if(i)throw new TypeError("Unknown encoding: "+r);r=(""+r).toLowerCase(),i=!0}},s.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}},s.prototype.slice=function(t,e){var n,r=this.length;if((t=~~t)<0?(t+=r)<0&&(t=0):t>r&&(t=r),(e=void 0===e?r:~~e)<0?(e+=r)<0&&(e=0):e>r&&(e=r),e<t&&(e=t),s.TYPED_ARRAY_SUPPORT)(n=this.subarray(t,e)).__proto__=s.prototype;else{var o=e-t;n=new s(o,void 0);for(var i=0;i<o;++i)n[i]=this[i+t]}return n},s.prototype.readUIntLE=function(t,e,n){t|=0,e|=0,n||P(t,e,this.length);for(var r=this[t],o=1,i=0;++i<e&&(o*=256);)r+=this[t+i]*o;return r},s.prototype.readUIntBE=function(t,e,n){t|=0,e|=0,n||P(t,e,this.length);for(var r=this[t+--e],o=1;e>0&&(o*=256);)r+=this[t+--e]*o;return r},s.prototype.readUInt8=function(t,e){return e||P(t,1,this.length),this[t]},s.prototype.readUInt16LE=function(t,e){return e||P(t,2,this.length),this[t]|this[t+1]<<8},s.prototype.readUInt16BE=function(t,e){return e||P(t,2,this.length),this[t]<<8|this[t+1]},s.prototype.readUInt32LE=function(t,e){return e||P(t,4,this.length),(this[t]|this[t+1]<<8|this[t+2]<<16)+16777216*this[t+3]},s.prototype.readUInt32BE=function(t,e){return e||P(t,4,this.length),16777216*this[t]+(this[t+1]<<16|this[t+2]<<8|this[t+3])},s.prototype.readIntLE=function(t,e,n){t|=0,e|=0,n||P(t,e,this.length);for(var r=this[t],o=1,i=0;++i<e&&(o*=256);)r+=this[t+i]*o;return r>=(o*=128)&&(r-=Math.pow(2,8*e)),r},s.prototype.readIntBE=function(t,e,n){t|=0,e|=0,n||P(t,e,this.length);for(var r=e,o=1,i=this[t+--r];r>0&&(o*=256);)i+=this[t+--r]*o;return i>=(o*=128)&&(i-=Math.pow(2,8*e)),i},s.prototype.readInt8=function(t,e){return e||P(t,1,this.length),128&this[t]?-1*(255-this[t]+1):this[t]},s.prototype.readInt16LE=function(t,e){e||P(t,2,this.length);var n=this[t]|this[t+1]<<8;return 32768&n?4294901760|n:n},s.prototype.readInt16BE=function(t,e){e||P(t,2,this.length);var n=this[t+1]|this[t]<<8;return 32768&n?4294901760|n:n},s.prototype.readInt32LE=function(t,e){return e||P(t,4,this.length),this[t]|this[t+1]<<8|this[t+2]<<16|this[t+3]<<24},s.prototype.readInt32BE=function(t,e){return e||P(t,4,this.length),this[t]<<24|this[t+1]<<16|this[t+2]<<8|this[t+3]},s.prototype.readFloatLE=function(t,e){return e||P(t,4,this.length),o.read(this,t,!0,23,4)},s.prototype.readFloatBE=function(t,e){return e||P(t,4,this.length),o.read(this,t,!1,23,4)},s.prototype.readDoubleLE=function(t,e){return e||P(t,8,this.length),o.read(this,t,!0,52,8)},s.prototype.readDoubleBE=function(t,e){return e||P(t,8,this.length),o.read(this,t,!1,52,8)},s.prototype.writeUIntLE=function(t,e,n,r){t=+t,e|=0,n|=0,r||C(this,t,e,n,Math.pow(2,8*n)-1,0);var o=1,i=0;for(this[e]=255&t;++i<n&&(o*=256);)this[e+i]=t/o&255;return e+n},s.prototype.writeUIntBE=function(t,e,n,r){t=+t,e|=0,n|=0,r||C(this,t,e,n,Math.pow(2,8*n)-1,0);var o=n-1,i=1;for(this[e+o]=255&t;--o>=0&&(i*=256);)this[e+o]=t/i&255;return e+n},s.prototype.writeUInt8=function(t,e,n){return t=+t,e|=0,n||C(this,t,e,1,255,0),s.TYPED_ARRAY_SUPPORT||(t=Math.floor(t)),this[e]=255&t,e+1},s.prototype.writeUInt16LE=function(t,e,n){return t=+t,e|=0,n||C(this,t,e,2,65535,0),s.TYPED_ARRAY_SUPPORT?(this[e]=255&t,this[e+1]=t>>>8):I(this,t,e,!0),e+2},s.prototype.writeUInt16BE=function(t,e,n){return t=+t,e|=0,n||C(this,t,e,2,65535,0),s.TYPED_ARRAY_SUPPORT?(this[e]=t>>>8,this[e+1]=255&t):I(this,t,e,!1),e+2},s.prototype.writeUInt32LE=function(t,e,n){return t=+t,e|=0,n||C(this,t,e,4,4294967295,0),s.TYPED_ARRAY_SUPPORT?(this[e+3]=t>>>24,this[e+2]=t>>>16,this[e+1]=t>>>8,this[e]=255&t):M(this,t,e,!0),e+4},s.prototype.writeUInt32BE=function(t,e,n){return t=+t,e|=0,n||C(this,t,e,4,4294967295,0),s.TYPED_ARRAY_SUPPORT?(this[e]=t>>>24,this[e+1]=t>>>16,this[e+2]=t>>>8,this[e+3]=255&t):M(this,t,e,!1),e+4},s.prototype.writeIntLE=function(t,e,n,r){if(t=+t,e|=0,!r){var o=Math.pow(2,8*n-1);C(this,t,e,n,o-1,-o)}var i=0,a=1,u=0;for(this[e]=255&t;++i<n&&(a*=256);)t<0&&0===u&&0!==this[e+i-1]&&(u=1),this[e+i]=(t/a>>0)-u&255;return e+n},s.prototype.writeIntBE=function(t,e,n,r){if(t=+t,e|=0,!r){var o=Math.pow(2,8*n-1);C(this,t,e,n,o-1,-o)}var i=n-1,a=1,u=0;for(this[e+i]=255&t;--i>=0&&(a*=256);)t<0&&0===u&&0!==this[e+i+1]&&(u=1),this[e+i]=(t/a>>0)-u&255;return e+n},s.prototype.writeInt8=function(t,e,n){return t=+t,e|=0,n||C(this,t,e,1,127,-128),s.TYPED_ARRAY_SUPPORT||(t=Math.floor(t)),t<0&&(t=255+t+1),this[e]=255&t,e+1},s.prototype.writeInt16LE=function(t,e,n){return t=+t,e|=0,n||C(this,t,e,2,32767,-32768),s.TYPED_ARRAY_SUPPORT?(this[e]=255&t,this[e+1]=t>>>8):I(this,t,e,!0),e+2},s.prototype.writeInt16BE=function(t,e,n){return t=+t,e|=0,n||C(this,t,e,2,32767,-32768),s.TYPED_ARRAY_SUPPORT?(this[e]=t>>>8,this[e+1]=255&t):I(this,t,e,!1),e+2},s.prototype.writeInt32LE=function(t,e,n){return t=+t,e|=0,n||C(this,t,e,4,2147483647,-2147483648),s.TYPED_ARRAY_SUPPORT?(this[e]=255&t,this[e+1]=t>>>8,this[e+2]=t>>>16,this[e+3]=t>>>24):M(this,t,e,!0),e+4},s.prototype.writeInt32BE=function(t,e,n){return t=+t,e|=0,n||C(this,t,e,4,2147483647,-2147483648),t<0&&(t=4294967295+t+1),s.TYPED_ARRAY_SUPPORT?(this[e]=t>>>24,this[e+1]=t>>>16,this[e+2]=t>>>8,this[e+3]=255&t):M(this,t,e,!1),e+4},s.prototype.writeFloatLE=function(t,e,n){return L(this,t,e,!0,n)},s.prototype.writeFloatBE=function(t,e,n){return L(this,t,e,!1,n)},s.prototype.writeDoubleLE=function(t,e,n){return F(this,t,e,!0,n)},s.prototype.writeDoubleBE=function(t,e,n){return F(this,t,e,!1,n)},s.prototype.copy=function(t,e,n,r){if(n||(n=0),r||0===r||(r=this.length),e>=t.length&&(e=t.length),e||(e=0),r>0&&r<n&&(r=n),r===n)return 0;if(0===t.length||0===this.length)return 0;if(e<0)throw new RangeError("targetStart out of bounds");if(n<0||n>=this.length)throw new RangeError("sourceStart out of bounds");if(r<0)throw new RangeError("sourceEnd out of bounds");r>this.length&&(r=this.length),t.length-e<r-n&&(r=t.length-e+n);var o,i=r-n;if(this===t&&n<e&&e<r)for(o=i-1;o>=0;--o)t[o+e]=this[o+n];else if(i<1e3||!s.TYPED_ARRAY_SUPPORT)for(o=0;o<i;++o)t[o+e]=this[o+n];else Uint8Array.prototype.set.call(t,this.subarray(n,n+i),e);return i},s.prototype.fill=function(t,e,n,r){if("string"==typeof t){if("string"==typeof e?(r=e,e=0,n=this.length):"string"==typeof n&&(r=n,n=this.length),1===t.length){var o=t.charCodeAt(0);o<256&&(t=o)}if(void 0!==r&&"string"!=typeof r)throw new TypeError("encoding must be a string");if("string"==typeof r&&!s.isEncoding(r))throw new TypeError("Unknown encoding: "+r)}else"number"==typeof t&&(t&=255);if(e<0||this.length<e||this.length<n)throw new RangeError("Out of range index");if(n<=e)return this;var i;if(e>>>=0,n=void 0===n?this.length:n>>>0,t||(t=0),"number"==typeof t)for(i=e;i<n;++i)this[i]=t;else{var a=s.isBuffer(t)?t:B(new s(t,r).toString()),u=a.length;for(i=0;i<n-e;++i)this[i+e]=a[i%u]}return this};var N=/[^+\/0-9A-Za-z-_]/g;function D(t){return t<16?"0"+t.toString(16):t.toString(16)}function B(t,e){var n;e=e||1/0;for(var r=t.length,o=null,i=[],a=0;a<r;++a){if((n=t.charCodeAt(a))>55295&&n<57344){if(!o){if(n>56319){(e-=3)>-1&&i.push(239,191,189);continue}if(a+1===r){(e-=3)>-1&&i.push(239,191,189);continue}o=n;continue}if(n<56320){(e-=3)>-1&&i.push(239,191,189),o=n;continue}n=65536+(o-55296<<10|n-56320)}else o&&(e-=3)>-1&&i.push(239,191,189);if(o=null,n<128){if((e-=1)<0)break;i.push(n)}else if(n<2048){if((e-=2)<0)break;i.push(n>>6|192,63&n|128)}else if(n<65536){if((e-=3)<0)break;i.push(n>>12|224,n>>6&63|128,63&n|128)}else{if(!(n<1114112))throw new Error("Invalid code point");if((e-=4)<0)break;i.push(n>>18|240,n>>12&63|128,n>>6&63|128,63&n|128)}}return i}function q(t){return r.toByteArray(function(t){if((t=function(t){return t.trim?t.trim():t.replace(/^\s+|\s+$/g,"")}(t).replace(N,"")).length<2)return"";for(;t.length%4!=0;)t+="=";return t}(t))}function H(t,e,n,r){for(var o=0;o<r&&!(o+n>=e.length||o>=t.length);++o)e[o+n]=t[o];return o}}).call(this,n(67))},function(t,e){t.exports=function(t){if("undefined"!=typeof Symbol&&null!=t[Symbol.iterator]||null!=t["@@iterator"])return Array.from(t)},t.exports.default=t.exports,t.exports.__esModule=!0},function(t,e,n){n(229);var r=n(17).Object,o=t.exports=function(t,e,n){return r.defineProperty(t,e,n)};r.defineProperty.sham&&(o.sham=!0)},function(t,e,n){var r=n(19),o=n(16),i=n(91);t.exports=!r&&!o((function(){return 7!=Object.defineProperty(i("div"),"a",{get:function(){return 7}}).a}))},function(t,e,n){var r=n(16),o=/#|\.prototype\./,i=function(t,e){var n=u[a(t)];return n==c||n!=s&&("function"==typeof e?r(e):!!e)},a=i.normalize=function(t){return String(t).replace(o,".").toLowerCase()},u=i.data={},s=i.NATIVE="N",c=i.POLYFILL="P";t.exports=i},function(t,e,n){var r=n(232),o=Array.prototype;t.exports=function(t){var e=t.indexOf;return t===o||t instanceof Array&&e===o.indexOf?r:e}},function(t,e,n){var r=n(28),o=n(43),i=n(142),a=function(t){return function(e,n,a){var u,s=r(e),c=o(s.length),f=i(a,c);if(t&&n!=n){for(;c>f;)if((u=s[f++])!=u)return!0}else for(;c>f;f++)if((t||f in s)&&s[f]===n)return t||f||0;return!t&&-1}};t.exports={includes:a(!0),indexOf:a(!1)}},function(t,e,n){var r=n(92),o=Math.max,i=Math.min;t.exports=function(t,e){var n=r(t);return n<0?o(n+e,0):i(n,e)}},function(t,e,n){"use strict";var r=n(16);t.exports=function(t,e){var n=[][t];return!!n&&r((function(){n.call(null,e||function(){throw 1},1)}))}},function(t,e,n){n(145),n(151),n(238),n(160),n(161),n(246),n(46),n(58);var r=n(17);t.exports=r.Promise},function(t,e,n){"use strict";var r=n(9),o=n(93),i=n(97),a=n(72),u=n(29),s=n(35),c=n(54),f=function(t,e){var n=this;if(!(n instanceof f))return new f(t,e);i&&(n=i(new Error(void 0),o(n))),void 0!==e&&u(n,"message",String(e));var r=[];return c(t,r.push,{that:r}),u(n,"errors",r),n};f.prototype=a(Error.prototype,{constructor:s(5,f),message:s(5,""),name:s(5,"AggregateError")}),r({global:!0},{AggregateError:f})},function(t,e,n){var r=n(23),o=n(28),i=n(141).indexOf,a=n(73);t.exports=function(t,e){var n,u=o(t),s=0,c=[];for(n in u)!r(a,n)&&r(u,n)&&c.push(n);for(;e.length>s;)r(u,n=e[s++])&&(~i(c,n)||c.push(n));return c}},function(t,e,n){var r=n(30);t.exports=r("document","documentElement")},function(t,e,n){var r=n(13),o=n(44),i=r("iterator"),a=Array.prototype;t.exports=function(t){return void 0!==t&&(o.Array===t||a[i]===t)}},function(t,e,n){var r=n(100);t.exports=r&&!Symbol.sham&&"symbol"==typeof Symbol.iterator},function(t,e,n){var r=n(20);t.exports=function(t){var e=t.return;if(void 0!==e)return r(e.call(t)).value}},function(t,e){},function(t,e,n){var r=n(14);t.exports=r.Promise},function(t,e,n){var r=n(38);t.exports=function(t,e,n){for(var o in e)n&&n.unsafe&&t[o]?t[o]=e[o]:r(t,o,e[o],n);return t}},function(t,e,n){var r=n(95),o=Function.toString;"function"!=typeof r.inspectSource&&(r.inspectSource=function(t){return o.call(t)}),t.exports=r.inspectSource},function(t,e,n){var r=n(13)("iterator"),o=!1;try{var i=0,a={next:function(){return{done:!!i++}},return:function(){o=!0}};a[r]=function(){return this},Array.from(a,(function(){throw 2}))}catch(t){}t.exports=function(t,e){if(!e&&!o)return!1;var n=!1;try{var i={};i[r]=function(){return{next:function(){return{done:n=!0}}}},t(i)}catch(t){}return n}},function(t,e,n){var r=n(20),o=n(41),i=n(13)("species");t.exports=function(t,e){var n,a=r(t).constructor;return void 0===a||null==(n=r(a)[i])?e:o(n)}},function(t,e,n){var r,o,i,a=n(14),u=n(16),s=n(40),c=n(147),f=n(91),l=n(158),h=n(104),p=a.location,d=a.setImmediate,v=a.clearImmediate,y=a.process,g=a.MessageChannel,m=a.Dispatch,b=0,w={},x=function(t){if(w.hasOwnProperty(t)){var e=w[t];delete w[t],e()}},k=function(t){return function(){x(t)}},T=function(t){x(t.data)},O=function(t){a.postMessage(t+"",p.protocol+"//"+p.host)};d&&v||(d=function(t){for(var e=[],n=1;arguments.length>n;)e.push(arguments[n++]);return w[++b]=function(){("function"==typeof t?t:Function(t)).apply(void 0,e)},r(b),b},v=function(t){delete w[t]},h?r=function(t){y.nextTick(k(t))}:m&&m.now?r=function(t){m.now(k(t))}:g&&!l?(i=(o=new g).port2,o.port1.onmessage=T,r=s(i.postMessage,i,1)):a.addEventListener&&"function"==typeof postMessage&&!a.importScripts&&p&&"file:"!==p.protocol&&!u(O)?(r=O,a.addEventListener("message",T,!1)):r="onreadystatechange"in f("script")?function(t){c.appendChild(f("script")).onreadystatechange=function(){c.removeChild(this),x(t)}}:function(t){setTimeout(k(t),0)}),t.exports={set:d,clear:v}},function(t,e,n){var r=n(101);t.exports=/(?:iphone|ipod|ipad).*applewebkit/i.test(r)},function(t,e,n){var r=n(20),o=n(22),i=n(57);t.exports=function(t,e){if(r(t),o(e)&&e.constructor===t)return e;var n=i.f(t);return(0,n.resolve)(e),n.promise}},function(t,e,n){"use strict";var r=n(9),o=n(41),i=n(57),a=n(75),u=n(54);r({target:"Promise",stat:!0},{allSettled:function(t){var e=this,n=i.f(e),r=n.resolve,s=n.reject,c=a((function(){var n=o(e.resolve),i=[],a=0,s=1;u(t,(function(t){var o=a++,u=!1;i.push(void 0),s++,n.call(e,t).then((function(t){u||(u=!0,i[o]={status:"fulfilled",value:t},--s||r(i))}),(function(t){u||(u=!0,i[o]={status:"rejected",reason:t},--s||r(i))}))})),--s||r(i)}));return c.error&&s(c.value),n.promise}})},function(t,e,n){"use strict";var r=n(9),o=n(41),i=n(30),a=n(57),u=n(75),s=n(54);r({target:"Promise",stat:!0},{any:function(t){var e=this,n=a.f(e),r=n.resolve,c=n.reject,f=u((function(){var n=o(e.resolve),a=[],u=0,f=1,l=!1;s(t,(function(t){var o=u++,s=!1;a.push(void 0),f++,n.call(e,t).then((function(t){s||l||(l=!0,r(t))}),(function(t){s||l||(s=!0,a[o]=t,--f||c(new(i("AggregateError"))(a,"No one promise resolved")))}))})),--f||c(new(i("AggregateError"))(a,"No one promise resolved"))}));return f.error&&c(f.value),n.promise}})},function(t,e,n){var r=n(92),o=n(90),i=function(t){return function(e,n){var i,a,u=String(o(e)),s=r(n),c=u.length;return s<0||s>=c?t?"":void 0:(i=u.charCodeAt(s))<55296||i>56319||s+1===c||(a=u.charCodeAt(s+1))<56320||a>57343?t?u.charAt(s):i:t?u.slice(s,s+2):a-56320+(i-55296<<10)+65536}};t.exports={codeAt:i(!1),charAt:i(!0)}},function(t,e,n){"use strict";var r=n(9),o=n(164),i=n(93),a=n(97),u=n(39),s=n(29),c=n(38),f=n(13),l=n(37),h=n(44),p=n(165),d=p.IteratorPrototype,v=p.BUGGY_SAFARI_ITERATORS,y=f("iterator"),g=function(){return this};t.exports=function(t,e,n,f,p,m,b){o(n,e,f);var w,x,k,T=function(t){if(t===p&&A)return A;if(!v&&t in _)return _[t];switch(t){case"keys":case"values":case"entries":return function(){return new n(this,t)}}return function(){return new n(this)}},O=e+" Iterator",S=!1,_=t.prototype,E=_[y]||_["@@iterator"]||p&&_[p],A=!v&&E||T(p),j="Array"==e&&_.entries||E;if(j&&(w=i(j.call(new t)),d!==Object.prototype&&w.next&&(l||i(w)===d||(a?a(w,d):"function"!=typeof w[y]&&s(w,y,g)),u(w,O,!0,!0),l&&(h[O]=g))),"values"==p&&E&&"values"!==E.name&&(S=!0,A=function(){return E.call(this)}),l&&!b||_[y]===A||s(_,y,A),h[e]=A,p)if(x={values:T("values"),keys:m?A:T("keys"),entries:T("entries")},b)for(k in x)(v||S||!(k in _))&&c(_,k,x[k]);else r({target:e,proto:!0,forced:v||S},x);return x}},function(t,e,n){"use strict";var r=n(165).IteratorPrototype,o=n(72),i=n(35),a=n(39),u=n(44),s=function(){return this};t.exports=function(t,e,n){var c=e+" Iterator";return t.prototype=o(r,{next:i(1,n)}),a(t,c,!1,!0),u[c]=s,t}},function(t,e,n){"use strict";var r,o,i,a=n(16),u=n(93),s=n(29),c=n(23),f=n(13),l=n(37),h=f("iterator"),p=!1;[].keys&&("next"in(i=[].keys())?(o=u(u(i)))!==Object.prototype&&(r=o):p=!0);var d=null==r||a((function(){var t={};return r[h].call(t)!==t}));d&&(r={}),l&&!d||c(r,h)||s(r,h,(function(){return this})),t.exports={IteratorPrototype:r,BUGGY_SAFARI_ITERATORS:p}},function(t,e){t.exports=function(){}},function(t,e,n){var r=n(16),o=n(13),i=n(37),a=o("iterator");t.exports=!r((function(){var t=new URL("b?a=1&b=2&c=3","http://a"),e=t.searchParams,n="";return t.pathname="c%20d",e.forEach((function(t,r){e.delete("b"),n+=r+t})),i&&!t.toJSON||!e.sort||"http://a/c%20d?a=1&c=3"!==t.href||"3"!==e.get("c")||"a=1"!==String(new URLSearchParams("?a=1"))||!e[a]||"a"!==new URL("https://a@b").username||"b"!==new URLSearchParams(new URLSearchParams("a=b")).get("a")||"xn--e1aybc"!==new URL("http://тест").host||"#%D0%B1"!==new URL("http://a#б").hash||"a1c3"!==n||"x"!==new URL("http://x",void 0).host}))},function(t,e,n){"use strict";var r=n(40),o=n(32),i=n(253),a=n(148),u=n(43),s=n(59),c=n(55);t.exports=function(t){var e,n,f,l,h,p,d=o(t),v="function"==typeof this?this:Array,y=arguments.length,g=y>1?arguments[1]:void 0,m=void 0!==g,b=c(d),w=0;if(m&&(g=r(g,y>2?arguments[2]:void 0,2)),null==b||v==Array&&a(b))for(n=new v(e=u(d.length));e>w;w++)p=m?g(d[w],w):d[w],s(n,w,p);else for(h=(l=b.call(d)).next,n=new v;!(f=h.call(l)).done;w++)p=m?i(l,g,[f.value,w],!0):f.value,s(n,w,p);return n.length=w,n}},function(t,e,n){"use strict";n(105);var r=n(9),o=n(30),i=n(167),a=n(38),u=n(153),s=n(39),c=n(164),f=n(45),l=n(103),h=n(23),p=n(40),d=n(56),v=n(20),y=n(22),g=n(72),m=n(35),b=n(170),w=n(55),x=n(13),k=o("fetch"),T=o("Headers"),O=x("iterator"),S=f.set,_=f.getterFor("URLSearchParams"),E=f.getterFor("URLSearchParamsIterator"),A=/\+/g,j=Array(4),R=function(t){return j[t-1]||(j[t-1]=RegExp("((?:%[\\da-f]{2}){"+t+"})","gi"))},P=function(t){try{return decodeURIComponent(t)}catch(e){return t}},C=function(t){var e=t.replace(A," "),n=4;try{return decodeURIComponent(e)}catch(t){for(;n;)e=e.replace(R(n--),P);return e}},I=/[!'()~]|%20/g,M={"!":"%21","'":"%27","(":"%28",")":"%29","~":"%7E","%20":"+"},U=function(t){return M[t]},L=function(t){return encodeURIComponent(t).replace(I,U)},F=function(t,e){if(e)for(var n,r,o=e.split("&"),i=0;i<o.length;)(n=o[i++]).length&&(r=n.split("="),t.push({key:C(r.shift()),value:C(r.join("="))}))},N=function(t){this.entries.length=0,F(this.entries,t)},D=function(t,e){if(t<e)throw TypeError("Not enough arguments")},B=c((function(t,e){S(this,{type:"URLSearchParamsIterator",iterator:b(_(t).entries),kind:e})}),"Iterator",(function(){var t=E(this),e=t.kind,n=t.iterator.next(),r=n.value;return n.done||(n.value="keys"===e?r.key:"values"===e?r.value:[r.key,r.value]),n})),q=function(){l(this,q,"URLSearchParams");var t,e,n,r,o,i,a,u,s,c=arguments.length>0?arguments[0]:void 0,f=[];if(S(this,{type:"URLSearchParams",entries:f,updateURL:function(){},updateSearchParams:N}),void 0!==c)if(y(c))if("function"==typeof(t=w(c)))for(n=(e=t.call(c)).next;!(r=n.call(e)).done;){if((a=(i=(o=b(v(r.value))).next).call(o)).done||(u=i.call(o)).done||!i.call(o).done)throw TypeError("Expected sequence with length 2");f.push({key:a.value+"",value:u.value+""})}else for(s in c)h(c,s)&&f.push({key:s,value:c[s]+""});else F(f,"string"==typeof c?"?"===c.charAt(0)?c.slice(1):c:c+"")},H=q.prototype;u(H,{append:function(t,e){D(arguments.length,2);var n=_(this);n.entries.push({key:t+"",value:e+""}),n.updateURL()},delete:function(t){D(arguments.length,1);for(var e=_(this),n=e.entries,r=t+"",o=0;o<n.length;)n[o].key===r?n.splice(o,1):o++;e.updateURL()},get:function(t){D(arguments.length,1);for(var e=_(this).entries,n=t+"",r=0;r<e.length;r++)if(e[r].key===n)return e[r].value;return null},getAll:function(t){D(arguments.length,1);for(var e=_(this).entries,n=t+"",r=[],o=0;o<e.length;o++)e[o].key===n&&r.push(e[o].value);return r},has:function(t){D(arguments.length,1);for(var e=_(this).entries,n=t+"",r=0;r<e.length;)if(e[r++].key===n)return!0;return!1},set:function(t,e){D(arguments.length,1);for(var n,r=_(this),o=r.entries,i=!1,a=t+"",u=e+"",s=0;s<o.length;s++)(n=o[s]).key===a&&(i?o.splice(s--,1):(i=!0,n.value=u));i||o.push({key:a,value:u}),r.updateURL()},sort:function(){var t,e,n,r=_(this),o=r.entries,i=o.slice();for(o.length=0,n=0;n<i.length;n++){for(t=i[n],e=0;e<n;e++)if(o[e].key>t.key){o.splice(e,0,t);break}e===n&&o.push(t)}r.updateURL()},forEach:function(t){for(var e,n=_(this).entries,r=p(t,arguments.length>1?arguments[1]:void 0,3),o=0;o<n.length;)r((e=n[o++]).value,e.key,this)},keys:function(){return new B(this,"keys")},values:function(){return new B(this,"values")},entries:function(){return new B(this,"entries")}},{enumerable:!0}),a(H,O,H.entries),a(H,"toString",(function(){for(var t,e=_(this).entries,n=[],r=0;r<e.length;)t=e[r++],n.push(L(t.key)+"="+L(t.value));return n.join("&")}),{enumerable:!0}),s(q,"URLSearchParams"),r({global:!0,forced:!i},{URLSearchParams:q}),i||"function"!=typeof k||"function"!=typeof T||r({global:!0,enumerable:!0,forced:!0},{fetch:function(t){var e,n,r,o=[t];return arguments.length>1&&(y(e=arguments[1])&&(n=e.body,"URLSearchParams"===d(n)&&((r=e.headers?new T(e.headers):new T).has("content-type")||r.set("content-type","application/x-www-form-urlencoded;charset=UTF-8"),e=g(e,{body:m(0,String(n)),headers:m(0,r)}))),o.push(e)),k.apply(this,o)}}),t.exports={URLSearchParams:q,getState:_}},function(t,e,n){var r=n(20),o=n(55);t.exports=function(t){var e=o(t);if("function"!=typeof e)throw TypeError(String(t)+" is not iterable");return r(e.call(t))}},function(t,e,n){"use strict";var r=n(172),o=n(115);r({target:"RegExp",proto:!0,forced:/./.exec!==o},{exec:o})},function(t,e,n){var r=n(26),o=n(173).f,i=n(60),a=n(108),u=n(109),s=n(261),c=n(268);t.exports=function(t,e){var n,f,l,h,p,d=t.target,v=t.global,y=t.stat;if(n=v?r:y?r[d]||u(d,{}):(r[d]||{}).prototype)for(f in e){if(h=e[f],l=t.noTargetGet?(p=o(n,f))&&p.value:n[f],!c(v?f:d+(y?".":"#")+f,t.forced)&&void 0!==l){if(typeof h==typeof l)continue;s(h,l)}(t.sham||l&&l.sham)&&i(h,"sham",!0),a(n,f,h,t)}}},function(t,e,n){var r=n(47),o=n(258),i=n(174),a=n(76),u=n(176),s=n(48),c=n(178),f=Object.getOwnPropertyDescriptor;e.f=r?f:function(t,e){if(t=a(t),e=u(e,!0),c)try{return f(t,e)}catch(t){}if(s(t,e))return i(!o.f.call(t,e),t[e])}},function(t,e){t.exports=function(t,e){return{enumerable:!(1&t),configurable:!(2&t),writable:!(4&t),value:e}}},function(t,e,n){var r=n(27),o=n(107),i="".split;t.exports=r((function(){return!Object("z").propertyIsEnumerable(0)}))?function(t){return"String"==o(t)?i.call(t,""):Object(t)}:Object},function(t,e,n){var r=n(78);t.exports=function(t,e){if(!r(t))return t;var n,o;if(e&&"function"==typeof(n=t.toString)&&!r(o=n.call(t)))return o;if("function"==typeof(n=t.valueOf)&&!r(o=n.call(t)))return o;if(!e&&"function"==typeof(n=t.toString)&&!r(o=n.call(t)))return o;throw TypeError("Can't convert object to primitive value")}},function(t,e,n){var r=n(77);t.exports=function(t){return Object(r(t))}},function(t,e,n){var r=n(47),o=n(27),i=n(179);t.exports=!r&&!o((function(){return 7!=Object.defineProperty(i("div"),"a",{get:function(){return 7}}).a}))},function(t,e,n){var r=n(26),o=n(78),i=r.document,a=o(i)&&o(i.createElement);t.exports=function(t){return a?i.createElement(t):{}}},function(t,e,n){var r=n(110),o=Function.toString;"function"!=typeof r.inspectSource&&(r.inspectSource=function(t){return o.call(t)}),t.exports=r.inspectSource},function(t,e,n){var r,o,i,a=n(259),u=n(26),s=n(78),c=n(60),f=n(48),l=n(110),h=n(182),p=n(112),d=u.WeakMap;if(a||l.state){var v=l.state||(l.state=new d),y=v.get,g=v.has,m=v.set;r=function(t,e){if(g.call(v,t))throw new TypeError("Object already initialized");return e.facade=t,m.call(v,t,e),e},o=function(t){return y.call(v,t)||{}},i=function(t){return g.call(v,t)}}else{var b=h("state");p[b]=!0,r=function(t,e){if(f(t,b))throw new TypeError("Object already initialized");return e.facade=t,c(t,b,e),e},o=function(t){return f(t,b)?t[b]:{}},i=function(t){return f(t,b)}}t.exports={set:r,get:o,has:i,enforce:function(t){return i(t)?o(t):r(t,{})},getterFor:function(t){return function(e){var n;if(!s(e)||(n=o(e)).type!==t)throw TypeError("Incompatible receiver, "+t+" required");return n}}}},function(t,e,n){var r=n(111),o=n(183),i=r("keys");t.exports=function(t){return i[t]||(i[t]=o(t))}},function(t,e){var n=0,r=Math.random();t.exports=function(t){return"Symbol("+String(void 0===t?"":t)+")_"+(++n+r).toString(36)}},function(t,e,n){var r=n(48),o=n(76),i=n(265).indexOf,a=n(112);t.exports=function(t,e){var n,u=o(t),s=0,c=[];for(n in u)!r(a,n)&&r(u,n)&&c.push(n);for(;e.length>s;)r(u,n=e[s++])&&(~i(c,n)||c.push(n));return c}},function(t,e,n){var r=n(80),o=Math.min;t.exports=function(t){return t>0?o(r(t),9007199254740991):0}},function(t,e,n){var r=n(277),o=n(27);t.exports=!!Object.getOwnPropertySymbols&&!o((function(){var t=Symbol();return!String(t)||!(Object(t)instanceof Symbol)||!Symbol.sham&&r&&r<41}))},function(t,e,n){t.exports=n(291)},function(t,e,n){n(295);var r=n(17);t.exports=r.Object.keys},function(t,e,n){n(190);var r=n(17);t.exports=r.Object.getOwnPropertySymbols},function(t,e,n){"use strict";var r=n(9),o=n(14),i=n(30),a=n(37),u=n(19),s=n(100),c=n(149),f=n(16),l=n(23),h=n(61),p=n(22),d=n(20),v=n(32),y=n(28),g=n(70),m=n(35),b=n(72),w=n(53),x=n(117),k=n(297),T=n(106),O=n(51),S=n(33),_=n(68),E=n(29),A=n(38),j=n(94),R=n(71),P=n(73),C=n(96),I=n(13),M=n(118),U=n(12),L=n(39),F=n(45),N=n(62).forEach,D=R("hidden"),B=I("toPrimitive"),q=F.set,H=F.getterFor("Symbol"),K=Object.prototype,V=o.Symbol,Y=i("JSON","stringify"),z=O.f,G=S.f,J=k.f,W=_.f,$=j("symbols"),X=j("op-symbols"),Z=j("string-to-symbol-registry"),Q=j("symbol-to-string-registry"),tt=j("wks"),et=o.QObject,nt=!et||!et.prototype||!et.prototype.findChild,rt=u&&f((function(){return 7!=b(G({},"a",{get:function(){return G(this,"a",{value:7}).a}})).a}))?function(t,e,n){var r=z(K,e);r&&delete K[e],G(t,e,n),r&&t!==K&&G(K,e,r)}:G,ot=function(t,e){var n=$[t]=b(V.prototype);return q(n,{type:"Symbol",tag:t,description:e}),u||(n.description=e),n},it=c?function(t){return"symbol"==typeof t}:function(t){return Object(t)instanceof V},at=function(t,e,n){t===K&&at(X,e,n),d(t);var r=g(e,!0);return d(n),l($,r)?(n.enumerable?(l(t,D)&&t[D][r]&&(t[D][r]=!1),n=b(n,{enumerable:m(0,!1)})):(l(t,D)||G(t,D,m(1,{})),t[D][r]=!0),rt(t,r,n)):G(t,r,n)},ut=function(t,e){d(t);var n=y(e),r=w(n).concat(lt(n));return N(r,(function(e){u&&!st.call(n,e)||at(t,e,n[e])})),t},st=function(t){var e=g(t,!0),n=W.call(this,e);return!(this===K&&l($,e)&&!l(X,e))&&(!(n||!l(this,e)||!l($,e)||l(this,D)&&this[D][e])||n)},ct=function(t,e){var n=y(t),r=g(e,!0);if(n!==K||!l($,r)||l(X,r)){var o=z(n,r);return!o||!l($,r)||l(n,D)&&n[D][r]||(o.enumerable=!0),o}},ft=function(t){var e=J(y(t)),n=[];return N(e,(function(t){l($,t)||l(P,t)||n.push(t)})),n},lt=function(t){var e=t===K,n=J(e?X:y(t)),r=[];return N(n,(function(t){!l($,t)||e&&!l(K,t)||r.push($[t])})),r};s||(A((V=function(){if(this instanceof V)throw TypeError("Symbol is not a constructor");var t=arguments.length&&void 0!==arguments[0]?String(arguments[0]):void 0,e=C(t),n=function(t){this===K&&n.call(X,t),l(this,D)&&l(this[D],e)&&(this[D][e]=!1),rt(this,e,m(1,t))};return u&&nt&&rt(K,e,{configurable:!0,set:n}),ot(e,t)}).prototype,"toString",(function(){return H(this).tag})),A(V,"withoutSetter",(function(t){return ot(C(t),t)})),_.f=st,S.f=at,O.f=ct,x.f=k.f=ft,T.f=lt,M.f=function(t){return ot(I(t),t)},u&&(G(V.prototype,"description",{configurable:!0,get:function(){return H(this).description}}),a||A(K,"propertyIsEnumerable",st,{unsafe:!0}))),r({global:!0,wrap:!0,forced:!s,sham:!s},{Symbol:V}),N(w(tt),(function(t){U(t)})),r({target:"Symbol",stat:!0,forced:!s},{for:function(t){var e=String(t);if(l(Z,e))return Z[e];var n=V(e);return Z[e]=n,Q[n]=e,n},keyFor:function(t){if(!it(t))throw TypeError(t+" is not a symbol");if(l(Q,t))return Q[t]},useSetter:function(){nt=!0},useSimple:function(){nt=!1}}),r({target:"Object",stat:!0,forced:!s,sham:!u},{create:function(t,e){return void 0===e?b(t):ut(b(t),e)},defineProperty:at,defineProperties:ut,getOwnPropertyDescriptor:ct}),r({target:"Object",stat:!0,forced:!s},{getOwnPropertyNames:ft,getOwnPropertySymbols:lt}),r({target:"Object",stat:!0,forced:f((function(){T.f(1)}))},{getOwnPropertySymbols:function(t){return T.f(v(t))}}),Y&&r({target:"JSON",stat:!0,forced:!s||f((function(){var t=V();return"[null]"!=Y([t])||"{}"!=Y({a:t})||"{}"!=Y(Object(t))}))},{stringify:function(t,e,n){for(var r,o=[t],i=1;arguments.length>i;)o.push(arguments[i++]);if(r=e,(p(e)||void 0!==t)&&!it(t))return h(e)||(e=function(t,e){if("function"==typeof r&&(e=r.call(this,t,e)),!it(e))return e}),o[1]=e,Y.apply(null,o)}}),V.prototype[B]||E(V.prototype,B,V.prototype.valueOf),L(V,"Symbol"),P[D]=!0},function(t,e,n){var r=n(22),o=n(61),i=n(13)("species");t.exports=function(t,e){var n;return o(t)&&("function"!=typeof(n=t.constructor)||n!==Array&&!o(n.prototype)?r(n)&&null===(n=n[i])&&(n=void 0):n=void 0),new(void 0===n?Array:n)(0===e?0:e)}},function(t,e,n){var r=n(323),o=n(326),i=n(198),a=n(358);t.exports=function(t,e){return r(t)||o(t,e)||i(t,e)||a()},t.exports.default=t.exports,t.exports.__esModule=!0},function(t,e,n){t.exports=n(324)},function(t,e,n){n(325);var r=n(17);t.exports=r.Array.isArray},function(t,e,n){n(196),n(151),n(190),n(328),n(329),n(330),n(331),n(197),n(332),n(333),n(334),n(335),n(336),n(337),n(338),n(339),n(340),n(341),n(342),n(343);var r=n(17);t.exports=r.Symbol},function(t,e,n){"use strict";var r=n(9),o=n(16),i=n(61),a=n(22),u=n(32),s=n(43),c=n(59),f=n(191),l=n(85),h=n(13),p=n(74),d=h("isConcatSpreadable"),v=p>=51||!o((function(){var t=[];return t[d]=!1,t.concat()[0]!==t})),y=l("concat"),g=function(t){if(!a(t))return!1;var e=t[d];return void 0!==e?!!e:i(t)};r({target:"Array",proto:!0,forced:!v||!y},{concat:function(t){var e,n,r,o,i,a=u(this),l=f(a,0),h=0;for(e=-1,r=arguments.length;e<r;e++)if(g(i=-1===e?a:arguments[e])){if(h+(o=s(i.length))>9007199254740991)throw TypeError("Maximum allowed index exceeded");for(n=0;n<o;n++,h++)n in i&&c(l,h,i[n])}else{if(h>=9007199254740991)throw TypeError("Maximum allowed index exceeded");c(l,h++,i)}return l.length=h,l}})},function(t,e,n){n(12)("iterator")},function(t,e,n){var r=n(352),o=n(200),i=n(202);t.exports=function(t,e){var n;if(t){if("string"==typeof t)return i(t,e);var a=r(n=Object.prototype.toString.call(t)).call(n,8,-1);return"Object"===a&&t.constructor&&(a=t.constructor.name),"Map"===a||"Set"===a?o(t):"Arguments"===a||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(a)?i(t,e):void 0}},t.exports.default=t.exports,t.exports.__esModule=!0},function(t,e,n){var r=n(354),o=Array.prototype;t.exports=function(t){var e=t.slice;return t===o||t instanceof Array&&e===o.slice?r:e}},function(t,e,n){t.exports=n(356)},function(t,e,n){n(46),n(357);var r=n(17);t.exports=r.Array.from},function(t,e){t.exports=function(t,e){(null==e||e>t.length)&&(e=t.length);for(var n=0,r=new Array(e);n<e;n++)r[n]=t[n];return r},t.exports.default=t.exports,t.exports.__esModule=!0},function(t,e,n){t.exports=n(363)},function(t,e,n){t.exports=n(367)},function(t,e,n){"use strict";var r=n(21),o=n(25);r(e,"__esModule",{value:!0}),e.default=void 0;var i=o(n(42));n(64);var a=o(n(372)),u=o(n(52)),s=o(n(50)),c=o(n(377)),f=n(381);e.default=function(t,e){var n,r,o=t,l=(0,f.parseIdxResponse)(t,e),h=l.remediations,p=l.context,d=l.actions,v=(0,c.default)(h),y=function(){var t=(0,s.default)(i.default.mark((function t(e){var n,r,o=arguments;return i.default.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(n=o.length>1&&void 0!==o[1]?o[1]:{},r=(0,a.default)(h).call(h,(function(t){return t.name===e}))){t.next=4;break}return t.abrupt("return",u.default.reject("Unknown remediation choice: [".concat(e,"]")));case 4:return t.abrupt("return",r.action(n));case 5:case"end":return t.stop()}}),t)})));return function(e){return t.apply(this,arguments)}}(),g=null===(n=o.successWithInteractionCode)||void 0===n?void 0:(0,a.default)(r=n.value).call(r,(function(t){return"interaction_code"===t.name})).value;return{proceed:y,neededToProceed:v,actions:d,context:p,rawIdxState:o,hasInteractionCode:function(){return!!o.successWithInteractionCode},interactionCode:g,toPersist:e}}},function(t,e,n){t.exports=n(385)},function(t,e,n){t.exports=n(393)},function(t,e,n){"use strict";var r=n(83),o=n(116),i=n(84),a=n(119),u=n(63),s=n(120),c=n(121),f=n(21),l=n(25);f(e,"__esModule",{value:!0}),e.default=void 0,n(64);var h=l(n(42)),p=l(n(187)),d=l(n(52)),v=l(n(122)),y=l(n(50)),g=n(82),m=n(398),b=l(n(205));function w(t,e){var n=r(t);if(o){var u=o(t);e&&(u=i(u).call(u,(function(e){return a(t,e).enumerable}))),n.push.apply(n,u)}return n}function x(t){for(var e=1;e<arguments.length;e++){var n,r=null!=arguments[e]?arguments[e]:{};if(e%2)u(n=w(Object(r),!0)).call(n,(function(e){(0,v.default)(t,e,r[e])}));else if(s)c(t,s(r));else{var o;u(o=w(Object(r))).call(o,(function(e){f(t,e,a(r,e))}))}}return t}var k=function(t){var e=t.actionDefinition,n=t.defaultParamsForAction,r=void 0===n?{}:n,o=t.immutableParamsForAction,i=void 0===o?{}:o,a=t.toPersist,u=e.href;return function(){var t=(0,y.default)(h.default.mark((function t(n){var o,s;return h.default.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return o={"content-type":"application/json",accept:e.accepts||"application/ion+json"},s=(0,p.default)(x(x(x({},r),n),i)),t.abrupt("return",(0,g.request)(u,{method:e.method,headers:o,body:s}).then((function(t){var e=t.json();return t.ok?e:401===t.status&&'Oktadevicejwt realm="Okta Device"'===t.headers.get("WWW-Authenticate")?e.then((function(t){return d.default.reject((0,b.default)(t,a))})):e.then((function(t){return d.default.reject(t)}))})).then((function(t){return(0,b.default)(t,a)})));case 3:case"end":return t.stop()}}),t)})));return function(e){return t.apply(this,arguments)}}()};e.default=function(t,e){var n=k,r=(0,m.divideActionParamsByMutability)(t),o=r.defaultParams,i=r.neededParams,a=r.immutableParams,u=n({actionDefinition:t,defaultParamsForAction:o[t.name],immutableParamsForAction:a[t.name],toPersist:e});return u.neededParams=i,u}},function(t,e,n){"use strict";(function(t){var r=n(24),o=n.n(r),i=n(130),a=n.n(i);function u(t,e){var n="undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(!n){if(Array.isArray(t)||(n=function(t,e){if(t){if("string"==typeof t)return s(t,e);var n=Object.prototype.toString.call(t).slice(8,-1);return"Object"===n&&t.constructor&&(n=t.constructor.name),"Map"===n||"Set"===n?Array.from(t):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?s(t,e):void 0}}(t))||e&&t&&"number"==typeof t.length){n&&(t=n);var r=0,o=function(){};return{s:o,n:function(){return r>=t.length?{done:!0}:{done:!1,value:t[r++]}},e:function(t){throw t},f:o}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var i,a=!0,u=!1;return{s:function(){n=n.call(t)},n:function(){var t=n.next();return a=t.done,t},e:function(t){u=!0,i=t},f:function(){try{a||null==n.return||n.return()}finally{if(u)throw i}}}}function s(t,e){(null==e||e>t.length)&&(e=t.length);for(var n=0,r=new Array(e);n<e;n++)r[n]=t[n];return r}e.a=function(e,n,r){var i=r.data,s=r.headers||{};"application/json"===(s["Content-Type"]||s["content-type"]||"")&&i&&"string"!=typeof i&&(i=JSON.stringify(i));var c=(t.fetch||a.a)(n,{method:e,headers:r.headers,body:i,credentials:r.withCredentials?"include":"omit"});return c.finally||(c=Promise.resolve(c)),c.then((function(t){var e=!t.ok,n=t.status;return function(t){return t.headers.get("Content-Type")&&t.headers.get("Content-Type").toLowerCase().indexOf("application/json")>=0?t.json().catch((function(t){return{error:t,errorSummary:"Could not parse server response"}})):t.text()}(t).then((function(e){return function(t,e,n){var r,i="object"===o()(e),a={},s=u(n.headers.entries());try{for(s.s();!(r=s.n()).done;){var c=r.value;a[c[0]]=c[1]}}catch(t){s.e(t)}finally{s.f()}var f={responseText:i?JSON.stringify(e):e,status:t,headers:a};return i&&(f.responseType="json",f.responseJSON=e),f}(n,e,t)})).then((function(t){var n;if(e||(null===(n=t.responseJSON)||void 0===n?void 0:n.error))throw t;return t}))}))}}).call(this,n(67))},function(t,e){t.exports=function(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t},t.exports.default=t.exports,t.exports.__esModule=!0},function(t,e,n){"use strict";(function(t){n.d(e,"a",(function(){return s}));var r=n(4),o=n.n(r),i=n(5),a=n.n(i),u=n(10),s=function(){function e(){o()(this,e),this.environments=["okta-auth-js/".concat("5.5.0")]}return a()(e,[{key:"addEnvironment",value:function(t){this.environments.push(t)}},{key:"getHttpHeader",value:function(){return this.maybeAddNodeEnvironment(),{"X-Okta-User-Agent-Extended":this.environments.join(" ")}}},{key:"getVersion",value:function(){return"5.5.0"}},{key:"maybeAddNodeEnvironment",value:function(){if(!Object(u.isBrowser)()&&t&&t.versions){var e=t.versions.node;this.environments.push("nodejs/".concat(e))}}}]),e}()}).call(this,n(412))},function(t,e){t.exports=function(t){return-1!==Function.toString.call(t).indexOf("[native code]")},t.exports.default=t.exports,t.exports.__esModule=!0},function(t,e,n){var r=n(87),o=n(214);function i(e,n,a){return o()?(t.exports=i=Reflect.construct,t.exports.default=t.exports,t.exports.__esModule=!0):(t.exports=i=function(t,e,n){var o=[null];o.push.apply(o,e);var i=new(Function.bind.apply(t,o));return n&&r(i,n.prototype),i},t.exports.default=t.exports,t.exports.__esModule=!0),i.apply(null,arguments)}t.exports=i,t.exports.default=t.exports,t.exports.__esModule=!0},function(t,e){t.exports=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}},t.exports.default=t.exports,t.exports.__esModule=!0},function(t,e){t.exports=function(t,e){var n=null==t?null:"undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(null!=n){var r,o,i=[],a=!0,u=!1;try{for(n=n.call(t);!(a=(r=n.next()).done)&&(i.push(r.value),!e||i.length!==e);a=!0);}catch(t){u=!0,o=t}finally{try{a||null==n.return||n.return()}finally{if(u)throw o}}return i}},t.exports.default=t.exports,t.exports.__esModule=!0},function(t,e,n){var r,o,i;i=function(){function t(){for(var t=0,e={};t<arguments.length;t++){var n=arguments[t];for(var r in n)e[r]=n[r]}return e}function e(t){return t.replace(/(%[0-9A-Z]{2})+/g,decodeURIComponent)}return function n(r){function o(){}function i(e,n,i){if("undefined"!=typeof document){"number"==typeof(i=t({path:"/"},o.defaults,i)).expires&&(i.expires=new Date(1*new Date+864e5*i.expires)),i.expires=i.expires?i.expires.toUTCString():"";try{var a=JSON.stringify(n);/^[\{\[]/.test(a)&&(n=a)}catch(t){}n=r.write?r.write(n,e):encodeURIComponent(String(n)).replace(/%(23|24|26|2B|3A|3C|3E|3D|2F|3F|40|5B|5D|5E|60|7B|7D|7C)/g,decodeURIComponent),e=encodeURIComponent(String(e)).replace(/%(23|24|26|2B|5E|60|7C)/g,decodeURIComponent).replace(/[\(\)]/g,escape);var u="";for(var s in i)i[s]&&(u+="; "+s,!0!==i[s]&&(u+="="+i[s].split(";")[0]));return document.cookie=e+"="+n+u}}function a(t,n){if("undefined"!=typeof document){for(var o={},i=document.cookie?document.cookie.split("; "):[],a=0;a<i.length;a++){var u=i[a].split("="),s=u.slice(1).join("=");n||'"'!==s.charAt(0)||(s=s.slice(1,-1));try{var c=e(u[0]);if(s=(r.read||r)(s,c)||e(s),n)try{s=JSON.parse(s)}catch(t){}if(o[c]=s,t===c)break}catch(t){}}return t?o[t]:o}}return o.set=i,o.get=function(t){return a(t,!1)},o.getJSON=function(t){return a(t,!0)},o.remove=function(e,n){i(e,"",t(n,{expires:-1}))},o.defaults={},o.withConverter=n,o}((function(){}))},void 0===(o="function"==typeof(r=i)?r.call(e,n,e,t):r)||(t.exports=o),t.exports=i()},function(t,e,n){"use strict";var r=n(4),o=n(5),i=n(6),a=n(7),u=n(3);function s(t,e){(null==e||e>t.length)&&(e=t.length);for(var n=0,r=new Array(e);n<e;n++)r[n]=t[n];return r}var c=function(t){i(n,t);var e=function(t){var e=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}();return function(){var n,r=u(t);if(e){var o=u(this).constructor;n=Reflect.construct(r,arguments,o)}else n=r.apply(this,arguments);return a(this,n)}}(n);function n(t){var o;return r(this,n),(o=e.call(this,t||"Promise was canceled")).name="CancelError",o}return o(n,[{key:"isCanceled",get:function(){return!0}}]),n}(n(128)(Error)),f=function(){function t(e){var n=this;r(this,t),this._cancelHandlers=[],this._isPending=!0,this._isCanceled=!1,this._rejectOnCancel=!0,this._promise=new Promise((function(t,r){n._reject=r;var o=function(t){if(!n._isPending)throw new Error("The `onCancel` handler was attached after the promise settled.");n._cancelHandlers.push(t)};return Object.defineProperties(o,{shouldReject:{get:function(){return n._rejectOnCancel},set:function(t){n._rejectOnCancel=t}}}),e((function(e){n._isCanceled&&o.shouldReject||(n._isPending=!1,t(e))}),(function(t){n._isPending=!1,r(t)}),o)}))}return o(t,[{key:"then",value:function(t,e){return this._promise.then(t,e)}},{key:"catch",value:function(t){return this._promise.catch(t)}},{key:"finally",value:function(t){return this._promise.finally(t)}},{key:"cancel",value:function(t){if(this._isPending&&!this._isCanceled){if(this._isCanceled=!0,this._cancelHandlers.length>0)try{var e,n=function(t,e){var n="undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(!n){if(Array.isArray(t)||(n=function(t,e){if(t){if("string"==typeof t)return s(t,e);var n=Object.prototype.toString.call(t).slice(8,-1);return"Object"===n&&t.constructor&&(n=t.constructor.name),"Map"===n||"Set"===n?Array.from(t):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?s(t,e):void 0}}(t))||e&&t&&"number"==typeof t.length){n&&(t=n);var r=0,o=function(){};return{s:o,n:function(){return r>=t.length?{done:!0}:{done:!1,value:t[r++]}},e:function(t){throw t},f:o}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var i,a=!0,u=!1;return{s:function(){n=n.call(t)},n:function(){var t=n.next();return a=t.done,t},e:function(t){u=!0,i=t},f:function(){try{a||null==n.return||n.return()}finally{if(u)throw i}}}}(this._cancelHandlers);try{for(n.s();!(e=n.n()).done;)(0,e.value)()}catch(t){n.e(t)}finally{n.f()}}catch(t){return void this._reject(t)}this._rejectOnCancel&&this._reject(new c(t))}}},{key:"isCanceled",get:function(){return this._isCanceled}}],[{key:"fn",value:function(e){return function(){for(var n=arguments.length,r=new Array(n),o=0;o<n;o++)r[o]=arguments[o];return new t((function(t,n,o){r.push(o),e.apply(void 0,r).then(t,n)}))}}}]),t}();Object.setPrototypeOf(f.prototype,Promise.prototype),t.exports=f,t.exports.CancelError=c},function(t,e,n){(function(){(t.exports=n(219)).version="5.1.2"}).call(this)},function(t,e,n){(function(e){var r=n(24),o=n(11),i=n(129),a=n(225),u=n(4),s=n(5),c=n(86),f=n(6),l=n(7),h=n(3);function p(t){var e=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}();return function(){var n,r=h(t);if(e){var o=h(this).constructor;n=Reflect.construct(r,arguments,o)}else n=r.apply(this,arguments);return l(this,n)}}(function(){var h,d,v=[].splice,y=function(t,e){if(!(t instanceof e))throw new Error("Bound instance method accessed before binding")},g=[].indexOf;d=n(226),h=n(227).EventEmitter,t.exports=function(){var t=function(t){"use strict";f(h,t);var n=p(h);function h(){var t,e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return u(this,h),(t=n.call(this)).get=t.get.bind(c(t)),t.mget=t.mget.bind(c(t)),t.set=t.set.bind(c(t)),t.mset=t.mset.bind(c(t)),t.del=t.del.bind(c(t)),t.take=t.take.bind(c(t)),t.ttl=t.ttl.bind(c(t)),t.getTtl=t.getTtl.bind(c(t)),t.keys=t.keys.bind(c(t)),t.has=t.has.bind(c(t)),t.getStats=t.getStats.bind(c(t)),t.flushAll=t.flushAll.bind(c(t)),t.flushStats=t.flushStats.bind(c(t)),t.close=t.close.bind(c(t)),t._checkData=t._checkData.bind(c(t)),t._check=t._check.bind(c(t)),t._isInvalidKey=t._isInvalidKey.bind(c(t)),t._wrap=t._wrap.bind(c(t)),t._getValLength=t._getValLength.bind(c(t)),t._error=t._error.bind(c(t)),t._initErrors=t._initErrors.bind(c(t)),t.options=e,t._initErrors(),t.data={},t.options=Object.assign({forceString:!1,objectValueSize:80,promiseValueSize:80,arrayValueSize:40,stdTTL:0,checkperiod:600,useClones:!0,deleteOnExpire:!0,enableLegacyCallbacks:!1,maxKeys:-1},t.options),t.options.enableLegacyCallbacks&&(console.warn("WARNING! node-cache legacy callback support will drop in v6.x"),["get","mget","set","del","ttl","getTtl","keys","has"].forEach((function(e){var n;n=t[e],t[e]=function(){for(var t,e,r=arguments.length,u=new Array(r),s=0;s<r;s++)u[s]=arguments[s];if(u=a(u).slice(0),t=v.call(u,-1),"function"!=typeof(e=i(t,1)[0]))return n.apply(void 0,o(u).concat([e]));try{e(null,n.apply(void 0,o(u)))}catch(t){e(t)}}}))),t.stats={hits:0,misses:0,keys:0,ksize:0,vsize:0},t.validKeyTypes=["string","number"],t._checkData(),l(t)}return s(h,[{key:"get",value:function(t){var e;if(y(this,h),null!=(e=this._isInvalidKey(t)))throw e;return null!=this.data[t]&&this._check(t,this.data[t])?(this.stats.hits++,this._unwrap(this.data[t])):void this.stats.misses++}},{key:"mget",value:function(t){var e,n,r,o,i;if(y(this,h),!Array.isArray(t))throw this._error("EKEYSTYPE");for(i={},n=0,o=t.length;n<o;n++){if(r=t[n],null!=(e=this._isInvalidKey(r)))throw e;null!=this.data[r]&&this._check(r,this.data[r])?(this.stats.hits++,i[r]=this._unwrap(this.data[r])):this.stats.misses++}return i}},{key:"set",value:function(t,e,n){var o,i;if(y(this,h),this.options.maxKeys>-1&&this.stats.keys>=this.options.maxKeys)throw this._error("ECACHEFULL");if(this.options.forceString&&"string"===!r(e)&&(e=JSON.stringify(e)),null==n&&(n=this.options.stdTTL),null!=(o=this._isInvalidKey(t)))throw o;return i=!1,this.data[t]&&(i=!0,this.stats.vsize-=this._getValLength(this._unwrap(this.data[t],!1))),this.data[t]=this._wrap(e,n),this.stats.vsize+=this._getValLength(e),i||(this.stats.ksize+=this._getKeyLength(t),this.stats.keys++),this.emit("set",t,e),!0}},{key:"mset",value:function(t){var e,n,r,o,i,a,u,s;if(y(this,h),this.options.maxKeys>-1&&this.stats.keys+t.length>=this.options.maxKeys)throw this._error("ECACHEFULL");for(n=0,i=t.length;n<i;n++){var c=t[n];if(o=c.key,s=c.val,(u=c.ttl)&&"number"!=typeof u)throw this._error("ETTLTYPE");if(null!=(e=this._isInvalidKey(o)))throw e}for(r=0,a=t.length;r<a;r++){var f=t[r];o=f.key,s=f.val,u=f.ttl,this.set(o,s,u)}return!0}},{key:"del",value:function(t){var e,n,r,o,i,a;for(y(this,h),Array.isArray(t)||(t=[t]),e=0,r=0,i=t.length;r<i;r++){if(o=t[r],null!=(n=this._isInvalidKey(o)))throw n;null!=this.data[o]&&(this.stats.vsize-=this._getValLength(this._unwrap(this.data[o],!1)),this.stats.ksize-=this._getKeyLength(o),this.stats.keys--,e++,a=this.data[o],delete this.data[o],this.emit("del",o,a.v))}return e}},{key:"take",value:function(t){var e;return y(this,h),null!=(e=this.get(t))&&this.del(t),e}},{key:"ttl",value:function(t,e){var n;if(y(this,h),e||(e=this.options.stdTTL),!t)return!1;if(null!=(n=this._isInvalidKey(t)))throw n;return!(null==this.data[t]||!this._check(t,this.data[t])||(e>=0?this.data[t]=this._wrap(this.data[t].v,e,!1):this.del(t),0))}},{key:"getTtl",value:function(t){var e;if(y(this,h),t){if(null!=(e=this._isInvalidKey(t)))throw e;return null!=this.data[t]&&this._check(t,this.data[t])?this.data[t].t:void 0}}},{key:"keys",value:function(){return y(this,h),Object.keys(this.data)}},{key:"has",value:function(t){return y(this,h),null!=this.data[t]&&this._check(t,this.data[t])}},{key:"getStats",value:function(){return y(this,h),this.stats}},{key:"flushAll",value:function(){var t=!(arguments.length>0&&void 0!==arguments[0])||arguments[0];y(this,h),this.data={},this.stats={hits:0,misses:0,keys:0,ksize:0,vsize:0},this._killCheckPeriod(),this._checkData(t),this.emit("flush")}},{key:"flushStats",value:function(){y(this,h),this.stats={hits:0,misses:0,keys:0,ksize:0,vsize:0},this.emit("flush_stats")}},{key:"close",value:function(){y(this,h),this._killCheckPeriod()}},{key:"_checkData",value:function(){var t,e,n,r=!(arguments.length>0&&void 0!==arguments[0])||arguments[0];for(t in y(this,h),e=this.data)n=e[t],this._check(t,n);r&&this.options.checkperiod>0&&(this.checkTimeout=setTimeout(this._checkData,1e3*this.options.checkperiod,r),null!=this.checkTimeout&&null!=this.checkTimeout.unref&&this.checkTimeout.unref())}},{key:"_killCheckPeriod",value:function(){if(null!=this.checkTimeout)return clearTimeout(this.checkTimeout)}},{key:"_check",value:function(t,e){var n;return y(this,h),n=!0,0!==e.t&&e.t<Date.now()&&(this.options.deleteOnExpire&&(n=!1,this.del(t)),this.emit("expired",t,this._unwrap(e))),n}},{key:"_isInvalidKey",value:function(t){var e;if(y(this,h),e=r(t),g.call(this.validKeyTypes,e)<0)return this._error("EKEYTYPE",{type:r(t)})}},{key:"_wrap",value:function(t,e){var n,r,o=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];return y(this,h),this.options.useClones||(o=!1),n=Date.now(),r=1e3,{t:0===e?0:e?n+e*r:0===this.options.stdTTL?this.options.stdTTL:n+this.options.stdTTL*r,v:o?d(t):t}}},{key:"_unwrap",value:function(t){var e=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];return this.options.useClones||(e=!1),null!=t.v?e?d(t.v):t.v:null}},{key:"_getKeyLength",value:function(t){return t.toString().length}},{key:"_getValLength",value:function(t){return y(this,h),"string"==typeof t?t.length:this.options.forceString?JSON.stringify(t).length:Array.isArray(t)?this.options.arrayValueSize*t.length:"number"==typeof t?8:"function"==typeof(null!=t?t.then:void 0)?this.options.promiseValueSize:(null!=e?e.isBuffer(t):void 0)?t.length:null!=t&&"object"===r(t)?this.options.objectValueSize*Object.keys(t).length:"boolean"==typeof t?8:0}},{key:"_error",value:function(t){var e,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return y(this,h),(e=new Error).name=t,e.errorcode=t,e.message=null!=this.ERRORS[t]?this.ERRORS[t](n):"-",e.data=n,e}},{key:"_initErrors",value:function(){var t,e,n;for(e in y(this,h),this.ERRORS={},n=this._ERRORS)t=n[e],this.ERRORS[e]=this.createErrorMessage(t)}},{key:"createErrorMessage",value:function(t){return function(e){return t.replace("__key",e.type)}}}]),h}(h);return t.prototype._ERRORS={ENOTFOUND:"Key `__key` not found",ECACHEFULL:"Cache max keys amount exceeded",EKEYTYPE:"The key argument has to be of type `string` or `number`. Found: `__key`",EKEYSTYPE:"The keys argument has to be an array.",ETTLTYPE:"The ttl argument has to be a number."},t}.call(this)}).call(this)}).call(this,n(135).Buffer)},function(t,e,n){"use strict";e.byteLength=function(t){var e=c(t),n=e[0],r=e[1];return 3*(n+r)/4-r},e.toByteArray=function(t){var e,n,r=c(t),a=r[0],u=r[1],s=new i(function(t,e,n){return 3*(e+n)/4-n}(0,a,u)),f=0,l=u>0?a-4:a;for(n=0;n<l;n+=4)e=o[t.charCodeAt(n)]<<18|o[t.charCodeAt(n+1)]<<12|o[t.charCodeAt(n+2)]<<6|o[t.charCodeAt(n+3)],s[f++]=e>>16&255,s[f++]=e>>8&255,s[f++]=255&e;return 2===u&&(e=o[t.charCodeAt(n)]<<2|o[t.charCodeAt(n+1)]>>4,s[f++]=255&e),1===u&&(e=o[t.charCodeAt(n)]<<10|o[t.charCodeAt(n+1)]<<4|o[t.charCodeAt(n+2)]>>2,s[f++]=e>>8&255,s[f++]=255&e),s},e.fromByteArray=function(t){for(var e,n=t.length,o=n%3,i=[],a=0,u=n-o;a<u;a+=16383)i.push(f(t,a,a+16383>u?u:a+16383));return 1===o?(e=t[n-1],i.push(r[e>>2]+r[e<<4&63]+"==")):2===o&&(e=(t[n-2]<<8)+t[n-1],i.push(r[e>>10]+r[e>>4&63]+r[e<<2&63]+"=")),i.join("")};for(var r=[],o=[],i="undefined"!=typeof Uint8Array?Uint8Array:Array,a="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",u=0,s=a.length;u<s;++u)r[u]=a[u],o[a.charCodeAt(u)]=u;function c(t){var e=t.length;if(e%4>0)throw new Error("Invalid string. Length must be a multiple of 4");var n=t.indexOf("=");return-1===n&&(n=e),[n,n===e?0:4-n%4]}function f(t,e,n){for(var o,i,a=[],u=e;u<n;u+=3)o=(t[u]<<16&16711680)+(t[u+1]<<8&65280)+(255&t[u+2]),a.push(r[(i=o)>>18&63]+r[i>>12&63]+r[i>>6&63]+r[63&i]);return a.join("")}o["-".charCodeAt(0)]=62,o["_".charCodeAt(0)]=63},function(t,e){e.read=function(t,e,n,r,o){var i,a,u=8*o-r-1,s=(1<<u)-1,c=s>>1,f=-7,l=n?o-1:0,h=n?-1:1,p=t[e+l];for(l+=h,i=p&(1<<-f)-1,p>>=-f,f+=u;f>0;i=256*i+t[e+l],l+=h,f-=8);for(a=i&(1<<-f)-1,i>>=-f,f+=r;f>0;a=256*a+t[e+l],l+=h,f-=8);if(0===i)i=1-c;else{if(i===s)return a?NaN:1/0*(p?-1:1);a+=Math.pow(2,r),i-=c}return(p?-1:1)*a*Math.pow(2,i-r)},e.write=function(t,e,n,r,o,i){var a,u,s,c=8*i-o-1,f=(1<<c)-1,l=f>>1,h=23===o?Math.pow(2,-24)-Math.pow(2,-77):0,p=r?0:i-1,d=r?1:-1,v=e<0||0===e&&1/e<0?1:0;for(e=Math.abs(e),isNaN(e)||e===1/0?(u=isNaN(e)?1:0,a=f):(a=Math.floor(Math.log(e)/Math.LN2),e*(s=Math.pow(2,-a))<1&&(a--,s*=2),(e+=a+l>=1?h/s:h*Math.pow(2,1-l))*s>=2&&(a++,s/=2),a+l>=f?(u=0,a=f):a+l>=1?(u=(e*s-1)*Math.pow(2,o),a+=l):(u=e*Math.pow(2,l-1)*Math.pow(2,o),a=0));o>=8;t[n+p]=255&u,p+=d,u/=256,o-=8);for(a=a<<o|u,c+=o;c>0;t[n+p]=255&a,p+=d,a/=256,c-=8);t[n+p-d]|=128*v}},function(t,e){var n={}.toString;t.exports=Array.isArray||function(t){return"[object Array]"==n.call(t)}},function(t,e,n){var r=n(133);t.exports=function(t){if(Array.isArray(t))return r(t)},t.exports.default=t.exports,t.exports.__esModule=!0},function(t,e){t.exports=function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")},t.exports.default=t.exports,t.exports.__esModule=!0},function(t,e,n){var r=n(132),o=n(136),i=n(88),a=n(134);t.exports=function(t){return r(t)||o(t)||i(t)||a()},t.exports.default=t.exports,t.exports.__esModule=!0},function(t,e,n){(function(e){var n=function(){"use strict";function t(t,e){return null!=e&&t instanceof e}var n,r,o;try{n=Map}catch(t){n=function(){}}try{r=Set}catch(t){r=function(){}}try{o=Promise}catch(t){o=function(){}}function i(a,s,c,f,l){"object"==typeof s&&(c=s.depth,f=s.prototype,l=s.includeNonEnumerable,s=s.circular);var h=[],p=[],d=void 0!==e;return void 0===s&&(s=!0),void 0===c&&(c=1/0),function a(c,v){if(null===c)return null;if(0===v)return c;var y,g;if("object"!=typeof c)return c;if(t(c,n))y=new n;else if(t(c,r))y=new r;else if(t(c,o))y=new o((function(t,e){c.then((function(e){t(a(e,v-1))}),(function(t){e(a(t,v-1))}))}));else if(i.__isArray(c))y=[];else if(i.__isRegExp(c))y=new RegExp(c.source,u(c)),c.lastIndex&&(y.lastIndex=c.lastIndex);else if(i.__isDate(c))y=new Date(c.getTime());else{if(d&&e.isBuffer(c))return y=e.allocUnsafe?e.allocUnsafe(c.length):new e(c.length),c.copy(y),y;t(c,Error)?y=Object.create(c):void 0===f?(g=Object.getPrototypeOf(c),y=Object.create(g)):(y=Object.create(f),g=f)}if(s){var m=h.indexOf(c);if(-1!=m)return p[m];h.push(c),p.push(y)}for(var b in t(c,n)&&c.forEach((function(t,e){var n=a(e,v-1),r=a(t,v-1);y.set(n,r)})),t(c,r)&&c.forEach((function(t){var e=a(t,v-1);y.add(e)})),c){var w;g&&(w=Object.getOwnPropertyDescriptor(g,b)),w&&null==w.set||(y[b]=a(c[b],v-1))}if(Object.getOwnPropertySymbols){var x=Object.getOwnPropertySymbols(c);for(b=0;b<x.length;b++){var k=x[b];(!(O=Object.getOwnPropertyDescriptor(c,k))||O.enumerable||l)&&(y[k]=a(c[k],v-1),O.enumerable||Object.defineProperty(y,k,{enumerable:!1}))}}if(l){var T=Object.getOwnPropertyNames(c);for(b=0;b<T.length;b++){var O,S=T[b];(O=Object.getOwnPropertyDescriptor(c,S))&&O.enumerable||(y[S]=a(c[S],v-1),Object.defineProperty(y,S,{enumerable:!1}))}}return y}(a,c)}function a(t){return Object.prototype.toString.call(t)}function u(t){var e="";return t.global&&(e+="g"),t.ignoreCase&&(e+="i"),t.multiline&&(e+="m"),e}return i.clonePrototype=function(t){if(null===t)return null;var e=function(){};return e.prototype=t,new e},i.__objToStr=a,i.__isDate=function(t){return"object"==typeof t&&"[object Date]"===a(t)},i.__isArray=function(t){return"object"==typeof t&&"[object Array]"===a(t)},i.__isRegExp=function(t){return"object"==typeof t&&"[object RegExp]"===a(t)},i.__getRegExpFlags=u,i}();t.exports&&(t.exports=n)}).call(this,n(135).Buffer)},function(t,e,n){"use strict";var r,o="object"==typeof Reflect?Reflect:null,i=o&&"function"==typeof o.apply?o.apply:function(t,e,n){return Function.prototype.apply.call(t,e,n)};r=o&&"function"==typeof o.ownKeys?o.ownKeys:Object.getOwnPropertySymbols?function(t){return Object.getOwnPropertyNames(t).concat(Object.getOwnPropertySymbols(t))}:function(t){return Object.getOwnPropertyNames(t)};var a=Number.isNaN||function(t){return t!=t};function u(){u.init.call(this)}t.exports=u,t.exports.once=function(t,e){return new Promise((function(n,r){function o(n){t.removeListener(e,i),r(n)}function i(){"function"==typeof t.removeListener&&t.removeListener("error",o),n([].slice.call(arguments))}g(t,e,i,{once:!0}),"error"!==e&&function(t,e,n){"function"==typeof t.on&&g(t,"error",e,{once:!0})}(t,o)}))},u.EventEmitter=u,u.prototype._events=void 0,u.prototype._eventsCount=0,u.prototype._maxListeners=void 0;var s=10;function c(t){if("function"!=typeof t)throw new TypeError('The "listener" argument must be of type Function. Received type '+typeof t)}function f(t){return void 0===t._maxListeners?u.defaultMaxListeners:t._maxListeners}function l(t,e,n,r){var o,i,a,u;if(c(n),void 0===(i=t._events)?(i=t._events=Object.create(null),t._eventsCount=0):(void 0!==i.newListener&&(t.emit("newListener",e,n.listener?n.listener:n),i=t._events),a=i[e]),void 0===a)a=i[e]=n,++t._eventsCount;else if("function"==typeof a?a=i[e]=r?[n,a]:[a,n]:r?a.unshift(n):a.push(n),(o=f(t))>0&&a.length>o&&!a.warned){a.warned=!0;var s=new Error("Possible EventEmitter memory leak detected. "+a.length+" "+String(e)+" listeners added. Use emitter.setMaxListeners() to increase limit");s.name="MaxListenersExceededWarning",s.emitter=t,s.type=e,s.count=a.length,u=s,console&&console.warn&&console.warn(u)}return t}function h(){if(!this.fired)return this.target.removeListener(this.type,this.wrapFn),this.fired=!0,0===arguments.length?this.listener.call(this.target):this.listener.apply(this.target,arguments)}function p(t,e,n){var r={fired:!1,wrapFn:void 0,target:t,type:e,listener:n},o=h.bind(r);return o.listener=n,r.wrapFn=o,o}function d(t,e,n){var r=t._events;if(void 0===r)return[];var o=r[e];return void 0===o?[]:"function"==typeof o?n?[o.listener||o]:[o]:n?function(t){for(var e=new Array(t.length),n=0;n<e.length;++n)e[n]=t[n].listener||t[n];return e}(o):y(o,o.length)}function v(t){var e=this._events;if(void 0!==e){var n=e[t];if("function"==typeof n)return 1;if(void 0!==n)return n.length}return 0}function y(t,e){for(var n=new Array(e),r=0;r<e;++r)n[r]=t[r];return n}function g(t,e,n,r){if("function"==typeof t.on)r.once?t.once(e,n):t.on(e,n);else{if("function"!=typeof t.addEventListener)throw new TypeError('The "emitter" argument must be of type EventEmitter. Received type '+typeof t);t.addEventListener(e,(function o(i){r.once&&t.removeEventListener(e,o),n(i)}))}}Object.defineProperty(u,"defaultMaxListeners",{enumerable:!0,get:function(){return s},set:function(t){if("number"!=typeof t||t<0||a(t))throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received '+t+".");s=t}}),u.init=function(){void 0!==this._events&&this._events!==Object.getPrototypeOf(this)._events||(this._events=Object.create(null),this._eventsCount=0),this._maxListeners=this._maxListeners||void 0},u.prototype.setMaxListeners=function(t){if("number"!=typeof t||t<0||a(t))throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received '+t+".");return this._maxListeners=t,this},u.prototype.getMaxListeners=function(){return f(this)},u.prototype.emit=function(t){for(var e=[],n=1;n<arguments.length;n++)e.push(arguments[n]);var r="error"===t,o=this._events;if(void 0!==o)r=r&&void 0===o.error;else if(!r)return!1;if(r){var a;if(e.length>0&&(a=e[0]),a instanceof Error)throw a;var u=new Error("Unhandled error."+(a?" ("+a.message+")":""));throw u.context=a,u}var s=o[t];if(void 0===s)return!1;if("function"==typeof s)i(s,this,e);else{var c=s.length,f=y(s,c);for(n=0;n<c;++n)i(f[n],this,e)}return!0},u.prototype.addListener=function(t,e){return l(this,t,e,!1)},u.prototype.on=u.prototype.addListener,u.prototype.prependListener=function(t,e){return l(this,t,e,!0)},u.prototype.once=function(t,e){return c(e),this.on(t,p(this,t,e)),this},u.prototype.prependOnceListener=function(t,e){return c(e),this.prependListener(t,p(this,t,e)),this},u.prototype.removeListener=function(t,e){var n,r,o,i,a;if(c(e),void 0===(r=this._events))return this;if(void 0===(n=r[t]))return this;if(n===e||n.listener===e)0==--this._eventsCount?this._events=Object.create(null):(delete r[t],r.removeListener&&this.emit("removeListener",t,n.listener||e));else if("function"!=typeof n){for(o=-1,i=n.length-1;i>=0;i--)if(n[i]===e||n[i].listener===e){a=n[i].listener,o=i;break}if(o<0)return this;0===o?n.shift():function(t,e){for(;e+1<t.length;e++)t[e]=t[e+1];t.pop()}(n,o),1===n.length&&(r[t]=n[0]),void 0!==r.removeListener&&this.emit("removeListener",t,a||e)}return this},u.prototype.off=u.prototype.removeListener,u.prototype.removeAllListeners=function(t){var e,n,r;if(void 0===(n=this._events))return this;if(void 0===n.removeListener)return 0===arguments.length?(this._events=Object.create(null),this._eventsCount=0):void 0!==n[t]&&(0==--this._eventsCount?this._events=Object.create(null):delete n[t]),this;if(0===arguments.length){var o,i=Object.keys(n);for(r=0;r<i.length;++r)"removeListener"!==(o=i[r])&&this.removeAllListeners(o);return this.removeAllListeners("removeListener"),this._events=Object.create(null),this._eventsCount=0,this}if("function"==typeof(e=n[t]))this.removeListener(t,e);else if(void 0!==e)for(r=e.length-1;r>=0;r--)this.removeListener(t,e[r]);return this},u.prototype.listeners=function(t){return d(this,t,!0)},u.prototype.rawListeners=function(t){return d(this,t,!1)},u.listenerCount=function(t,e){return"function"==typeof t.listenerCount?t.listenerCount(e):v.call(t,e)},u.prototype.listenerCount=v,u.prototype.eventNames=function(){return this._eventsCount>0?r(this._events):[]}},function(t,e,n){var r=n(137);t.exports=r},function(t,e,n){var r=n(9),o=n(19);r({target:"Object",stat:!0,forced:!o,sham:!o},{defineProperty:n(33).f})},function(t,e,n){t.exports=n(231)},function(t,e,n){var r=n(140);t.exports=r},function(t,e,n){n(233);var r=n(36);t.exports=r("Array").indexOf},function(t,e,n){"use strict";var r=n(9),o=n(141).indexOf,i=n(143),a=[].indexOf,u=!!a&&1/[1].indexOf(1,-0)<0,s=i("indexOf");r({target:"Array",proto:!0,forced:u||!s},{indexOf:function(t){return u?a.apply(this,arguments)||0:o(this,t,arguments.length>1?arguments[1]:void 0)}})},function(t,e,n){var r=n(144);t.exports=r},function(t,e,n){var r=n(14),o=n(29);t.exports=function(t,e){try{o(r,t,e)}catch(n){r[t]=e}return e}},function(t,e,n){var r=n(16);t.exports=!r((function(){function t(){}return t.prototype.constructor=null,Object.getPrototypeOf(new t)!==t.prototype}))},function(t,e,n){var r=n(22);t.exports=function(t){if(!r(t)&&null!==t)throw TypeError("Can't set "+String(t)+" as a prototype");return t}},function(t,e,n){"use strict";var r,o,i,a,u=n(9),s=n(37),c=n(14),f=n(30),l=n(152),h=n(38),p=n(153),d=n(97),v=n(39),y=n(240),g=n(22),m=n(41),b=n(103),w=n(154),x=n(54),k=n(155),T=n(156),O=n(157).set,S=n(241),_=n(159),E=n(243),A=n(57),j=n(75),R=n(45),P=n(139),C=n(13),I=n(245),M=n(104),U=n(74),L=C("species"),F="Promise",N=R.get,D=R.set,B=R.getterFor(F),q=l&&l.prototype,H=l,K=q,V=c.TypeError,Y=c.document,z=c.process,G=A.f,J=G,W=!!(Y&&Y.createEvent&&c.dispatchEvent),$="function"==typeof PromiseRejectionEvent,X=!1,Z=P(F,(function(){var t=w(H)!==String(H);if(!t&&66===U)return!0;if(s&&!K.finally)return!0;if(U>=51&&/native code/.test(H))return!1;var e=new H((function(t){t(1)})),n=function(t){t((function(){}),(function(){}))};return(e.constructor={})[L]=n,!(X=e.then((function(){}))instanceof n)||!t&&I&&!$})),Q=Z||!k((function(t){H.all(t).catch((function(){}))})),tt=function(t){var e;return!(!g(t)||"function"!=typeof(e=t.then))&&e},et=function(t,e){if(!t.notified){t.notified=!0;var n=t.reactions;S((function(){for(var r=t.value,o=1==t.state,i=0;n.length>i;){var a,u,s,c=n[i++],f=o?c.ok:c.fail,l=c.resolve,h=c.reject,p=c.domain;try{f?(o||(2===t.rejection&&it(t),t.rejection=1),!0===f?a=r:(p&&p.enter(),a=f(r),p&&(p.exit(),s=!0)),a===c.promise?h(V("Promise-chain cycle")):(u=tt(a))?u.call(a,l,h):l(a)):h(r)}catch(t){p&&!s&&p.exit(),h(t)}}t.reactions=[],t.notified=!1,e&&!t.rejection&&rt(t)}))}},nt=function(t,e,n){var r,o;W?((r=Y.createEvent("Event")).promise=e,r.reason=n,r.initEvent(t,!1,!0),c.dispatchEvent(r)):r={promise:e,reason:n},!$&&(o=c["on"+t])?o(r):"unhandledrejection"===t&&E("Unhandled promise rejection",n)},rt=function(t){O.call(c,(function(){var e,n=t.facade,r=t.value;if(ot(t)&&(e=j((function(){M?z.emit("unhandledRejection",r,n):nt("unhandledrejection",n,r)})),t.rejection=M||ot(t)?2:1,e.error))throw e.value}))},ot=function(t){return 1!==t.rejection&&!t.parent},it=function(t){O.call(c,(function(){var e=t.facade;M?z.emit("rejectionHandled",e):nt("rejectionhandled",e,t.value)}))},at=function(t,e,n){return function(r){t(e,r,n)}},ut=function(t,e,n){t.done||(t.done=!0,n&&(t=n),t.value=e,t.state=2,et(t,!0))},st=function(t,e,n){if(!t.done){t.done=!0,n&&(t=n);try{if(t.facade===e)throw V("Promise can't be resolved itself");var r=tt(e);r?S((function(){var n={done:!1};try{r.call(e,at(st,n,t),at(ut,n,t))}catch(e){ut(n,e,t)}})):(t.value=e,t.state=1,et(t,!1))}catch(e){ut({done:!1},e,t)}}};if(Z&&(K=(H=function(t){b(this,H,F),m(t),r.call(this);var e=N(this);try{t(at(st,e),at(ut,e))}catch(t){ut(e,t)}}).prototype,(r=function(t){D(this,{type:F,done:!1,notified:!1,parent:!1,reactions:[],rejection:!1,state:0,value:void 0})}).prototype=p(K,{then:function(t,e){var n=B(this),r=G(T(this,H));return r.ok="function"!=typeof t||t,r.fail="function"==typeof e&&e,r.domain=M?z.domain:void 0,n.parent=!0,n.reactions.push(r),0!=n.state&&et(n,!1),r.promise},catch:function(t){return this.then(void 0,t)}}),o=function(){var t=new r,e=N(t);this.promise=t,this.resolve=at(st,e),this.reject=at(ut,e)},A.f=G=function(t){return t===H||t===i?new o(t):J(t)},!s&&"function"==typeof l&&q!==Object.prototype)){a=q.then,X||(h(q,"then",(function(t,e){var n=this;return new H((function(t,e){a.call(n,t,e)})).then(t,e)}),{unsafe:!0}),h(q,"catch",K.catch,{unsafe:!0}));try{delete q.constructor}catch(t){}d&&d(q,K)}u({global:!0,wrap:!0,forced:Z},{Promise:H}),v(H,F,!1,!0),y(F),i=f(F),u({target:F,stat:!0,forced:Z},{reject:function(t){var e=G(this);return e.reject.call(void 0,t),e.promise}}),u({target:F,stat:!0,forced:s||Z},{resolve:function(t){return _(s&&this===i?H:this,t)}}),u({target:F,stat:!0,forced:Q},{all:function(t){var e=this,n=G(e),r=n.resolve,o=n.reject,i=j((function(){var n=m(e.resolve),i=[],a=0,u=1;x(t,(function(t){var s=a++,c=!1;i.push(void 0),u++,n.call(e,t).then((function(t){c||(c=!0,i[s]=t,--u||r(i))}),o)})),--u||r(i)}));return i.error&&o(i.value),n.promise},race:function(t){var e=this,n=G(e),r=n.reject,o=j((function(){var o=m(e.resolve);x(t,(function(t){o.call(e,t).then(n.resolve,r)}))}));return o.error&&r(o.value),n.promise}})},function(t,e,n){"use strict";var r=n(102),o=n(56);t.exports=r?{}.toString:function(){return"[object "+o(this)+"]"}},function(t,e,n){"use strict";var r=n(30),o=n(33),i=n(13),a=n(19),u=i("species");t.exports=function(t){var e=r(t),n=o.f;a&&e&&!e[u]&&n(e,u,{configurable:!0,get:function(){return this}})}},function(t,e,n){var r,o,i,a,u,s,c,f,l=n(14),h=n(51).f,p=n(157).set,d=n(158),v=n(242),y=n(104),g=l.MutationObserver||l.WebKitMutationObserver,m=l.document,b=l.process,w=l.Promise,x=h(l,"queueMicrotask"),k=x&&x.value;k||(r=function(){var t,e;for(y&&(t=b.domain)&&t.exit();o;){e=o.fn,o=o.next;try{e()}catch(t){throw o?a():i=void 0,t}}i=void 0,t&&t.enter()},d||y||v||!g||!m?w&&w.resolve?((c=w.resolve(void 0)).constructor=w,f=c.then,a=function(){f.call(c,r)}):a=y?function(){b.nextTick(r)}:function(){p.call(l,r)}:(u=!0,s=m.createTextNode(""),new g(r).observe(s,{characterData:!0}),a=function(){s.data=u=!u})),t.exports=k||function(t){var e={fn:t,next:void 0};i&&(i.next=e),o||(o=e,a()),i=e}},function(t,e,n){var r=n(101);t.exports=/web0s(?!.*chrome)/i.test(r)},function(t,e,n){var r=n(14);t.exports=function(t,e){var n=r.console;n&&n.error&&(1===arguments.length?n.error(t):n.error(t,e))}},function(t,e,n){var r=n(14),o=n(154),i=r.WeakMap;t.exports="function"==typeof i&&/native code/.test(o(i))},function(t,e){t.exports="object"==typeof window},function(t,e,n){"use strict";var r=n(9),o=n(37),i=n(152),a=n(16),u=n(30),s=n(156),c=n(159),f=n(38);if(r({target:"Promise",proto:!0,real:!0,forced:!!i&&a((function(){i.prototype.finally.call({then:function(){}},(function(){}))}))},{finally:function(t){var e=s(this,u("Promise")),n="function"==typeof t;return this.then(n?function(n){return c(e,t()).then((function(){return n}))}:t,n?function(n){return c(e,t()).then((function(){throw n}))}:t)}}),!o&&"function"==typeof i){var l=u("Promise").prototype.finally;i.prototype.finally!==l&&f(i.prototype,"finally",l,{unsafe:!0})}},function(t,e){t.exports={CSSRuleList:0,CSSStyleDeclaration:0,CSSValueList:0,ClientRectList:0,DOMRectList:0,DOMStringList:0,DOMTokenList:1,DataTransferItemList:0,FileList:0,HTMLAllCollection:0,HTMLCollection:0,HTMLFormElement:0,HTMLSelectElement:0,MediaList:0,MimeTypeArray:0,NamedNodeMap:0,NodeList:1,PaintRequestList:0,Plugin:0,PluginArray:0,SVGLengthList:0,SVGNumberList:0,SVGPathSegList:0,SVGPointList:0,SVGStringList:0,SVGTransformList:0,SourceBufferList:0,StyleSheetList:0,TextTrackCueList:0,TextTrackList:0,TouchList:0}},function(t,e,n){t.exports=n(249)},function(t,e,n){var r=n(250);t.exports=r},function(t,e,n){n(251),n(255),n(169);var r=n(17);t.exports=r.URL},function(t,e,n){"use strict";n(46);var r,o=n(9),i=n(19),a=n(167),u=n(14),s=n(98),c=n(38),f=n(103),l=n(23),h=n(252),p=n(168),d=n(162).codeAt,v=n(254),y=n(39),g=n(169),m=n(45),b=u.URL,w=g.URLSearchParams,x=g.getState,k=m.set,T=m.getterFor("URL"),O=Math.floor,S=Math.pow,_=/[A-Za-z]/,E=/[\d+-.A-Za-z]/,A=/\d/,j=/^0x/i,R=/^[0-7]+$/,P=/^\d+$/,C=/^[\dA-Fa-f]+$/,I=/[\0\t\n\r #%/:<>?@[\\\]^|]/,M=/[\0\t\n\r #/:<>?@[\\\]^|]/,U=/^[\u0000-\u001F ]+|[\u0000-\u001F ]+$/g,L=/[\t\n\r]/g,F=function(t,e){var n,r,o;if("["==e.charAt(0)){if("]"!=e.charAt(e.length-1))return"Invalid host";if(!(n=D(e.slice(1,-1))))return"Invalid host";t.host=n}else if(G(t)){if(e=v(e),I.test(e))return"Invalid host";if(null===(n=N(e)))return"Invalid host";t.host=n}else{if(M.test(e))return"Invalid host";for(n="",r=p(e),o=0;o<r.length;o++)n+=Y(r[o],q);t.host=n}},N=function(t){var e,n,r,o,i,a,u,s=t.split(".");if(s.length&&""==s[s.length-1]&&s.pop(),(e=s.length)>4)return t;for(n=[],r=0;r<e;r++){if(""==(o=s[r]))return t;if(i=10,o.length>1&&"0"==o.charAt(0)&&(i=j.test(o)?16:8,o=o.slice(8==i?1:2)),""===o)a=0;else{if(!(10==i?P:8==i?R:C).test(o))return t;a=parseInt(o,i)}n.push(a)}for(r=0;r<e;r++)if(a=n[r],r==e-1){if(a>=S(256,5-e))return null}else if(a>255)return null;for(u=n.pop(),r=0;r<n.length;r++)u+=n[r]*S(256,3-r);return u},D=function(t){var e,n,r,o,i,a,u,s=[0,0,0,0,0,0,0,0],c=0,f=null,l=0,h=function(){return t.charAt(l)};if(":"==h()){if(":"!=t.charAt(1))return;l+=2,f=++c}for(;h();){if(8==c)return;if(":"!=h()){for(e=n=0;n<4&&C.test(h());)e=16*e+parseInt(h(),16),l++,n++;if("."==h()){if(0==n)return;if(l-=n,c>6)return;for(r=0;h();){if(o=null,r>0){if(!("."==h()&&r<4))return;l++}if(!A.test(h()))return;for(;A.test(h());){if(i=parseInt(h(),10),null===o)o=i;else{if(0==o)return;o=10*o+i}if(o>255)return;l++}s[c]=256*s[c]+o,2!=++r&&4!=r||c++}if(4!=r)return;break}if(":"==h()){if(l++,!h())return}else if(h())return;s[c++]=e}else{if(null!==f)return;l++,f=++c}}if(null!==f)for(a=c-f,c=7;0!=c&&a>0;)u=s[c],s[c--]=s[f+a-1],s[f+--a]=u;else if(8!=c)return;return s},B=function(t){var e,n,r,o;if("number"==typeof t){for(e=[],n=0;n<4;n++)e.unshift(t%256),t=O(t/256);return e.join(".")}if("object"==typeof t){for(e="",r=function(t){for(var e=null,n=1,r=null,o=0,i=0;i<8;i++)0!==t[i]?(o>n&&(e=r,n=o),r=null,o=0):(null===r&&(r=i),++o);return o>n&&(e=r,n=o),e}(t),n=0;n<8;n++)o&&0===t[n]||(o&&(o=!1),r===n?(e+=n?":":"::",o=!0):(e+=t[n].toString(16),n<7&&(e+=":")));return"["+e+"]"}return t},q={},H=h({},q,{" ":1,'"':1,"<":1,">":1,"`":1}),K=h({},H,{"#":1,"?":1,"{":1,"}":1}),V=h({},K,{"/":1,":":1,";":1,"=":1,"@":1,"[":1,"\\":1,"]":1,"^":1,"|":1}),Y=function(t,e){var n=d(t,0);return n>32&&n<127&&!l(e,t)?t:encodeURIComponent(t)},z={ftp:21,file:null,http:80,https:443,ws:80,wss:443},G=function(t){return l(z,t.scheme)},J=function(t){return""!=t.username||""!=t.password},W=function(t){return!t.host||t.cannotBeABaseURL||"file"==t.scheme},$=function(t,e){var n;return 2==t.length&&_.test(t.charAt(0))&&(":"==(n=t.charAt(1))||!e&&"|"==n)},X=function(t){var e;return t.length>1&&$(t.slice(0,2))&&(2==t.length||"/"===(e=t.charAt(2))||"\\"===e||"?"===e||"#"===e)},Z=function(t){var e=t.path,n=e.length;!n||"file"==t.scheme&&1==n&&$(e[0],!0)||e.pop()},Q=function(t){return"."===t||"%2e"===t.toLowerCase()},tt={},et={},nt={},rt={},ot={},it={},at={},ut={},st={},ct={},ft={},lt={},ht={},pt={},dt={},vt={},yt={},gt={},mt={},bt={},wt={},xt=function(t,e,n,o){var i,a,u,s,c,f=n||tt,h=0,d="",v=!1,y=!1,g=!1;for(n||(t.scheme="",t.username="",t.password="",t.host=null,t.port=null,t.path=[],t.query=null,t.fragment=null,t.cannotBeABaseURL=!1,e=e.replace(U,"")),e=e.replace(L,""),i=p(e);h<=i.length;){switch(a=i[h],f){case tt:if(!a||!_.test(a)){if(n)return"Invalid scheme";f=nt;continue}d+=a.toLowerCase(),f=et;break;case et:if(a&&(E.test(a)||"+"==a||"-"==a||"."==a))d+=a.toLowerCase();else{if(":"!=a){if(n)return"Invalid scheme";d="",f=nt,h=0;continue}if(n&&(G(t)!=l(z,d)||"file"==d&&(J(t)||null!==t.port)||"file"==t.scheme&&!t.host))return;if(t.scheme=d,n)return void(G(t)&&z[t.scheme]==t.port&&(t.port=null));d="","file"==t.scheme?f=pt:G(t)&&o&&o.scheme==t.scheme?f=rt:G(t)?f=ut:"/"==i[h+1]?(f=ot,h++):(t.cannotBeABaseURL=!0,t.path.push(""),f=mt)}break;case nt:if(!o||o.cannotBeABaseURL&&"#"!=a)return"Invalid scheme";if(o.cannotBeABaseURL&&"#"==a){t.scheme=o.scheme,t.path=o.path.slice(),t.query=o.query,t.fragment="",t.cannotBeABaseURL=!0,f=wt;break}f="file"==o.scheme?pt:it;continue;case rt:if("/"!=a||"/"!=i[h+1]){f=it;continue}f=st,h++;break;case ot:if("/"==a){f=ct;break}f=gt;continue;case it:if(t.scheme=o.scheme,a==r)t.username=o.username,t.password=o.password,t.host=o.host,t.port=o.port,t.path=o.path.slice(),t.query=o.query;else if("/"==a||"\\"==a&&G(t))f=at;else if("?"==a)t.username=o.username,t.password=o.password,t.host=o.host,t.port=o.port,t.path=o.path.slice(),t.query="",f=bt;else{if("#"!=a){t.username=o.username,t.password=o.password,t.host=o.host,t.port=o.port,t.path=o.path.slice(),t.path.pop(),f=gt;continue}t.username=o.username,t.password=o.password,t.host=o.host,t.port=o.port,t.path=o.path.slice(),t.query=o.query,t.fragment="",f=wt}break;case at:if(!G(t)||"/"!=a&&"\\"!=a){if("/"!=a){t.username=o.username,t.password=o.password,t.host=o.host,t.port=o.port,f=gt;continue}f=ct}else f=st;break;case ut:if(f=st,"/"!=a||"/"!=d.charAt(h+1))continue;h++;break;case st:if("/"!=a&&"\\"!=a){f=ct;continue}break;case ct:if("@"==a){v&&(d="%40"+d),v=!0,u=p(d);for(var m=0;m<u.length;m++){var b=u[m];if(":"!=b||g){var w=Y(b,V);g?t.password+=w:t.username+=w}else g=!0}d=""}else if(a==r||"/"==a||"?"==a||"#"==a||"\\"==a&&G(t)){if(v&&""==d)return"Invalid authority";h-=p(d).length+1,d="",f=ft}else d+=a;break;case ft:case lt:if(n&&"file"==t.scheme){f=vt;continue}if(":"!=a||y){if(a==r||"/"==a||"?"==a||"#"==a||"\\"==a&&G(t)){if(G(t)&&""==d)return"Invalid host";if(n&&""==d&&(J(t)||null!==t.port))return;if(s=F(t,d))return s;if(d="",f=yt,n)return;continue}"["==a?y=!0:"]"==a&&(y=!1),d+=a}else{if(""==d)return"Invalid host";if(s=F(t,d))return s;if(d="",f=ht,n==lt)return}break;case ht:if(!A.test(a)){if(a==r||"/"==a||"?"==a||"#"==a||"\\"==a&&G(t)||n){if(""!=d){var x=parseInt(d,10);if(x>65535)return"Invalid port";t.port=G(t)&&x===z[t.scheme]?null:x,d=""}if(n)return;f=yt;continue}return"Invalid port"}d+=a;break;case pt:if(t.scheme="file","/"==a||"\\"==a)f=dt;else{if(!o||"file"!=o.scheme){f=gt;continue}if(a==r)t.host=o.host,t.path=o.path.slice(),t.query=o.query;else if("?"==a)t.host=o.host,t.path=o.path.slice(),t.query="",f=bt;else{if("#"!=a){X(i.slice(h).join(""))||(t.host=o.host,t.path=o.path.slice(),Z(t)),f=gt;continue}t.host=o.host,t.path=o.path.slice(),t.query=o.query,t.fragment="",f=wt}}break;case dt:if("/"==a||"\\"==a){f=vt;break}o&&"file"==o.scheme&&!X(i.slice(h).join(""))&&($(o.path[0],!0)?t.path.push(o.path[0]):t.host=o.host),f=gt;continue;case vt:if(a==r||"/"==a||"\\"==a||"?"==a||"#"==a){if(!n&&$(d))f=gt;else if(""==d){if(t.host="",n)return;f=yt}else{if(s=F(t,d))return s;if("localhost"==t.host&&(t.host=""),n)return;d="",f=yt}continue}d+=a;break;case yt:if(G(t)){if(f=gt,"/"!=a&&"\\"!=a)continue}else if(n||"?"!=a)if(n||"#"!=a){if(a!=r&&(f=gt,"/"!=a))continue}else t.fragment="",f=wt;else t.query="",f=bt;break;case gt:if(a==r||"/"==a||"\\"==a&&G(t)||!n&&("?"==a||"#"==a)){if(".."===(c=(c=d).toLowerCase())||"%2e."===c||".%2e"===c||"%2e%2e"===c?(Z(t),"/"==a||"\\"==a&&G(t)||t.path.push("")):Q(d)?"/"==a||"\\"==a&&G(t)||t.path.push(""):("file"==t.scheme&&!t.path.length&&$(d)&&(t.host&&(t.host=""),d=d.charAt(0)+":"),t.path.push(d)),d="","file"==t.scheme&&(a==r||"?"==a||"#"==a))for(;t.path.length>1&&""===t.path[0];)t.path.shift();"?"==a?(t.query="",f=bt):"#"==a&&(t.fragment="",f=wt)}else d+=Y(a,K);break;case mt:"?"==a?(t.query="",f=bt):"#"==a?(t.fragment="",f=wt):a!=r&&(t.path[0]+=Y(a,q));break;case bt:n||"#"!=a?a!=r&&("'"==a&&G(t)?t.query+="%27":t.query+="#"==a?"%23":Y(a,q)):(t.fragment="",f=wt);break;case wt:a!=r&&(t.fragment+=Y(a,H))}h++}},kt=function(t){var e,n,r=f(this,kt,"URL"),o=arguments.length>1?arguments[1]:void 0,a=String(t),u=k(r,{type:"URL"});if(void 0!==o)if(o instanceof kt)e=T(o);else if(n=xt(e={},String(o)))throw TypeError(n);if(n=xt(u,a,null,e))throw TypeError(n);var s=u.searchParams=new w,c=x(s);c.updateSearchParams(u.query),c.updateURL=function(){u.query=String(s)||null},i||(r.href=Ot.call(r),r.origin=St.call(r),r.protocol=_t.call(r),r.username=Et.call(r),r.password=At.call(r),r.host=jt.call(r),r.hostname=Rt.call(r),r.port=Pt.call(r),r.pathname=Ct.call(r),r.search=It.call(r),r.searchParams=Mt.call(r),r.hash=Ut.call(r))},Tt=kt.prototype,Ot=function(){var t=T(this),e=t.scheme,n=t.username,r=t.password,o=t.host,i=t.port,a=t.path,u=t.query,s=t.fragment,c=e+":";return null!==o?(c+="//",J(t)&&(c+=n+(r?":"+r:"")+"@"),c+=B(o),null!==i&&(c+=":"+i)):"file"==e&&(c+="//"),c+=t.cannotBeABaseURL?a[0]:a.length?"/"+a.join("/"):"",null!==u&&(c+="?"+u),null!==s&&(c+="#"+s),c},St=function(){var t=T(this),e=t.scheme,n=t.port;if("blob"==e)try{return new kt(e.path[0]).origin}catch(t){return"null"}return"file"!=e&&G(t)?e+"://"+B(t.host)+(null!==n?":"+n:""):"null"},_t=function(){return T(this).scheme+":"},Et=function(){return T(this).username},At=function(){return T(this).password},jt=function(){var t=T(this),e=t.host,n=t.port;return null===e?"":null===n?B(e):B(e)+":"+n},Rt=function(){var t=T(this).host;return null===t?"":B(t)},Pt=function(){var t=T(this).port;return null===t?"":String(t)},Ct=function(){var t=T(this),e=t.path;return t.cannotBeABaseURL?e[0]:e.length?"/"+e.join("/"):""},It=function(){var t=T(this).query;return t?"?"+t:""},Mt=function(){return T(this).searchParams},Ut=function(){var t=T(this).fragment;return t?"#"+t:""},Lt=function(t,e){return{get:t,set:e,configurable:!0,enumerable:!0}};if(i&&s(Tt,{href:Lt(Ot,(function(t){var e=T(this),n=String(t),r=xt(e,n);if(r)throw TypeError(r);x(e.searchParams).updateSearchParams(e.query)})),origin:Lt(St),protocol:Lt(_t,(function(t){var e=T(this);xt(e,String(t)+":",tt)})),username:Lt(Et,(function(t){var e=T(this),n=p(String(t));if(!W(e)){e.username="";for(var r=0;r<n.length;r++)e.username+=Y(n[r],V)}})),password:Lt(At,(function(t){var e=T(this),n=p(String(t));if(!W(e)){e.password="";for(var r=0;r<n.length;r++)e.password+=Y(n[r],V)}})),host:Lt(jt,(function(t){var e=T(this);e.cannotBeABaseURL||xt(e,String(t),ft)})),hostname:Lt(Rt,(function(t){var e=T(this);e.cannotBeABaseURL||xt(e,String(t),lt)})),port:Lt(Pt,(function(t){var e=T(this);W(e)||(""==(t=String(t))?e.port=null:xt(e,t,ht))})),pathname:Lt(Ct,(function(t){var e=T(this);e.cannotBeABaseURL||(e.path=[],xt(e,t+"",yt))})),search:Lt(It,(function(t){var e=T(this);""==(t=String(t))?e.query=null:("?"==t.charAt(0)&&(t=t.slice(1)),e.query="",xt(e,t,bt)),x(e.searchParams).updateSearchParams(e.query)})),searchParams:Lt(Mt),hash:Lt(Ut,(function(t){var e=T(this);""!=(t=String(t))?("#"==t.charAt(0)&&(t=t.slice(1)),e.fragment="",xt(e,t,wt)):e.fragment=null}))}),c(Tt,"toJSON",(function(){return Ot.call(this)}),{enumerable:!0}),c(Tt,"toString",(function(){return Ot.call(this)}),{enumerable:!0}),b){var Ft=b.createObjectURL,Nt=b.revokeObjectURL;Ft&&c(kt,"createObjectURL",(function(t){return Ft.apply(b,arguments)})),Nt&&c(kt,"revokeObjectURL",(function(t){return Nt.apply(b,arguments)}))}y(kt,"URL"),o({global:!0,forced:!a,sham:!i},{URL:kt})},function(t,e,n){"use strict";var r=n(19),o=n(16),i=n(53),a=n(106),u=n(68),s=n(32),c=n(89),f=Object.assign,l=Object.defineProperty;t.exports=!f||o((function(){if(r&&1!==f({b:1},f(l({},"a",{enumerable:!0,get:function(){l(this,"b",{value:3,enumerable:!1})}}),{b:2})).b)return!0;var t={},e={},n=Symbol();return t[n]=7,"abcdefghijklmnopqrst".split("").forEach((function(t){e[t]=t})),7!=f({},t)[n]||"abcdefghijklmnopqrst"!=i(f({},e)).join("")}))?function(t,e){for(var n=s(t),o=arguments.length,f=1,l=a.f,h=u.f;o>f;)for(var p,d=c(arguments[f++]),v=l?i(d).concat(l(d)):i(d),y=v.length,g=0;y>g;)p=v[g++],r&&!h.call(d,p)||(n[p]=d[p]);return n}:f},function(t,e,n){var r=n(20),o=n(150);t.exports=function(t,e,n,i){try{return i?e(r(n)[0],n[1]):e(n)}catch(e){throw o(t),e}}},function(t,e,n){"use strict";var r=/[^\0-\u007E]/,o=/[.\u3002\uFF0E\uFF61]/g,i="Overflow: input needs wider integers to process",a=Math.floor,u=String.fromCharCode,s=function(t){return t+22+75*(t<26)},c=function(t,e,n){var r=0;for(t=n?a(t/700):t>>1,t+=a(t/e);t>455;r+=36)t=a(t/35);return a(r+36*t/(t+38))},f=function(t){var e,n,r=[],o=(t=function(t){for(var e=[],n=0,r=t.length;n<r;){var o=t.charCodeAt(n++);if(o>=55296&&o<=56319&&n<r){var i=t.charCodeAt(n++);56320==(64512&i)?e.push(((1023&o)<<10)+(1023&i)+65536):(e.push(o),n--)}else e.push(o)}return e}(t)).length,f=128,l=0,h=72;for(e=0;e<t.length;e++)(n=t[e])<128&&r.push(u(n));var p=r.length,d=p;for(p&&r.push("-");d<o;){var v=2147483647;for(e=0;e<t.length;e++)(n=t[e])>=f&&n<v&&(v=n);var y=d+1;if(v-f>a((2147483647-l)/y))throw RangeError(i);for(l+=(v-f)*y,f=v,e=0;e<t.length;e++){if((n=t[e])<f&&++l>2147483647)throw RangeError(i);if(n==f){for(var g=l,m=36;;m+=36){var b=m<=h?1:m>=h+26?26:m-h;if(g<b)break;var w=g-b,x=36-b;r.push(u(s(b+w%x))),g=a(w/x)}r.push(u(s(g))),h=c(l,y,d==p),l=0,++d}}++l,++f}return r.join("")};t.exports=function(t){var e,n,i=[],a=t.toLowerCase().replace(o,".").split(".");for(e=0;e<a.length;e++)n=a[e],i.push(r.test(n)?"xn--"+f(n):n);return i.join(".")}},function(t,e){},function(t,e,n){"use strict";var r=n(257),o=n(27),i=n(49),a=n(185),u=n(80),s=n(77),c=n(280),f=n(282),l=n(283),h=n(81)("replace"),p=Math.max,d=Math.min,v="$0"==="a".replace(/./,"$0"),y=!!/./[h]&&""===/./[h]("a","$0");r("replace",(function(t,e,n){var r=y?"$":"$0";return[function(t,n){var r=s(this),o=null==t?void 0:t[h];return void 0!==o?o.call(t,r,n):e.call(String(r),t,n)},function(t,o){if("string"==typeof o&&-1===o.indexOf(r)&&-1===o.indexOf("$<")){var s=n(e,this,t,o);if(s.done)return s.value}var h=i(this),v=String(t),y="function"==typeof o;y||(o=String(o));var g=h.global;if(g){var m=h.unicode;h.lastIndex=0}for(var b=[];;){var w=l(h,v);if(null===w)break;if(b.push(w),!g)break;""===String(w[0])&&(h.lastIndex=c(v,a(h.lastIndex),m))}for(var x,k="",T=0,O=0;O<b.length;O++){w=b[O];for(var S=String(w[0]),_=p(d(u(w.index),v.length),0),E=[],A=1;A<w.length;A++)E.push(void 0===(x=w[A])?x:String(x));var j=w.groups;if(y){var R=[S].concat(E,_,v);void 0!==j&&R.push(j);var P=String(o.apply(void 0,R))}else P=f(S,v,_,E,j,o);_>=T&&(k+=v.slice(T,_)+P,T=_+S.length)}return k+v.slice(T)}]}),!!o((function(){var t=/./;return t.exec=function(){var t=[];return t.groups={a:"7"},t},"7"!=="".replace(t,"$<a>")}))||!v||y)},function(t,e,n){"use strict";n(171);var r=n(108),o=n(115),i=n(27),a=n(81),u=n(60),s=a("species"),c=RegExp.prototype;t.exports=function(t,e,n,f){var l=a(t),h=!i((function(){var e={};return e[l]=function(){return 7},7!=""[t](e)})),p=h&&!i((function(){var e=!1,n=/a/;return"split"===t&&((n={}).constructor={},n.constructor[s]=function(){return n},n.flags="",n[l]=/./[l]),n.exec=function(){return e=!0,null},n[l](""),!e}));if(!h||!p||n){var d=/./[l],v=e(l,""[t],(function(t,e,n,r,i){var a=e.exec;return a===o||a===c.exec?h&&!i?{done:!0,value:d.call(e,n,r)}:{done:!0,value:t.call(n,e,r)}:{done:!1}}));r(String.prototype,t,v[0]),r(c,l,v[1])}f&&u(c[l],"sham",!0)}},function(t,e,n){"use strict";var r={}.propertyIsEnumerable,o=Object.getOwnPropertyDescriptor,i=o&&!r.call({1:2},1);e.f=i?function(t){var e=o(this,t);return!!e&&e.enumerable}:r},function(t,e,n){var r=n(26),o=n(180),i=r.WeakMap;t.exports="function"==typeof i&&/native code/.test(o(i))},function(t,e){t.exports=!1},function(t,e,n){var r=n(48),o=n(262),i=n(173),a=n(79);t.exports=function(t,e){for(var n=o(e),u=a.f,s=i.f,c=0;c<n.length;c++){var f=n[c];r(t,f)||u(t,f,s(e,f))}}},function(t,e,n){var r=n(113),o=n(264),i=n(267),a=n(49);t.exports=r("Reflect","ownKeys")||function(t){var e=o.f(a(t)),n=i.f;return n?e.concat(n(t)):e}},function(t,e,n){var r=n(26);t.exports=r},function(t,e,n){var r=n(184),o=n(114).concat("length","prototype");e.f=Object.getOwnPropertyNames||function(t){return r(t,o)}},function(t,e,n){var r=n(76),o=n(185),i=n(266),a=function(t){return function(e,n,a){var u,s=r(e),c=o(s.length),f=i(a,c);if(t&&n!=n){for(;c>f;)if((u=s[f++])!=u)return!0}else for(;c>f;f++)if((t||f in s)&&s[f]===n)return t||f||0;return!t&&-1}};t.exports={includes:a(!0),indexOf:a(!1)}},function(t,e,n){var r=n(80),o=Math.max,i=Math.min;t.exports=function(t,e){var n=r(t);return n<0?o(n+e,0):i(n,e)}},function(t,e){e.f=Object.getOwnPropertySymbols},function(t,e,n){var r=n(27),o=/#|\.prototype\./,i=function(t,e){var n=u[a(t)];return n==c||n!=s&&("function"==typeof e?r(e):!!e)},a=i.normalize=function(t){return String(t).replace(o,".").toLowerCase()},u=i.data={},s=i.NATIVE="N",c=i.POLYFILL="P";t.exports=i},function(t,e,n){"use strict";var r=n(49);t.exports=function(){var t=r(this),e="";return t.global&&(e+="g"),t.ignoreCase&&(e+="i"),t.multiline&&(e+="m"),t.dotAll&&(e+="s"),t.unicode&&(e+="u"),t.sticky&&(e+="y"),e}},function(t,e,n){var r=n(27),o=function(t,e){return RegExp(t,e)};e.UNSUPPORTED_Y=r((function(){var t=o("a","y");return t.lastIndex=2,null!=t.exec("abcd")})),e.BROKEN_CARET=r((function(){var t=o("^r","gy");return t.lastIndex=2,null!=t.exec("str")}))},function(t,e,n){var r,o=n(49),i=n(272),a=n(114),u=n(112),s=n(274),c=n(179),f=n(182)("IE_PROTO"),l=function(){},h=function(t){return"<script>"+t+"<\/script>"},p=function(){try{r=document.domain&&new ActiveXObject("htmlfile")}catch(t){}var t,e;p=r?function(t){t.write(h("")),t.close();var e=t.parentWindow.Object;return t=null,e}(r):((e=c("iframe")).style.display="none",s.appendChild(e),e.src=String("javascript:"),(t=e.contentWindow.document).open(),t.write(h("document.F=Object")),t.close(),t.F);for(var n=a.length;n--;)delete p.prototype[a[n]];return p()};u[f]=!0,t.exports=Object.create||function(t,e){var n;return null!==t?(l.prototype=o(t),n=new l,l.prototype=null,n[f]=t):n=p(),void 0===e?n:i(n,e)}},function(t,e,n){var r=n(47),o=n(79),i=n(49),a=n(273);t.exports=r?Object.defineProperties:function(t,e){i(t);for(var n,r=a(e),u=r.length,s=0;u>s;)o.f(t,n=r[s++],e[n]);return t}},function(t,e,n){var r=n(184),o=n(114);t.exports=Object.keys||function(t){return r(t,o)}},function(t,e,n){var r=n(113);t.exports=r("document","documentElement")},function(t,e,n){var r=n(27);t.exports=r((function(){var t=RegExp(".","string".charAt(0));return!(t.dotAll&&t.exec("\n")&&"s"===t.flags)}))},function(t,e,n){var r=n(27);t.exports=r((function(){var t=RegExp("(?<a>b)","string".charAt(5));return"b"!==t.exec("b").groups.a||"bc"!=="b".replace(t,"$<a>c")}))},function(t,e,n){var r,o,i=n(26),a=n(278),u=i.process,s=u&&u.versions,c=s&&s.v8;c?o=(r=c.split("."))[0]<4?1:r[0]+r[1]:a&&(!(r=a.match(/Edge\/(\d+)/))||r[1]>=74)&&(r=a.match(/Chrome\/(\d+)/))&&(o=r[1]),t.exports=o&&+o},function(t,e,n){var r=n(113);t.exports=r("navigator","userAgent")||""},function(t,e,n){var r=n(186);t.exports=r&&!Symbol.sham&&"symbol"==typeof Symbol.iterator},function(t,e,n){"use strict";var r=n(281).charAt;t.exports=function(t,e,n){return e+(n?r(t,e).length:1)}},function(t,e,n){var r=n(80),o=n(77),i=function(t){return function(e,n){var i,a,u=String(o(e)),s=r(n),c=u.length;return s<0||s>=c?t?"":void 0:(i=u.charCodeAt(s))<55296||i>56319||s+1===c||(a=u.charCodeAt(s+1))<56320||a>57343?t?u.charAt(s):i:t?u.slice(s,s+2):a-56320+(i-55296<<10)+65536}};t.exports={codeAt:i(!1),charAt:i(!0)}},function(t,e,n){var r=n(177),o=Math.floor,i="".replace,a=/\$([$&'`]|\d{1,2}|<[^>]*>)/g,u=/\$([$&'`]|\d{1,2})/g;t.exports=function(t,e,n,s,c,f){var l=n+t.length,h=s.length,p=u;return void 0!==c&&(c=r(c),p=a),i.call(f,p,(function(r,i){var a;switch(i.charAt(0)){case"$":return"$";case"&":return t;case"`":return e.slice(0,n);case"'":return e.slice(l);case"<":a=c[i.slice(1,-1)];break;default:var u=+i;if(0===u)return r;if(u>h){var f=o(u/10);return 0===f?r:f<=h?void 0===s[f-1]?i.charAt(1):s[f-1]+i.charAt(1):r}a=s[u-1]}return void 0===a?"":a}))}},function(t,e,n){var r=n(107),o=n(115);t.exports=function(t,e){var n=t.exec;if("function"==typeof n){var i=n.call(t,e);if("object"!=typeof i)throw TypeError("RegExp exec method returned something other than an Object or null");return i}if("RegExp"!==r(t))throw TypeError("RegExp#exec called on incompatible receiver");return o.call(t,e)}},function(t,e,n){t.exports=n(285)},function(t,e,n){var r=n(144);n(286),n(287),n(288),n(289),t.exports=r},function(t,e,n){n(145)},function(t,e,n){n(160)},function(t,e,n){"use strict";var r=n(9),o=n(57),i=n(75);r({target:"Promise",stat:!0},{try:function(t){var e=o.f(this),n=i(t);return(n.error?e.reject:e.resolve)(n.value),e.promise}})},function(t,e,n){n(161)},function(t,e,n){"use strict";var r=n(21),o=n(25);r(e,"__esModule",{value:!0}),e.default=void 0;var i=o(n(42)),a=o(n(50)),u=o(n(52)),s=o(n(187)),c=n(82),f=function(t){return t.json().then((function(t){return u.default.reject(t)}))},l=function(){var t=(0,a.default)(i.default.mark((function t(e){var n,r,o,a,u,l,h;return i.default.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return n=e.domain,r=e.interactionHandle,o=e.stateHandle,a=e.version,u="".concat(n,"/idp/idx/introspect"),l=o?{stateToken:o}:{interactionHandle:r},h={"content-type":"application/ion+json; okta-version=".concat(a),accept:"application/ion+json; okta-version=".concat(a)},t.abrupt("return",(0,c.request)(u,{headers:h,body:(0,s.default)(l)}).then((function(t){return t.ok?t.json():f(t)})));case 5:case"end":return t.stop()}}),t)})));return function(e){return t.apply(this,arguments)}}();e.default=l},function(t,e,n){var r=n(292);t.exports=r},function(t,e,n){n(293);var r=n(17);r.JSON||(r.JSON={stringify:JSON.stringify}),t.exports=function(t,e,n){return r.JSON.stringify.apply(null,arguments)}},function(t,e,n){var r=n(9),o=n(30),i=n(16),a=o("JSON","stringify"),u=/[\uD800-\uDFFF]/g,s=/^[\uD800-\uDBFF]$/,c=/^[\uDC00-\uDFFF]$/,f=function(t,e,n){var r=n.charAt(e-1),o=n.charAt(e+1);return s.test(t)&&!c.test(o)||c.test(t)&&!s.test(r)?"\\u"+t.charCodeAt(0).toString(16):t},l=i((function(){return'"\\udf06\\ud834"'!==a("\udf06\ud834")||'"\\udead"'!==a("\udead")}));a&&r({target:"JSON",stat:!0,forced:l},{stringify:function(t,e,n){var r=a.apply(null,arguments);return"string"==typeof r?r.replace(u,f):r}})},function(t,e,n){var r=n(188);t.exports=r},function(t,e,n){var r=n(9),o=n(32),i=n(53);r({target:"Object",stat:!0,forced:n(16)((function(){i(1)}))},{keys:function(t){return i(o(t))}})},function(t,e,n){var r=n(189);t.exports=r},function(t,e,n){var r=n(28),o=n(117).f,i={}.toString,a="object"==typeof window&&window&&Object.getOwnPropertyNames?Object.getOwnPropertyNames(window):[];t.exports.f=function(t){return a&&"[object Window]"==i.call(t)?function(t){try{return o(t)}catch(t){return a.slice()}}(t):o(r(t))}},function(t,e,n){var r=n(299);t.exports=r},function(t,e,n){var r=n(300),o=Array.prototype;t.exports=function(t){var e=t.filter;return t===o||t instanceof Array&&e===o.filter?r:e}},function(t,e,n){n(301);var r=n(36);t.exports=r("Array").filter},function(t,e,n){"use strict";var r=n(9),o=n(62).filter;r({target:"Array",proto:!0,forced:!n(85)("filter")},{filter:function(t){return o(this,t,arguments.length>1?arguments[1]:void 0)}})},function(t,e,n){var r=n(303);t.exports=r},function(t,e,n){n(304);var r=n(17).Object,o=t.exports=function(t,e){return r.getOwnPropertyDescriptor(t,e)};r.getOwnPropertyDescriptor.sham&&(o.sham=!0)},function(t,e,n){var r=n(9),o=n(16),i=n(28),a=n(51).f,u=n(19),s=o((function(){a(1)}));r({target:"Object",stat:!0,forced:!u||s,sham:!u},{getOwnPropertyDescriptor:function(t,e){return a(i(t),e)}})},function(t,e,n){n(58);var r=n(306),o=n(56),i=Array.prototype,a={DOMTokenList:!0,NodeList:!0};t.exports=function(t){var e=t.forEach;return t===i||t instanceof Array&&e===i.forEach||a.hasOwnProperty(o(t))?r:e}},function(t,e,n){var r=n(307);t.exports=r},function(t,e,n){n(308);var r=n(36);t.exports=r("Array").forEach},function(t,e,n){"use strict";var r=n(9),o=n(309);r({target:"Array",proto:!0,forced:[].forEach!=o},{forEach:o})},function(t,e,n){"use strict";var r=n(62).forEach,o=n(143)("forEach");t.exports=o?[].forEach:function(t){return r(this,t,arguments.length>1?arguments[1]:void 0)}},function(t,e,n){var r=n(311);t.exports=r},function(t,e,n){n(312);var r=n(17);t.exports=r.Object.getOwnPropertyDescriptors},function(t,e,n){var r=n(9),o=n(19),i=n(313),a=n(28),u=n(51),s=n(59);r({target:"Object",stat:!0,sham:!o},{getOwnPropertyDescriptors:function(t){for(var e,n,r=a(t),o=u.f,c=i(r),f={},l=0;c.length>l;)void 0!==(n=o(r,e=c[l++]))&&s(f,e,n);return f}})},function(t,e,n){var r=n(30),o=n(117),i=n(106),a=n(20);t.exports=r("Reflect","ownKeys")||function(t){var e=o.f(a(t)),n=i.f;return n?e.concat(n(t)):e}},function(t,e,n){var r=n(315);t.exports=r},function(t,e,n){n(316);var r=n(17).Object,o=t.exports=function(t,e){return r.defineProperties(t,e)};r.defineProperties.sham&&(o.sham=!0)},function(t,e,n){var r=n(9),o=n(19);r({target:"Object",stat:!0,forced:!o,sham:!o},{defineProperties:n(98)})},function(t,e,n){t.exports=n(318)},function(t,e,n){var r=n(137);t.exports=r},function(t,e,n){"use strict";n(21)(e,"__esModule",{value:!0}),e.userAgentHeaders=e.getUserAgent=void 0;var r=function(){return"okta-idx-js/".concat("0.19.0")};e.getUserAgent=r,e.userAgentHeaders=function(){return{"X-Okta-User-Agent-Extended":r()}}},function(t,e,n){"use strict";var r=n(21),o=n(25);r(e,"__esModule",{value:!0}),e.default=void 0;var i=o(n(42));n(321);var a=o(n(192)),u=o(n(50)),s=o(n(52)),c=o(n(125)),f=o(n(203)),l=o(n(204)),h=n(82),p=function(t){return t.json().then((function(t){return s.default.reject(t)}))},d=function(){var t=(0,u.default)(i.default.mark((function t(e){var n,r,o,u,s,d,v,y,g,m,b,w;return i.default.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return r=e.clientId,o=e.baseUrl,u=e.scopes,s=void 0===u?["openid","email"]:u,d=e.redirectUri,v=e.codeChallenge,y=e.codeChallengeMethod,g=e.state,m="".concat(o,"/v1/interact"),b=(0,c.default)(n=(0,f.default)({client_id:r,scope:s.join(" "),redirect_uri:d,code_challenge:v,code_challenge_method:y,state:g})).call(n,(function(t){var e,n=(0,a.default)(t,2),r=n[0],o=n[1];return(0,l.default)(e="".concat(r,"=")).call(e,encodeURIComponent(o))})).join("&"),w={"content-type":"application/x-www-form-urlencoded"},t.abrupt("return",(0,h.request)(m,{headers:w,body:b}).then((function(t){return t.ok?t.json():p(t)})).then((function(t){return t.interaction_handle})));case 5:case"end":return t.stop()}}),t)})));return function(e){return t.apply(this,arguments)}}();e.default=d},function(t,e,n){"use strict";var r=n(172),o=n(175),i=n(76),a=n(322),u=[].join,s=o!=Object,c=a("join",",");r({target:"Array",proto:!0,forced:s||!c},{join:function(t){return u.call(i(this),void 0===t?",":t)}})},function(t,e,n){"use strict";var r=n(27);t.exports=function(t,e){var n=[][t];return!!n&&r((function(){n.call(null,e||function(){throw 1},1)}))}},function(t,e,n){var r=n(193);t.exports=function(t){if(r(t))return t},t.exports.default=t.exports,t.exports.__esModule=!0},function(t,e,n){var r=n(194);t.exports=r},function(t,e,n){n(9)({target:"Array",stat:!0},{isArray:n(61)})},function(t,e,n){var r=n(123),o=n(124);t.exports=function(t,e){var n=null==t?null:void 0!==r&&o(t)||t["@@iterator"];if(null!=n){var i,a,u=[],s=!0,c=!1;try{for(n=n.call(t);!(s=(i=n.next()).done)&&(u.push(i.value),!e||u.length!==e);s=!0);}catch(t){c=!0,a=t}finally{try{s||null==n.return||n.return()}finally{if(c)throw a}}return u}},t.exports.default=t.exports,t.exports.__esModule=!0},function(t,e,n){var r=n(195);n(344),n(345),n(346),n(347),n(348),n(349),n(350),t.exports=r},function(t,e,n){n(12)("asyncIterator")},function(t,e){},function(t,e,n){n(12)("hasInstance")},function(t,e,n){n(12)("isConcatSpreadable")},function(t,e,n){n(12)("match")},function(t,e,n){n(12)("matchAll")},function(t,e,n){n(12)("replace")},function(t,e,n){n(12)("search")},function(t,e,n){n(12)("species")},function(t,e,n){n(12)("split")},function(t,e,n){n(12)("toPrimitive")},function(t,e,n){n(12)("toStringTag")},function(t,e,n){n(12)("unscopables")},function(t,e,n){var r=n(14);n(39)(r.JSON,"JSON",!0)},function(t,e){},function(t,e){},function(t,e,n){n(12)("asyncDispose")},function(t,e,n){n(12)("dispose")},function(t,e,n){n(12)("matcher")},function(t,e,n){n(12)("metadata")},function(t,e,n){n(12)("observable")},function(t,e,n){n(12)("patternMatch")},function(t,e,n){n(12)("replaceAll")},function(t,e,n){n(58),n(46);var r=n(55);t.exports=r},function(t,e,n){t.exports=n(353)},function(t,e,n){var r=n(199);t.exports=r},function(t,e,n){n(355);var r=n(36);t.exports=r("Array").slice},function(t,e,n){"use strict";var r=n(9),o=n(22),i=n(61),a=n(142),u=n(43),s=n(28),c=n(59),f=n(13),l=n(85)("slice"),h=f("species"),p=[].slice,d=Math.max;r({target:"Array",proto:!0,forced:!l},{slice:function(t,e){var n,r,f,l=s(this),v=u(l.length),y=a(t,v),g=a(void 0===e?v:e,v);if(i(l)&&("function"!=typeof(n=l.constructor)||n!==Array&&!i(n.prototype)?o(n)&&null===(n=n[h])&&(n=void 0):n=void 0,n===Array||void 0===n))return p.call(l,y,g);for(r=new(void 0===n?Array:n)(d(g-y,0)),f=0;y<g;y++,f++)y in l&&c(r,f,l[y]);return r.length=f,r}})},function(t,e,n){var r=n(201);t.exports=r},function(t,e,n){var r=n(9),o=n(168);r({target:"Array",stat:!0,forced:!n(155)((function(t){Array.from(t)}))},{from:o})},function(t,e){t.exports=function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")},t.exports.default=t.exports,t.exports.__esModule=!0},function(t,e,n){var r=n(360);t.exports=r},function(t,e,n){var r=n(361),o=Array.prototype;t.exports=function(t){var e=t.map;return t===o||t instanceof Array&&e===o.map?r:e}},function(t,e,n){n(362);var r=n(36);t.exports=r("Array").map},function(t,e,n){"use strict";var r=n(9),o=n(62).map;r({target:"Array",proto:!0,forced:!n(85)("map")},{map:function(t){return o(this,t,arguments.length>1?arguments[1]:void 0)}})},function(t,e,n){var r=n(364);t.exports=r},function(t,e,n){n(365);var r=n(17);t.exports=r.Object.entries},function(t,e,n){var r=n(9),o=n(366).entries;r({target:"Object",stat:!0},{entries:function(t){return o(t)}})},function(t,e,n){var r=n(19),o=n(53),i=n(28),a=n(68).f,u=function(t){return function(e){for(var n,u=i(e),s=o(u),c=s.length,f=0,l=[];c>f;)n=s[f++],r&&!a.call(u,n)||l.push(t?[n,u[n]]:u[n]);return l}};t.exports={entries:u(!0),values:u(!1)}},function(t,e,n){var r=n(368);t.exports=r},function(t,e,n){var r=n(369),o=Array.prototype;t.exports=function(t){var e=t.concat;return t===o||t instanceof Array&&e===o.concat?r:e}},function(t,e,n){n(196);var r=n(36);t.exports=r("Array").concat},function(t,e,n){"use strict";var r=n(21),o=n(25);r(e,"__esModule",{value:!0}),e.default=void 0;var i=o(n(371));e.default=function(t){switch(t){case"1.0.0":return i.default;case void 0:case null:throw new Error("Api version is required");default:throw new Error("Unknown api version: ".concat(t,".  Use an exact semver version."))}}},function(t,e,n){"use strict";var r=n(21),o=n(25);r(e,"__esModule",{value:!0}),e.default=void 0;var i={makeIdxState:o(n(205)).default};e.default=i},function(t,e,n){t.exports=n(373)},function(t,e,n){var r=n(374);t.exports=r},function(t,e,n){var r=n(375),o=Array.prototype;t.exports=function(t){var e=t.find;return t===o||t instanceof Array&&e===o.find?r:e}},function(t,e,n){n(376);var r=n(36);t.exports=r("Array").find},function(t,e,n){"use strict";var r=n(9),o=n(62).find,i=n(166),a=!0;"find"in[]&&Array(1).find((function(){a=!1})),r({target:"Array",proto:!0,forced:a},{find:function(t){return o(this,t,arguments.length>1?arguments[1]:void 0)}}),i("find")},function(t,e,n){var r=n(378),o=n(379),i=n(198),a=n(380);t.exports=function(t){return r(t)||o(t)||i(t)||a()},t.exports.default=t.exports,t.exports.__esModule=!0},function(t,e,n){var r=n(193),o=n(202);t.exports=function(t){if(r(t))return o(t)},t.exports.default=t.exports,t.exports.__esModule=!0},function(t,e,n){var r=n(123),o=n(124),i=n(200);t.exports=function(t){if(void 0!==r&&null!=o(t)||null!=t["@@iterator"])return i(t)},t.exports.default=t.exports,t.exports.__esModule=!0},function(t,e){t.exports=function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")},t.exports.default=t.exports,t.exports.__esModule=!0},function(t,e,n){"use strict";var r=n(83),o=n(116),i=n(84),a=n(119),u=n(63),s=n(120),c=n(121),f=n(21),l=n(25);f(e,"__esModule",{value:!0}),e.parseIdxResponse=e.parseNonRemediations=void 0,n(64);var h,p=l(n(192)),d=l(n(122)),v=l(n(382)),y=l(n(389)),g=l(n(207)),m=l(n(125)),b=l(n(63)),w=l(n(84)),x=l(n(83)),k=l(n(203)),T=l(n(204)),O=l(n(126)),S=n(397),_=l(n(208)),E=n(410);function A(t,e){var n=r(t);if(o){var u=o(t);e&&(u=i(u).call(u,(function(e){return a(t,e).enumerable}))),n.push.apply(n,u)}return n}function j(t){for(var e=1;e<arguments.length;e++){var n,r=null!=arguments[e]?arguments[e]:{};if(e%2)u(n=A(Object(r),!0)).call(n,(function(e){(0,d.default)(t,e,r[e])}));else if(s)c(t,s(r));else{var o;u(o=A(Object(r))).call(o,(function(e){f(t,e,a(r,e))}))}}return t}var R=(0,g.default)((0,m.default)(h=["remediation","context"]).call(h,(function(t){return[t,!0]}))),P=function(t){var e,n,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},o={},i={};return(0,b.default)(e=(0,w.default)(n=(0,x.default)(t)).call(n,(function(t){return!R[t]}))).call(e,(function(e){var n;if("object"===(0,y.default)(t[e])&&t[e])if(t[e].rel)o[t[e].name]=(0,_.default)(t[e],r);else{var a=t[e],u=a.value,s=a.type,c=(0,v.default)(a,["value","type"]);i[e]=j({type:s},c),"object"===s?(i[e].value={},(0,b.default)(n=(0,k.default)(u)).call(n,(function(t){var n,a=(0,p.default)(t,2),u=a[0],s=a[1];s.rel?o[(0,T.default)(n="".concat(e,"-")).call(n,u.name||u)]=(0,_.default)(s,r):i[e].value[u]=s}))):i[e].value=u}else i[e]=t[e]})),{context:i,actions:o}};e.parseNonRemediations=P;var C=function t(e,n){var r;(0,b.default)(r=(0,x.default)(n)).call(r,(function(r){if("relatesTo"===r){var o=(0,O.default)(n[r])?n[r][0]:n[r];if("string"==typeof o){var i=(0,E.JSONPath)({path:o,json:e})[0];if(i)return void(n[r]=i)}}var a;(0,O.default)(n[r])&&(0,b.default)(a=n[r]).call(a,(function(n){return t(e,n)}))}))},I=function(t,e){var n=(0,S.generateRemediationFunctions)([t],e)[t.name];return j(j({},t),{},{action:n})};e.parseIdxResponse=function(t){var e,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},r=(null===(e=t.remediation)||void 0===e?void 0:e.value)||[];(0,b.default)(r).call(r,(function(e){return C(t,e)}));var o=(0,m.default)(r).call(r,(function(t){return I(t,n)})),i=P(t,n);return{remediations:o,context:i.context,actions:i.actions}}},function(t,e,n){var r=n(383),o=n(206),i=n(386);t.exports=function(t,e){if(null==t)return{};var n,a,u=i(t,e);if(r){var s=r(t);for(a=0;a<s.length;a++)n=s[a],o(e).call(e,n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(u[n]=t[n])}return u},t.exports.default=t.exports,t.exports.__esModule=!0},function(t,e,n){t.exports=n(384)},function(t,e,n){var r=n(189);t.exports=r},function(t,e,n){var r=n(140);t.exports=r},function(t,e,n){var r=n(387),o=n(206);t.exports=function(t,e){if(null==t)return{};var n,i,a={},u=r(t);for(i=0;i<u.length;i++)n=u[i],o(e).call(e,n)>=0||(a[n]=t[n]);return a},t.exports.default=t.exports,t.exports.__esModule=!0},function(t,e,n){t.exports=n(388)},function(t,e,n){var r=n(188);t.exports=r},function(t,e,n){var r=n(123),o=n(390);function i(e){return"function"==typeof r&&"symbol"==typeof o?(t.exports=i=function(t){return typeof t},t.exports.default=t.exports,t.exports.__esModule=!0):(t.exports=i=function(t){return t&&"function"==typeof r&&t.constructor===r&&t!==r.prototype?"symbol":typeof t},t.exports.default=t.exports,t.exports.__esModule=!0),i(e)}t.exports=i,t.exports.default=t.exports,t.exports.__esModule=!0},function(t,e,n){t.exports=n(391)},function(t,e,n){var r=n(392);t.exports=r},function(t,e,n){n(197),n(46),n(58);var r=n(118);t.exports=r.f("iterator")},function(t,e,n){var r=n(394);t.exports=r},function(t,e,n){n(105),n(395);var r=n(17);t.exports=r.Object.fromEntries},function(t,e,n){var r=n(9),o=n(54),i=n(59);r({target:"Object",stat:!0},{fromEntries:function(t){var e={};return o(t,(function(t,n){i(e,t,n)}),{AS_ENTRIES:!0}),e}})},function(t,e,n){var r=n(194);t.exports=r},function(t,e,n){"use strict";var r=n(21),o=n(25);r(e,"__esModule",{value:!0}),e.generateRemediationFunctions=void 0,n(64);var i=o(n(207)),a=o(n(125)),u=o(n(208));e.generateRemediationFunctions=function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return(0,i.default)((0,a.default)(t).call(t,(function(t){return[t.name,(0,u.default)(t,e)]})))}},function(t,e,n){"use strict";n(399);var r=n(402),o=n(404),i=n(406),a=n(124),u=n(126),s=n(408),c=n(21),f=n(25);c(e,"__esModule",{value:!0}),e.divideActionParamsByMutability=void 0;var l=f(n(126));function h(t,e){var n;if(void 0===i||null==a(t)){if(u(t)||(n=function(t,e){var n;if(t){if("string"==typeof t)return p(t,e);var i=r(n=Object.prototype.toString.call(t)).call(n,8,-1);return"Object"===i&&t.constructor&&(i=t.constructor.name),"Map"===i||"Set"===i?o(t):"Arguments"===i||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(i)?p(t,e):void 0}}(t))||e&&t&&"number"==typeof t.length){n&&(t=n);var c=0,f=function(){};return{s:f,n:function(){return c>=t.length?{done:!0}:{done:!1,value:t[c++]}},e:function(t){throw t},f}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var l,h=!0,d=!1;return{s:function(){n=s(t)},n:function(){var t=n.next();return h=t.done,t},e:function(t){d=!0,l=t},f:function(){try{h||null==n.return||n.return()}finally{if(d)throw l}}}}function p(t,e){(null==e||e>t.length)&&(e=t.length);for(var n=0,r=new Array(e);n<e;n++)r[n]=t[n];return r}n(64);var d=function(t){return!1!==t.mutable},v=function(t){var e={},n=[],r={};if(!t.value)return n.push(t),{defaultParamsForAction:e,neededParamsForAction:n,immutableParamsForAction:r};var o,i=h(t.value);try{for(i.s();!(o=i.n()).done;){var a,u,s=o.value;d(s)?(n.push(s),null!==(a=s.value)&&void 0!==a&&a&&(e[s.name]=s.value)):r[s.name]=null!==(u=s.value)&&void 0!==u?u:""}}catch(t){i.e(t)}finally{i.f()}return{defaultParamsForAction:e,neededParamsForAction:n,immutableParamsForAction:r}};e.divideActionParamsByMutability=function(t){var e,n=[],r={},o={},i=h(t=(0,l.default)(t)?t:[t]);try{for(i.s();!(e=i.n()).done;){var a=e.value,u=v(a),s=u.defaultParamsForAction,c=u.neededParamsForAction,f=u.immutableParamsForAction;n.push(c),r[a.name]=s,o[a.name]=f}}catch(t){i.e(t)}finally{i.f()}return{defaultParams:r,neededParams:n,immutableParams:o}}},function(t,e,n){var r=n(127),o=n(108),i=n(400);r||o(Object.prototype,"toString",i,{unsafe:!0})},function(t,e,n){"use strict";var r=n(127),o=n(401);t.exports=r?{}.toString:function(){return"[object "+o(this)+"]"}},function(t,e,n){var r=n(127),o=n(107),i=n(81)("toStringTag"),a="Arguments"==o(function(){return arguments}());t.exports=r?o:function(t){var e,n,r;return void 0===t?"Undefined":null===t?"Null":"string"==typeof(n=function(t,e){try{return t[e]}catch(t){}}(e=Object(t),i))?n:a?o(e):"Object"==(r=o(e))&&"function"==typeof e.callee?"Arguments":r}},function(t,e,n){t.exports=n(403)},function(t,e,n){var r=n(199);t.exports=r},function(t,e,n){t.exports=n(405)},function(t,e,n){var r=n(201);t.exports=r},function(t,e,n){t.exports=n(407)},function(t,e,n){var r=n(195);t.exports=r},function(t,e,n){t.exports=n(409)},function(t,e,n){n(58),n(46);var r=n(170);t.exports=r},function(t,e,n){"use strict";function r(t){return(r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function o(t){return(o=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function i(t,e){return(i=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function a(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}function u(t,e,n){return(u=a()?Reflect.construct:function(t,e,n){var r=[null];r.push.apply(r,e);var o=new(Function.bind.apply(t,r));return n&&i(o,n.prototype),o}).apply(null,arguments)}function s(t){var e="function"==typeof Map?new Map:void 0;return(s=function(t){if(null===t||(n=t,-1===Function.toString.call(n).indexOf("[native code]")))return t;var n;if("function"!=typeof t)throw new TypeError("Super expression must either be null or a function");if(void 0!==e){if(e.has(t))return e.get(t);e.set(t,r)}function r(){return u(t,arguments,o(this).constructor)}return r.prototype=Object.create(t.prototype,{constructor:{value:r,enumerable:!1,writable:!0,configurable:!0}}),i(r,t)})(t)}function c(t,e){return!e||"object"!=typeof e&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function f(t){return function(t){if(Array.isArray(t))return h(t)}(t)||function(t){if("undefined"!=typeof Symbol&&null!=t[Symbol.iterator]||null!=t["@@iterator"])return Array.from(t)}(t)||l(t)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function l(t,e){if(t){if("string"==typeof t)return h(t,e);var n=Object.prototype.toString.call(t).slice(8,-1);return"Object"===n&&t.constructor&&(n=t.constructor.name),"Map"===n||"Set"===n?Array.from(t):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?h(t,e):void 0}}function h(t,e){(null==e||e>t.length)&&(e=t.length);for(var n=0,r=new Array(e);n<e;n++)r[n]=t[n];return r}n.r(e),n.d(e,"JSONPath",(function(){return g}));var p=Object.prototype.hasOwnProperty;function d(t,e){return(t=t.slice()).push(e),t}function v(t,e){return(e=e.slice()).unshift(t),e}var y=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&i(t,e)}(u,t);var e,n,r=(e=u,n=a(),function(){var t,r=o(e);if(n){var i=o(this).constructor;t=Reflect.construct(r,arguments,i)}else t=r.apply(this,arguments);return c(this,t)});function u(t){var e;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,u),(e=r.call(this,'JSONPath should not be called with "new" (it prevents return of (unwrapped) scalar values)')).avoidNew=!0,e.value=t,e.name="NewError",e}return u}(s(Error));function g(t,e,n,o,i){if(!(this instanceof g))try{return new g(t,e,n,o,i)}catch(t){if(!t.avoidNew)throw t;return t.value}"string"==typeof t&&(i=o,o=n,n=e,e=t,t=null);var a=t&&"object"===r(t);if(t=t||{},this.json=t.json||n,this.path=t.path||e,this.resultType=t.resultType||"value",this.flatten=t.flatten||!1,this.wrap=!p.call(t,"wrap")||t.wrap,this.sandbox=t.sandbox||{},this.preventEval=t.preventEval||!1,this.parent=t.parent||null,this.parentProperty=t.parentProperty||null,this.callback=t.callback||o||null,this.otherTypeCallback=t.otherTypeCallback||i||function(){throw new TypeError("You must supply an otherTypeCallback callback option with the @other() operator.")},!1!==t.autostart){var u={path:a?t.path:e};a?"json"in t&&(u.json=t.json):u.json=n;var s=this.evaluate(u);if(!s||"object"!==r(s))throw new y(s);return s}}g.prototype.evaluate=function(t,e,n,o){var i=this,a=this.parent,u=this.parentProperty,s=this.flatten,c=this.wrap;if(this.currResultType=this.resultType,this.currPreventEval=this.preventEval,this.currSandbox=this.sandbox,n=n||this.callback,this.currOtherTypeCallback=o||this.otherTypeCallback,e=e||this.json,(t=t||this.path)&&"object"===r(t)&&!Array.isArray(t)){if(!t.path&&""!==t.path)throw new TypeError('You must supply a "path" property when providing an object argument to JSONPath.evaluate().');if(!p.call(t,"json"))throw new TypeError('You must supply a "json" property when providing an object argument to JSONPath.evaluate().');e=t.json,s=p.call(t,"flatten")?t.flatten:s,this.currResultType=p.call(t,"resultType")?t.resultType:this.currResultType,this.currSandbox=p.call(t,"sandbox")?t.sandbox:this.currSandbox,c=p.call(t,"wrap")?t.wrap:c,this.currPreventEval=p.call(t,"preventEval")?t.preventEval:this.currPreventEval,n=p.call(t,"callback")?t.callback:n,this.currOtherTypeCallback=p.call(t,"otherTypeCallback")?t.otherTypeCallback:this.currOtherTypeCallback,a=p.call(t,"parent")?t.parent:a,u=p.call(t,"parentProperty")?t.parentProperty:u,t=t.path}if(a=a||null,u=u||null,Array.isArray(t)&&(t=g.toPathString(t)),(t||""===t)&&e){var f=g.toPathArray(t);"$"===f[0]&&f.length>1&&f.shift(),this._hasParentSelector=null;var l=this._trace(f,e,["$"],a,u,n).filter((function(t){return t&&!t.isParentSelector}));return l.length?c||1!==l.length||l[0].hasArrExpr?l.reduce((function(t,e){var n=i._getPreferredOutput(e);return s&&Array.isArray(n)?t=t.concat(n):t.push(n),t}),[]):this._getPreferredOutput(l[0]):c?[]:void 0}},g.prototype._getPreferredOutput=function(t){var e=this.currResultType;switch(e){case"all":var n=Array.isArray(t.path)?t.path:g.toPathArray(t.path);return t.pointer=g.toPointer(n),t.path="string"==typeof t.path?t.path:g.toPathString(t.path),t;case"value":case"parent":case"parentProperty":return t[e];case"path":return g.toPathString(t[e]);case"pointer":return g.toPointer(t.path);default:throw new TypeError("Unknown result type")}},g.prototype._handleCallback=function(t,e,n){if(e){var r=this._getPreferredOutput(t);t.path="string"==typeof t.path?t.path:g.toPathString(t.path),e(r,n,t)}},g.prototype._trace=function(t,e,n,o,i,a,u,s){var c,f=this;if(!t.length)return c={path:n,value:e,parent:o,parentProperty:i,hasArrExpr:u},this._handleCallback(c,a,"value"),c;var h=t[0],y=t.slice(1),g=[];function m(t){Array.isArray(t)?t.forEach((function(t){g.push(t)})):g.push(t)}if(("string"!=typeof h||s)&&e&&p.call(e,h))m(this._trace(y,e[h],d(n,h),e,h,a,u));else if("*"===h)this._walk(h,y,e,n,o,i,a,(function(t,e,n,r,o,i,a,u){m(f._trace(v(t,n),r,o,i,a,u,!0,!0))}));else if(".."===h)m(this._trace(y,e,n,o,i,a,u)),this._walk(h,y,e,n,o,i,a,(function(t,e,n,o,i,a,u,s){"object"===r(o[t])&&m(f._trace(v(e,n),o[t],d(i,t),o,t,s,!0))}));else{if("^"===h)return this._hasParentSelector=!0,{path:n.slice(0,-1),expr:y,isParentSelector:!0};if("~"===h)return c={path:d(n,h),value:i,parent:o,parentProperty:null},this._handleCallback(c,a,"property"),c;if("$"===h)m(this._trace(y,e,n,null,null,a,u));else if(/^(\x2D?[0-9]*):(\x2D?[0-9]*):?([0-9]*)$/.test(h))m(this._slice(h,y,e,n,o,i,a));else if(0===h.indexOf("?(")){if(this.currPreventEval)throw new Error("Eval [?(expr)] prevented in JSONPath expression.");this._walk(h,y,e,n,o,i,a,(function(t,e,n,r,o,i,a,u){f._eval(e.replace(/^\?\(((?:[\0-\t\x0B\f\x0E-\u2027\u202A-\uD7FF\uE000-\uFFFF]|[\uD800-\uDBFF][\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF])*?)\)$/,"$1"),r[t],t,o,i,a)&&m(f._trace(v(t,n),r,o,i,a,u,!0))}))}else if("("===h[0]){if(this.currPreventEval)throw new Error("Eval [(expr)] prevented in JSONPath expression.");m(this._trace(v(this._eval(h,e,n[n.length-1],n.slice(0,-1),o,i),y),e,n,o,i,a,u))}else if("@"===h[0]){var b=!1,w=h.slice(1,-2);switch(w){case"scalar":e&&["object","function"].includes(r(e))||(b=!0);break;case"boolean":case"string":case"undefined":case"function":r(e)===w&&(b=!0);break;case"integer":!Number.isFinite(e)||e%1||(b=!0);break;case"number":Number.isFinite(e)&&(b=!0);break;case"nonFinite":"number"!=typeof e||Number.isFinite(e)||(b=!0);break;case"object":e&&r(e)===w&&(b=!0);break;case"array":Array.isArray(e)&&(b=!0);break;case"other":b=this.currOtherTypeCallback(e,n,o,i);break;case"null":null===e&&(b=!0);break;default:throw new TypeError("Unknown value type "+w)}if(b)return c={path:n,value:e,parent:o,parentProperty:i},this._handleCallback(c,a,"value"),c}else if("`"===h[0]&&e&&p.call(e,h.slice(1))){var x=h.slice(1);m(this._trace(y,e[x],d(n,x),e,x,a,u,!0))}else if(h.includes(",")){var k,T=function(t,e){var n="undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(!n){if(Array.isArray(t)||(n=l(t))){n&&(t=n);var r=0,o=function(){};return{s:o,n:function(){return r>=t.length?{done:!0}:{done:!1,value:t[r++]}},e:function(t){throw t},f:o}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var i,a=!0,u=!1;return{s:function(){n=n.call(t)},n:function(){var t=n.next();return a=t.done,t},e:function(t){u=!0,i=t},f:function(){try{a||null==n.return||n.return()}finally{if(u)throw i}}}}(h.split(","));try{for(T.s();!(k=T.n()).done;){var O=k.value;m(this._trace(v(O,y),e,n,o,i,a,!0))}}catch(t){T.e(t)}finally{T.f()}}else!s&&e&&p.call(e,h)&&m(this._trace(y,e[h],d(n,h),e,h,a,u,!0))}if(this._hasParentSelector)for(var S=0;S<g.length;S++){var _=g[S];if(_&&_.isParentSelector){var E=this._trace(_.expr,e,_.path,o,i,a,u);if(Array.isArray(E)){g[S]=E[0];for(var A=E.length,j=1;j<A;j++)S++,g.splice(S,0,E[j])}else g[S]=E}}return g},g.prototype._walk=function(t,e,n,o,i,a,u,s){if(Array.isArray(n))for(var c=n.length,f=0;f<c;f++)s(f,t,e,n,o,i,a,u);else n&&"object"===r(n)&&Object.keys(n).forEach((function(r){s(r,t,e,n,o,i,a,u)}))},g.prototype._slice=function(t,e,n,r,o,i,a){if(Array.isArray(n)){var u=n.length,s=t.split(":"),c=s[2]&&Number.parseInt(s[2])||1,f=s[0]&&Number.parseInt(s[0])||0,l=s[1]&&Number.parseInt(s[1])||u;f=f<0?Math.max(0,f+u):Math.min(u,f),l=l<0?Math.max(0,l+u):Math.min(u,l);for(var h=[],p=f;p<l;p+=c)this._trace(v(p,e),n,r,o,i,a,!0).forEach((function(t){h.push(t)}));return h}},g.prototype._eval=function(t,e,n,r,o,i){t.includes("@parentProperty")&&(this.currSandbox._$_parentProperty=i,t=t.replace(/@parentProperty/g,"_$_parentProperty")),t.includes("@parent")&&(this.currSandbox._$_parent=o,t=t.replace(/@parent/g,"_$_parent")),t.includes("@property")&&(this.currSandbox._$_property=n,t=t.replace(/@property/g,"_$_property")),t.includes("@path")&&(this.currSandbox._$_path=g.toPathString(r.concat([n])),t=t.replace(/@path/g,"_$_path")),t.includes("@root")&&(this.currSandbox._$_root=this.json,t=t.replace(/@root/g,"_$_root")),/@([\t-\r \)\.\[\xA0\u1680\u2000-\u200A\u2028\u2029\u202F\u205F\u3000\uFEFF])/.test(t)&&(this.currSandbox._$_v=e,t=t.replace(/@([\t-\r \)\.\[\xA0\u1680\u2000-\u200A\u2028\u2029\u202F\u205F\u3000\uFEFF])/g,"_$_v$1"));try{return this.vm.runInNewContext(t,this.currSandbox)}catch(e){throw console.log(e),new Error("jsonPath: "+e.message+": "+t)}},g.cache={},g.toPathString=function(t){for(var e=t,n=e.length,r="$",o=1;o<n;o++)/^(~|\^|@(?:[\0-\t\x0B\f\x0E-\u2027\u202A-\uD7FF\uE000-\uFFFF]|[\uD800-\uDBFF][\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF])*?\(\))$/.test(e[o])||(r+=/^[\*0-9]+$/.test(e[o])?"["+e[o]+"]":"['"+e[o]+"']");return r},g.toPointer=function(t){for(var e=t,n=e.length,r="",o=1;o<n;o++)/^(~|\^|@(?:[\0-\t\x0B\f\x0E-\u2027\u202A-\uD7FF\uE000-\uFFFF]|[\uD800-\uDBFF][\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF])*?\(\))$/.test(e[o])||(r+="/"+e[o].toString().replace(/~/g,"~0").replace(/\//g,"~1"));return r},g.toPathArray=function(t){var e=g.cache;if(e[t])return e[t].concat();var n=[],r=t.replace(/@(?:null|boolean|number|string|integer|undefined|nonFinite|scalar|array|object|function|other)\(\)/g,";$&;").replace(/['\[](\??\((?:[\0-\t\x0B\f\x0E-\u2027\u202A-\uD7FF\uE000-\uFFFF]|[\uD800-\uDBFF][\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF])*?\))['\]]/g,(function(t,e){return"[#"+(n.push(e)-1)+"]"})).replace(/\[["']((?:(?!['\]])[\s\S])*)["']\]/g,(function(t,e){return"['"+e.replace(/\./g,"%@%").replace(/~/g,"%%@@%%")+"']"})).replace(/~/g,";~;").replace(/["']?\.["']?(?!(?:(?!\[)[\s\S])*\])|\[["']?/g,";").replace(/%@%/g,".").replace(/%%@@%%/g,"~").replace(/(?:;)?(\^+)(?:;)?/g,(function(t,e){return";"+e.split("").join(";")+";"})).replace(/;;;|;;/g,";..;").replace(/;$|'?\]|'$/g,"").split(";").map((function(t){var e=t.match(/#([0-9]+)/);return e&&e[1]?n[e[1]]:t}));return e[t]=r,e[t].concat()},g.prototype.vm={runInNewContext:function(t,e){var n=Object.keys(e),r=[];!function(t,e,n){for(var r=t.length,o=0;o<r;o++)n(t[o])&&e.push(t.splice(o--,1)[0])}(n,r,(function(t){return"function"==typeof e[t]}));var o=n.map((function(t,n){return e[t]})),i=r.reduce((function(t,n){var r=e[n].toString();return/function/.test(r)||(r="function "+r),"var "+n+"="+r+";"+t}),"");/(["'])use strict\1/.test(t=i+t)||n.includes("arguments")||(t="var arguments = undefined;"+t);var a=(t=t.replace(/;[\t-\r \xA0\u1680\u2000-\u200A\u2028\u2029\u202F\u205F\u3000\uFEFF]*$/,"")).lastIndexOf(";"),s=a>-1?t.slice(0,a+1)+" return "+t.slice(a+1):" return "+t;return u(Function,f(n).concat([s])).apply(void 0,f(o))}}},function(t,e,n){var r=n(3);t.exports=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=r(t)););return t},t.exports.default=t.exports,t.exports.__esModule=!0},function(t,e){var n,r,o=t.exports={};function i(){throw new Error("setTimeout has not been defined")}function a(){throw new Error("clearTimeout has not been defined")}function u(t){if(n===setTimeout)return setTimeout(t,0);if((n===i||!n)&&setTimeout)return n=setTimeout,setTimeout(t,0);try{return n(t,0)}catch(e){try{return n.call(null,t,0)}catch(e){return n.call(this,t,0)}}}!function(){try{n="function"==typeof setTimeout?setTimeout:i}catch(t){n=i}try{r="function"==typeof clearTimeout?clearTimeout:a}catch(t){r=a}}();var s,c=[],f=!1,l=-1;function h(){f&&s&&(f=!1,s.length?c=s.concat(c):l=-1,c.length&&p())}function p(){if(!f){var t=u(h);f=!0;for(var e=c.length;e;){for(s=c,c=[];++l<e;)s&&s[l].run();l=-1,e=c.length}s=null,f=!1,function(t){if(r===clearTimeout)return clearTimeout(t);if((r===a||!r)&&clearTimeout)return r=clearTimeout,clearTimeout(t);try{r(t)}catch(e){try{return r.call(null,t)}catch(e){return r.call(this,t)}}}(t)}}function d(t,e){this.fun=t,this.array=e}function v(){}o.nextTick=function(t){var e=new Array(arguments.length-1);if(arguments.length>1)for(var n=1;n<arguments.length;n++)e[n-1]=arguments[n];c.push(new d(t,e)),1!==c.length||f||u(p)},d.prototype.run=function(){this.fun.apply(null,this.array)},o.title="browser",o.browser=!0,o.env={},o.argv=[],o.version="",o.versions={},o.on=v,o.addListener=v,o.once=v,o.off=v,o.removeListener=v,o.removeAllListeners=v,o.emit=v,o.prependListener=v,o.prependOnceListener=v,o.listeners=function(t){return[]},o.binding=function(t){throw new Error("process.binding is not supported")},o.cwd=function(){return"/"},o.chdir=function(t){throw new Error("process.chdir is not supported")},o.umask=function(){return 0}},function(t,e){function n(){}n.prototype={on:function(t,e,n){var r=this.e||(this.e={});return(r[t]||(r[t]=[])).push({fn:e,ctx:n}),this},once:function(t,e,n){var r=this;function o(){r.off(t,o),e.apply(n,arguments)}return o._=e,this.on(t,o,n)},emit:function(t){for(var e=[].slice.call(arguments,1),n=((this.e||(this.e={}))[t]||[]).slice(),r=0,o=n.length;r<o;r++)n[r].fn.apply(n[r].ctx,e);return this},off:function(t,e){var n=this.e||(this.e={}),r=n[t],o=[];if(r&&e)for(var i=0,a=r.length;i<a;i++)r[i].fn!==e&&r[i].fn._!==e&&o.push(r[i]);return o.length?n[t]=o:delete n[t],this}},t.exports=n},function(t,e,n){"use strict";n.r(e),n.d(e,"OktaAuth",(function(){return Sr})),n.d(e,"STATE_TOKEN_KEY_NAME",(function(){return h})),n.d(e,"DEFAULT_POLLING_DELAY",(function(){return p})),n.d(e,"DEFAULT_MAX_CLOCK_SKEW",(function(){return d})),n.d(e,"DEFAULT_CACHE_DURATION",(function(){return v})),n.d(e,"REDIRECT_OAUTH_PARAMS_NAME",(function(){return y})),n.d(e,"REDIRECT_STATE_COOKIE_NAME",(function(){return g})),n.d(e,"REDIRECT_NONCE_COOKIE_NAME",(function(){return m})),n.d(e,"TOKEN_STORAGE_NAME",(function(){return b})),n.d(e,"CACHE_STORAGE_NAME",(function(){return w})),n.d(e,"PKCE_STORAGE_NAME",(function(){return x})),n.d(e,"TRANSACTION_STORAGE_NAME",(function(){return k})),n.d(e,"IDX_RESPONSE_STORAGE_NAME",(function(){return T})),n.d(e,"ACCESS_TOKEN_STORAGE_KEY",(function(){return O})),n.d(e,"ID_TOKEN_STORAGE_KEY",(function(){return S})),n.d(e,"REFRESH_TOKEN_STORAGE_KEY",(function(){return _})),n.d(e,"REFERRER_PATH_STORAGE_KEY",(function(){return E})),n.d(e,"MIN_VERIFIER_LENGTH",(function(){return A})),n.d(e,"MAX_VERIFIER_LENGTH",(function(){return j})),n.d(e,"DEFAULT_CODE_CHALLENGE_METHOD",(function(){return R})),n.d(e,"IDX_API_VERSION",(function(){return P})),n.d(e,"isOAuthTransactionMeta",(function(){return Jt})),n.d(e,"isPKCETransactionMeta",(function(){return Wt})),n.d(e,"isIdxTransactionMeta",(function(){return $t})),n.d(e,"isCustomAuthTransactionMeta",(function(){return Xt})),n.d(e,"isTransactionMeta",(function(){return Zt})),n.d(e,"IdxStatus",(function(){return yt})),n.d(e,"IdxFeature",(function(){return gt})),n.d(e,"isToken",(function(){return Qt})),n.d(e,"isAccessToken",(function(){return te})),n.d(e,"isIDToken",(function(){return ee})),n.d(e,"isRefreshToken",(function(){return ne})),n.d(e,"transactionStatus",(function(){return J})),n.d(e,"resumeTransaction",(function(){return W})),n.d(e,"transactionExists",(function(){return X})),n.d(e,"postToTransaction",(function(){return Z})),n.d(e,"introspect",(function(){return $})),n.d(e,"AuthTransaction",(function(){return Y})),n.d(e,"getPollFn",(function(){return V})),n.d(e,"TransactionState",(function(){return Q})),n.d(e,"addStateToken",(function(){return q})),n.d(e,"getStateToken",(function(){return H})),n.d(e,"isAuthApiError",(function(){return ut.e})),n.d(e,"AuthApiError",(function(){return ut.a})),n.d(e,"AuthPollStopError",(function(){return ut.b})),n.d(e,"AuthSdkError",(function(){return ut.c})),n.d(e,"OAuthError",(function(){return ut.d})),n.d(e,"convertTokenParamsToOAuthParams",(function(){return st})),n.d(e,"buildAuthorizeParams",(function(){return ct})),n.d(e,"postToTokenEndpoint",(function(){return ht})),n.d(e,"postRefreshToken",(function(){return pt})),n.d(e,"getWellKnown",(function(){return dt})),n.d(e,"getKey",(function(){return vt})),n.d(e,"addListener",(function(){return bt})),n.d(e,"removeListener",(function(){return wt})),n.d(e,"loadFrame",(function(){return xt})),n.d(e,"loadPopup",(function(){return kt})),n.d(e,"addPostMessageListener",(function(){return Tt})),n.d(e,"getDefaultTokenParams",(function(){return Rt})),n.d(e,"isInteractionRequiredError",(function(){return Pt})),n.d(e,"isAuthorizationCodeError",(function(){return Ct})),n.d(e,"hasTokensInHash",(function(){return It})),n.d(e,"hasAuthorizationCode",(function(){return Mt})),n.d(e,"hasInteractionCode",(function(){return Ut})),n.d(e,"hasErrorInUrl",(function(){return Lt})),n.d(e,"isRedirectUri",(function(){return Ft})),n.d(e,"isCodeFlow",(function(){return Nt})),n.d(e,"getHashOrSearch",(function(){return Dt})),n.d(e,"isLoginRedirect",(function(){return Bt})),n.d(e,"isInteractionRequired",(function(){return qt})),n.d(e,"generateState",(function(){return Ot})),n.d(e,"generateNonce",(function(){return St})),n.d(e,"getOAuthBaseUrl",(function(){return Et})),n.d(e,"getOAuthDomain",(function(){return At})),n.d(e,"getOAuthUrls",(function(){return jt})),n.d(e,"pkce",(function(){return et})),n.d(e,"prepareTokenParams",(function(){return Ht})),n.d(e,"isSameRefreshToken",(function(){return Kt})),n.d(e,"isRefreshTokenError",(function(){return Vt})),n.d(e,"urlParamsToObject",(function(){return Yt})),n.d(e,"validateClaims",(function(){return zt})),n.d(e,"validateToken",(function(){return re})),n.d(e,"decodeToken",(function(){return oe})),n.d(e,"revokeToken",(function(){return ie})),n.d(e,"renewToken",(function(){return de})),n.d(e,"renewTokensWithRefresh",(function(){return le})),n.d(e,"renewTokens",(function(){return ve})),n.d(e,"verifyToken",(function(){return ue})),n.d(e,"getUserInfo",(function(){return ye})),n.d(e,"handleOAuthResponse",(function(){return se})),n.d(e,"exchangeCodeForTokens",(function(){return ae})),n.d(e,"getToken",(function(){return ce})),n.d(e,"getWithoutPrompt",(function(){return fe})),n.d(e,"getWithPopup",(function(){return ge})),n.d(e,"getWithRedirect",(function(){return me})),n.d(e,"parseFromUrl",(function(){return be})),n.d(e,"EVENT_EXPIRED",(function(){return je})),n.d(e,"EVENT_RENEWED",(function(){return Re})),n.d(e,"EVENT_ADDED",(function(){return Pe})),n.d(e,"EVENT_REMOVED",(function(){return Ce})),n.d(e,"EVENT_ERROR",(function(){return Ie})),n.d(e,"TokenManager",(function(){return Me})),n.d(e,"INITIAL_AUTH_STATE",(function(){return Ne})),n.d(e,"AuthStateManager",(function(){return Be})),n.d(e,"getNativeConsole",(function(){return U.k})),n.d(e,"getConsole",(function(){return U.i})),n.d(e,"warn",(function(){return U.y})),n.d(e,"deprecate",(function(){return U.d})),n.d(e,"deprecateWrap",(function(){return U.e})),n.d(e,"isoToUTCString",(function(){return U.r})),n.d(e,"genRandomString",(function(){return U.h})),n.d(e,"delay",(function(){return U.c})),n.d(e,"bind",(function(){return U.a})),n.d(e,"extend",(function(){return U.f})),n.d(e,"removeNils",(function(){return U.t})),n.d(e,"clone",(function(){return U.b})),n.d(e,"omit",(function(){return U.s})),n.d(e,"find",(function(){return U.g})),n.d(e,"getLink",(function(){return U.j})),n.d(e,"isString",(function(){return U.q})),n.d(e,"isObject",(function(){return U.o})),n.d(e,"isNumber",(function(){return U.n})),n.d(e,"isFunction",(function(){return U.m})),n.d(e,"isPromise",(function(){return U.p})),n.d(e,"isAbsoluteUrl",(function(){return U.l})),n.d(e,"toAbsoluteUrl",(function(){return U.v})),n.d(e,"toRelativeUrl",(function(){return U.x})),n.d(e,"toQueryString",(function(){return U.w})),n.d(e,"removeTrailingSlash",(function(){return U.u})),n.d(e,"crypto",(function(){return i}));var r={};n.r(r),n.d(r,"STATE_TOKEN_KEY_NAME",(function(){return h})),n.d(r,"DEFAULT_POLLING_DELAY",(function(){return p})),n.d(r,"DEFAULT_MAX_CLOCK_SKEW",(function(){return d})),n.d(r,"DEFAULT_CACHE_DURATION",(function(){return v})),n.d(r,"REDIRECT_OAUTH_PARAMS_NAME",(function(){return y})),n.d(r,"REDIRECT_STATE_COOKIE_NAME",(function(){return g})),n.d(r,"REDIRECT_NONCE_COOKIE_NAME",(function(){return m})),n.d(r,"TOKEN_STORAGE_NAME",(function(){return b})),n.d(r,"CACHE_STORAGE_NAME",(function(){return w})),n.d(r,"PKCE_STORAGE_NAME",(function(){return x})),n.d(r,"TRANSACTION_STORAGE_NAME",(function(){return k})),n.d(r,"IDX_RESPONSE_STORAGE_NAME",(function(){return T})),n.d(r,"ACCESS_TOKEN_STORAGE_KEY",(function(){return O})),n.d(r,"ID_TOKEN_STORAGE_KEY",(function(){return S})),n.d(r,"REFRESH_TOKEN_STORAGE_KEY",(function(){return _})),n.d(r,"REFERRER_PATH_STORAGE_KEY",(function(){return E})),n.d(r,"MIN_VERIFIER_LENGTH",(function(){return A})),n.d(r,"MAX_VERIFIER_LENGTH",(function(){return j})),n.d(r,"DEFAULT_CODE_CHALLENGE_METHOD",(function(){return R})),n.d(r,"IDX_API_VERSION",(function(){return P}));var o={};n.r(o),n.d(o,"Remediator",(function(){return En})),n.d(o,"EnrollAuthenticator",(function(){return Un})),n.d(o,"ChallengeAuthenticator",(function(){return Ln})),n.d(o,"ResetAuthenticator",(function(){return Fn})),n.d(o,"EnrollProfile",(function(){return Bn})),n.d(o,"Identify",(function(){return Kn})),n.d(o,"ReEnrollAuthenticator",(function(){return Vn})),n.d(o,"RedirectIdp",(function(){return Yn})),n.d(o,"SelectAuthenticatorAuthenticate",(function(){return Wn})),n.d(o,"SelectAuthenticatorEnroll",(function(){return $n})),n.d(o,"SelectEnrollProfile",(function(){return Xn})),n.d(o,"AuthenticatorVerificationData",(function(){return Qn})),n.d(o,"AuthenticatorEnrollmentData",(function(){return tr})),n.d(o,"Skip",(function(){return er}));var i=n(15),a=n(4),u=n.n(a),s=n(5),c=n.n(s),f=n(1),l=n.n(f),h="oktaStateToken",p=500,d=300,v=86400,y="okta-oauth-redirect-params",g="okta-oauth-state",m="okta-oauth-nonce",b="okta-token-storage",w="okta-cache-storage",x="okta-pkce-storage",k="okta-transaction-storage",T="okta-idx-response-storage",O="accessToken",S="idToken",_="refreshToken",E="referrerPath",A=43,j=128,R="S256",P="1.0.0";function C(t,e,n){t.options.headers=t.options.headers||{},t.options.headers[e]=n}var I=n(24),M=n.n(I),U=n(0),L=n(65);function F(t,e){var n=(e=e||{}).url,r=e.method,o=e.args,i=e.saveAuthnState,a=e.accessToken,u=!0===e.withCredentials,s=t.options.storageUtil.storage,c=t.storageManager.getHttpCache(t.options.cookies);if(e.cacheResponse){var f=c.getStorage()[n];if(f&&Date.now()/1e3<f.expiresAt)return Promise.resolve(f.response)}var l=t._oktaUserAgent.getHttpHeader(),p=Object.assign({Accept:"application/json","Content-Type":"application/json"},l);Object.assign(p,t.options.headers,e.headers),p=Object(U.t)(p),a&&Object(U.q)(a)&&(p.Authorization="Bearer "+a);var d,y,g={headers:p,data:o||void 0,withCredentials:u};return t.options.httpRequestClient(r,n,g).then((function(r){return(y=r.responseText)&&Object(U.q)(y)&&(y=JSON.parse(y))&&"object"===M()(y)&&!y.headers&&(y.headers=r.headers),i&&(y.stateToken||s.delete(h)),y&&y.stateToken&&y.expiresAt&&s.set(h,y.stateToken,y.expiresAt,t.options.cookies),y&&e.cacheResponse&&c.updateStorage(n,{expiresAt:Math.floor(Date.now()/1e3)+v,response:y}),y})).catch((function(e){var n=e.responseText||{};if(Object(U.q)(n))try{n=JSON.parse(n)}catch(t){n={errorSummary:"Unknown error"}}throw e.status>=500&&(n.errorSummary="Unknown error"),t.options.transformErrorXHR&&(e=t.options.transformErrorXHR(Object(U.b)(e))),"E0000011"===(d=new L.a(n,e)).errorCode&&s.delete(h),d}))}function N(t,e,n){var r={url:e=Object(U.l)(e)?e:t.getIssuerOrigin()+e,method:"GET"};return Object.assign(r,n),F(t,r)}function D(t,e,n,r){var o={url:e=Object(U.l)(e)?e:t.getIssuerOrigin()+e,method:"POST",args:n,saveAuthnState:!0};return Object.assign(o,r),F(t,o)}var B=n(8);function q(t,e){var n={};return Object.assign(n,e),!n.stateToken&&t.stateToken&&(n.stateToken=t.stateToken),n}function H(t){return q(t)}var K=n(66);function V(t,e,n){return function(r){var o,i,a,u;Object(U.n)(r)?o=r:Object(U.o)(r)&&(o=(r=r).delay,i=r.rememberDevice,a=r.autoPush,u=r.transactionCallBack),o||0===o||(o=p);var s=Object(U.j)(e,"next","poll");n.isPolling=!0;var c=0;return function r(){return n.isPolling?function(){var n={};if("function"==typeof a)try{n.autoPush=!!a()}catch(t){return Promise.reject(new B.a("AutoPush resulted in an error."))}else null!=a&&(n.autoPush=!!a);if("function"==typeof i)try{n.rememberDevice=!!i()}catch(t){return Promise.reject(new B.a("RememberDevice resulted in an error."))}else null!=i&&(n.rememberDevice=!!i);var r=s.href+Object(U.w)(n);return D(t,r,H(e),{saveAuthnState:!1,withCredentials:!0})}().then((function(e){if(c=0,e.factorResult&&"WAITING"===e.factorResult){if(!n.isPolling)throw new K.a;return"function"==typeof u&&u(e),Object(U.c)(o).then(r)}return n.isPolling=!1,new Y(t,e)})).catch((function(t){if(t.xhr&&(0===t.xhr.status||429===t.xhr.status)&&c<=4){var e=1e3*Math.pow(2,c);return c++,Object(U.c)(e).then(r)}throw t})):Promise.reject(new K.a)}().catch((function(t){throw n.isPolling=!1,t}))}}var Y=function t(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;if(u()(this,t),n){if(this.data=n,this.data.interactionHandle)return void(this.status=n.status);Object.assign(this,G(e,n,n,{})),delete this.stateToken,"RECOVERY_CHALLENGE"!==n.status||n._links||(this.cancel=function(){return Promise.resolve(new t(e))})}};function z(t,e,n,r,o){if(Array.isArray(r))return function(i,a){if(!i)throw new B.a("Must provide a link name");var u=Object(U.g)(r,{name:i});if(!u)throw new B.a("No link found for that name");return z(t,e,n,u,o)(a)};if(r.hints&&r.hints.allow&&1===r.hints.allow.length)switch(r.hints.allow[0]){case"GET":return function(){return N(t,r.href,{withCredentials:!0})};case"POST":return function(i){o&&o.isPolling&&(o.isPolling=!1);var a=q(e,i);"MFA_ENROLL"!==e.status&&"FACTOR_ENROLL"!==e.status||Object.assign(a,{factorType:n.factorType,provider:n.provider});var u={},s=a.autoPush;if(void 0!==s){if("function"==typeof s)try{u.autoPush=!!s()}catch(t){return Promise.reject(new B.a("AutoPush resulted in an error."))}else null!==s&&(u.autoPush=!!s);a=Object(U.s)(a,"autoPush")}var c=a.rememberDevice;if(void 0!==c){if("function"==typeof c)try{u.rememberDevice=!!c()}catch(t){return Promise.reject(new B.a("RememberDevice resulted in an error."))}else null!==c&&(u.rememberDevice=!!c);a=Object(U.s)(a,"rememberDevice")}else a.profile&&void 0!==a.profile.updatePhone&&(a.profile.updatePhone&&(u.updatePhone=!0),a.profile=Object(U.s)(a.profile,"updatePhone"));var f=r.href+Object(U.w)(u);return Z(t,f,a,{withCredentials:!0})}}}function G(t,e,n,r){if(n=n||e,n=Object(U.b)(n),Array.isArray(n)){for(var o=[],i=0,a=n.length;i<a;i++)o.push(G(t,e,n[i],r));return o}var u=n._embedded||{};for(var s in u)Object.prototype.hasOwnProperty.call(u,s)&&(Object(U.o)(u[s])||Array.isArray(u[s]))&&(u[s]=G(t,e,u[s],r));var c=function(t,e,n,r){var o={};for(var i in n._links)if(Object.prototype.hasOwnProperty.call(n._links,i)){var a=n._links[i];if("next"===i&&(i=a.name),a.type)o[i]=a;else if("poll"===i)o.poll=V(t,e,r);else{var u=z(t,e,n,a,r);u&&(o[i]=u)}}return o}(t,e,n,r);return Object.assign(u,c),n=Object(U.s)(n,"_embedded","_links"),Object.assign(n,u),n}function J(t,e){return e=q(t,e),D(t,t.getIssuerOrigin()+"/api/v1/authn",e,{withCredentials:!0})}function W(t,e){if(!e||!e.stateToken){var n=t.tx.exists._get(h);if(!n)return Promise.reject(new B.a("No transaction to resume"));e={stateToken:n}}return t.tx.status(e).then((function(e){return new Y(t,e)}))}function $(t,e){if(!e||!e.stateToken){var n=t.tx.exists._get(h);if(!n)return Promise.reject(new B.a("No transaction to evaluate"));e={stateToken:n}}return function(t,e){return e=q(t,e),D(t,t.getIssuerOrigin()+"/api/v1/authn/introspect",e,{withCredentials:!0})}(t,e).then((function(e){return new Y(t,e)}))}function X(t){return!!t.tx.exists._get(h)}function Z(t,e,n,r){return D(t,e,n,r).then((function(e){return new Y(t,e)}))}var Q=function t(){u()(this,t)};function tt(t){return("0"+t.toString(16)).substr(-2)}var et={DEFAULT_CODE_CHALLENGE_METHOD:R,generateVerifier:function(t){var e,n,r=t||"";return r.length<A&&(r+=(e=A-r.length,n=new Uint8Array(Math.ceil(e/2)),i.webcrypto.getRandomValues(n),Array.from(n,tt).join("").slice(0,e))),encodeURIComponent(r).slice(0,j)},computeChallenge:function(t){var e=(new TextEncoder).encode(t);return i.webcrypto.subtle.digest("SHA-256",e).then((function(t){var e=String.fromCharCode.apply(null,new Uint8Array(t));return Object(i.stringToBase64Url)(e)}))}};function nt(t){return t.session.get().then((function(t){return"ACTIVE"===t.status})).catch((function(){return!1}))}function rt(t){return N(t,"/api/v1/sessions/me",{withCredentials:!0}).then((function(e){var n=Object(U.s)(e,"_links");return n.refresh=function(){return D(t,Object(U.j)(e,"refresh").href,{},{withCredentials:!0})},n.user=function(){return N(t,Object(U.j)(e,"user").href,{withCredentials:!0})},n})).catch((function(){return{status:"INACTIVE"}}))}function ot(t){return F(t,{url:t.getIssuerOrigin()+"/api/v1/sessions/me",method:"DELETE",withCredentials:!0})}function it(t){return D(t,"/api/v1/sessions/me/lifecycle/refresh",{},{withCredentials:!0})}function at(t,e,n){n=n||window.location.href,window.location.assign(t.getIssuerOrigin()+"/login/sessionCookieRedirect"+Object(U.w)({checkAccountSetupComplete:!0,token:e,redirectUrl:n}))}var ut=n(2);function st(t){if(!t.clientId)throw new ut.c("A clientId must be specified in the OktaAuth constructor to get a token");if(Object(U.q)(t.responseType)&&-1!==t.responseType.indexOf(" "))throw new ut.c("Multiple OAuth responseTypes must be defined as an array");var e={client_id:t.clientId,code_challenge:t.codeChallenge,code_challenge_method:t.codeChallengeMethod,display:t.display,idp:t.idp,idp_scope:t.idpScope,login_hint:t.loginHint,max_age:t.maxAge,nonce:t.nonce,prompt:t.prompt,redirect_uri:t.redirectUri,response_mode:t.responseMode,response_type:t.responseType,sessionToken:t.sessionToken,state:t.state};if(e=Object(U.t)(e),["idp_scope","response_type"].forEach((function(t){Array.isArray(e[t])&&(e[t]=e[t].join(" "))})),-1!==t.responseType.indexOf("id_token")&&-1===t.scopes.indexOf("openid"))throw new ut.c("openid scope must be specified in the scopes argument when requesting an id_token");return e.scope=t.scopes.join(" "),e}function ct(t){var e=st(t);return Object(U.w)(e)}var ft=n(129),lt=n.n(ft);function ht(t,e,n){!function(t){if(!t.clientId)throw new ut.c("A clientId must be specified in the OktaAuth constructor to get a token");if(!t.redirectUri)throw new ut.c("The redirectUri passed to /authorize must also be passed to /token");if(!t.authorizationCode&&!t.interactionCode)throw new ut.c("An authorization code (returned from /authorize) must be passed to /token");if(!t.codeVerifier)throw new ut.c('The "codeVerifier" (generated and saved by your app) must be passed to /token')}(e);var r=function(t,e){var n=Object(U.t)({client_id:e.clientId,redirect_uri:e.redirectUri,grant_type:e.interactionCode?"interaction_code":"authorization_code",code_verifier:e.codeVerifier});e.interactionCode?n.interaction_code=e.interactionCode:e.authorizationCode&&(n.code=e.authorizationCode);var r=t.options.clientSecret;return r&&(n.client_secret=r),Object(U.w)(n).slice(1)}(t,e);return F(t,{url:n.tokenUrl,method:"POST",args:r,headers:{"Content-Type":"application/x-www-form-urlencoded"}})}function pt(t,e,n){return F(t,{url:n.tokenUrl,method:"POST",headers:{"Content-Type":"application/x-www-form-urlencoded"},args:Object.entries({client_id:e.clientId,grant_type:"refresh_token",scope:n.scopes.join(" "),refresh_token:n.refreshToken}).map((function(t){var e=lt()(t,2),n=e[0],r=e[1];return n+"="+encodeURIComponent(r)})).join("&")})}function dt(t,e){return N(t,(e||t.options.issuer)+"/.well-known/openid-configuration",{cacheResponse:!0})}function vt(t,e,n){var r=t.storageManager.getHttpCache(t.options.cookies);return dt(t,e).then((function(e){var o=e.jwks_uri,i=r.getStorage()[o];if(i&&Date.now()/1e3<i.expiresAt){var a=Object(U.g)(i.response.keys,{kid:n});if(a)return a}return r.clearStorage(o),N(t,o,{cacheResponse:!0}).then((function(t){var e=Object(U.g)(t.keys,{kid:n});if(e)return e;throw new B.a("The key id, "+n+", was not found in the server's keys")}))}))}var yt,gt,mt=n(10);function bt(t,e,n){t.addEventListener?t.addEventListener(e,n):t.attachEvent("on"+e,n)}function wt(t,e,n){t.removeEventListener?t.removeEventListener(e,n):t.detachEvent("on"+e,n)}function xt(t){var e=document.createElement("iframe");return e.style.display="none",e.src=t,document.body.appendChild(e)}function kt(t,e){var n=e.popupTitle||"External Identity Provider User Authentication",r="toolbar=no, scrollbars=yes, resizable=yes, top=100, left=500, width=600, height=600";if(Object(mt.isIE11OrLess)()){var o=window.open("/",n,r);return o.location.href=t,o}return window.open(t,n,r)}function Tt(t,e,n){var r,o;return new Promise((function(i,a){r=function(e){if(e.data&&e.data.state===n)return e.origin!==t.getIssuerOrigin()?a(new ut.c("The request does not match client configuration")):void i(e.data)},bt(window,"message",r),o=setTimeout((function(){a(new ut.c("OAuth flow timed out"))}),e||12e4)})).finally((function(){clearTimeout(o),wt(window,"message",r)}))}function Ot(){return Object(U.h)(64)}function St(){return Object(U.h)(64)}function _t(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return Object(U.u)(e.issuer)||t.options.issuer}function Et(t){var e=_t(t,arguments.length>1&&void 0!==arguments[1]?arguments[1]:{});return e.indexOf("/oauth2")>0?e:e+"/oauth2"}function At(t){return _t(t,arguments.length>1&&void 0!==arguments[1]?arguments[1]:{}).split("/oauth2")[0]}function jt(t,e){if(arguments.length>2)throw new B.a('As of version 3.0, "getOAuthUrls" takes only a single set of options');e=e||{};var n=Object(U.u)(e.authorizeUrl)||t.options.authorizeUrl,r=_t(t,e),o=Object(U.u)(e.userinfoUrl)||t.options.userinfoUrl,i=Object(U.u)(e.tokenUrl)||t.options.tokenUrl,a=Object(U.u)(e.logoutUrl)||t.options.logoutUrl,u=Object(U.u)(e.revokeUrl)||t.options.revokeUrl,s=Et(t,e);return{issuer:r,authorizeUrl:n=n||s+"/v1/authorize",userinfoUrl:o=o||s+"/v1/userinfo",tokenUrl:i=i||s+"/v1/token",revokeUrl:u=u||s+"/v1/revoke",logoutUrl:a=a||s+"/v1/logout"}}function Rt(t){var e=t.options,n=e.pkce,r=e.clientId,o=e.redirectUri,i=e.responseType,a=e.responseMode,u=e.scopes,s=e.state,c=e.ignoreSignature,f=Object(mt.isBrowser)()?window.location.href:void 0;return Object(U.t)({pkce:n,clientId:r,redirectUri:o||f,responseType:i||["token","id_token"],responseMode:a,state:s||Ot(),nonce:St(),scopes:u||["openid","email"],ignoreSignature:c})}function Pt(t){return"OAuthError"===t.name&&"interaction_required"===t.errorCode}function Ct(t,e){if("AuthApiError"!==e.name)return!1;var n=e.xhr,r=null==n?void 0:n.responseJSON;return t.options.pkce&&"invalid_grant"===(null==r?void 0:r.error)}function It(t){return/((id|access)_token=)/i.test(t)}function Mt(t){return/(code=)/i.test(t)}function Ut(t){return/(interaction_code=)/i.test(t)}function Lt(t){return/(error=)/i.test(t)||/(error_description)/i.test(t)}function Ft(t,e){var n=e.options;return t&&0===t.indexOf(n.redirectUri)}function Nt(t){return t.pkce||"code"===t.responseType||"query"===t.responseMode}function Dt(t){return Nt(t)&&"fragment"!==t.responseMode?window.location.search:window.location.hash}function Bt(t){if(!Ft(window.location.href,t))return!1;var e=Nt(t.options),n=Dt(t.options);return!!Lt(n)||(e?Mt(n)||Ut(n):It(window.location.hash))}function qt(t){if(!Bt(t))return!1;var e=Dt(t.options);return/(error=interaction_required)/i.test(e)}function Ht(t,e){var n=Rt(t);if(!1===(e=Object.assign({},n,Object(U.b)(e))).pkce)return Promise.resolve(e);if(!t.features.isPKCESupported()){var r="PKCE requires a modern browser with encryption support running in a secure context.";return t.features.isHTTPS()||(r+="\nThe current page is not being served with HTTPS protocol. PKCE requires secure HTTPS protocol."),t.features.hasTextEncoder()||(r+='\n"TextEncoder" is not defined. To use PKCE, you may need to include a polyfill/shim for this browser.'),Promise.reject(new ut.c(r))}return e.codeChallengeMethod||(e.codeChallengeMethod=R),e.responseType="code",dt(t,null).then((function(t){if(-1===(t.code_challenge_methods_supported||[]).indexOf(e.codeChallengeMethod))throw new ut.c("Invalid code_challenge_method")})).then((function(){return e.codeVerifier||(e.codeVerifier=et.generateVerifier()),et.computeChallenge(e.codeVerifier)})).then((function(t){var n=Object(U.b)(e)||{};return Object.assign(n,e,{codeChallenge:t}),n}))}function Kt(t,e){return t.refreshToken===e.refreshToken}function Vt(t){return!(!Object(ut.e)(t)||!t.xhr||!t.xhr.responseJSON||"invalid_grant"!==t.xhr.responseJSON.error)}function Yt(t){var e=/\+/g,n=/([^&=]+)=?([^&]*)/g,r=t;"#"===r.charAt(0)&&"/"===r.charAt(1)&&(r=r.substring(2)),"#"!==r.charAt(0)&&"?"!==r.charAt(0)||(r=r.substring(1));for(var o,i={};o=n.exec(r);){var a=o[1],u=o[2];i[a]="id_token"===a||"access_token"===a||"code"===a?u:decodeURIComponent(u.replace(e," "))}return i}function zt(t,e,n){var r=n.clientId,o=n.issuer,i=n.nonce;if(!e||!o||!r)throw new B.a("The jwt, iss, and aud arguments are all required");if(i&&e.nonce!==i)throw new B.a("OAuth flow response nonce doesn't match request nonce");var a=Math.floor(Date.now()/1e3);if(e.iss!==o)throw new B.a("The issuer ["+e.iss+"] does not match ["+o+"]");if(e.aud!==r)throw new B.a("The audience ["+e.aud+"] does not match ["+r+"]");if(e.iat>e.exp)throw new B.a("The JWT expired before it was issued");if(!t.options.ignoreLifetime){if(a-t.options.maxClockSkew>e.exp)throw new B.a("The JWT expired and is no longer valid");if(e.iat>a+t.options.maxClockSkew)throw new B.a("The JWT was issued in the future")}}function Gt(t){return!(!t||"object"!==M()(t)||0===Object.values(t).length)}function Jt(t){return!(!Gt(t)||!t.redirectUri&&!t.responseType)}function Wt(t){return!!Jt(t)&&!!t.codeVerifier}function $t(t){return!!Wt(t)&&!!t.interactionHandle}function Xt(t){return!!Gt(t)&&void 0===Object.values(t).find((function(t){return"string"!=typeof t}))}function Zt(t){return!(!Jt(t)&&!Xt(t))}function Qt(t){return!!(t&&(t.accessToken||t.idToken||t.refreshToken)&&Array.isArray(t.scopes))}function te(t){return t&&t.accessToken}function ee(t){return t&&t.idToken}function ne(t){return t&&t.refreshToken}function re(t,e){if(!ee(t)&&!te(t)&&!ne(t))throw new ut.c("Token must be an Object with scopes, expiresAt, and one of: an idToken, accessToken, or refreshToken property");if("accessToken"===e&&!te(t))throw new ut.c("invalid accessToken");if("idToken"===e&&!ee(t))throw new ut.c("invalid idToken");if("refreshToken"===e&&!ne(t))throw new ut.c("invalid refreshToken")}function oe(t){var e,n=t.split(".");try{e={header:JSON.parse(Object(i.base64UrlToString)(n[0])),payload:JSON.parse(Object(i.base64UrlToString)(n[1])),signature:n[2]}}catch(t){throw new ut.c("Malformed token")}return e}function ie(t,e){return Promise.resolve().then((function(){var n,r;if(e&&(n=e.accessToken,r=e.refreshToken),!n&&!r)throw new B.a("A valid access or refresh token object is required");var o=t.options.clientId,a=t.options.clientSecret;if(!o)throw new B.a("A clientId must be specified in the OktaAuth constructor to revoke a token");var u=jt(t).revokeUrl,s=Object(U.w)({token_type_hint:r?"refresh_token":"access_token",token:r||n}).slice(1),c=a?Object(i.btoa)("".concat(o,":").concat(a)):Object(i.btoa)(o);return D(t,u,s,{headers:{"Content-Type":"application/x-www-form-urlencoded",Authorization:"Basic "+c}})}))}function ae(t,e,n){n=n||jt(t,e);var r=e=Object.assign({},Rt(t),Object(U.b)(e)),o=r.authorizationCode,i=r.interactionCode,a=r.codeVerifier,u=r.clientId,s=r.redirectUri,c=r.scopes,f=r.ignoreSignature,l=r.state;return ht(t,{clientId:u,redirectUri:s,authorizationCode:o,interactionCode:i,codeVerifier:a},n).then((function(e){var r=["token"];return-1!==c.indexOf("openid")&&r.push("id_token"),se(t,{clientId:u,redirectUri:s,scopes:c,responseType:r,ignoreSignature:f},e,n).then((function(t){return t.code=o,t.state=l,t}))})).finally((function(){t.transactionManager.clear()}))}!function(t){t[t.SUCCESS=0]="SUCCESS",t[t.PENDING=1]="PENDING",t[t.FAILURE=2]="FAILURE",t[t.TERMINAL=3]="TERMINAL",t[t.CANCELED=4]="CANCELED"}(yt||(yt={})),function(t){t[t.PASSWORD_RECOVERY=0]="PASSWORD_RECOVERY",t[t.REGISTRATION=1]="REGISTRATION",t[t.SOCIAL_IDP=2]="SOCIAL_IDP"}(gt||(gt={}));function ue(t,e,n){return function(t,e,n,r){return new(n||(n=Promise))((function(o,i){function a(t){try{s(r.next(t))}catch(t){i(t)}}function u(t){try{s(r.throw(t))}catch(t){i(t)}}function s(t){var e;t.done?o(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(a,u)}s((r=r.apply(t,e||[])).next())}))}(this,void 0,void 0,l.a.mark((function r(){var o,a,u,s,c,f;return l.a.wrap((function(r){for(;;)switch(r.prev=r.next){case 0:if(e&&e.idToken){r.next=2;break}throw new ut.c("Only idTokens may be verified");case 2:return o=oe(e.idToken),a=(null==n?void 0:n.issuer)||t.options.issuer,r.next=6,dt(t,a);case 6:if(u=r.sent,s=u.issuer,c=Object.assign({clientId:t.options.clientId,ignoreSignature:t.options.ignoreSignature},n,{issuer:s}),zt(t,o.payload,c),1!=c.ignoreSignature&&t.features.isTokenVerifySupported()){r.next=12;break}return r.abrupt("return",e);case 12:return r.next=14,vt(t,e.issuer,o.header.kid);case 14:return f=r.sent,r.next=17,i.verifyToken(e.idToken,f);case 17:if(r.sent){r.next=20;break}throw new ut.c("The token signature is not valid");case 20:if(!(n&&n.accessToken&&e.claims.at_hash)){r.next=26;break}return r.next=23,i.getOidcHash(n.accessToken);case 23:if(r.sent===e.claims.at_hash){r.next=26;break}throw new ut.c("Token hash verification failed");case 26:return r.abrupt("return",e);case 27:case"end":return r.stop()}}),r)})))}function se(t,e,n,r){if(!1!==t.options.pkce&&(n.code||n.interaction_code))return ae(t,Object.assign({},e,{authorizationCode:n.code,interactionCode:n.interaction_code}),r);e=e||Rt(t),r=r||jt(t,e);var o,i=e.responseType;Array.isArray(i)||(i=[i]),o=n.scope?n.scope.split(" "):Object(U.b)(e.scopes);var a=e.clientId||t.options.clientId;return Promise.resolve().then((function(){!function(t,e){if(t.error||t.error_description)throw new ut.d(t.error,t.error_description);if(t.state!==e.state)throw new ut.c("OAuth flow response state doesn't match request state")}(n,e)})).then((function(){var i={},u=n.expires_in,s=n.token_type,c=n.access_token,f=n.id_token,l=n.refresh_token,h=Math.floor(Date.now()/1e3);if(c){var p=t.token.decode(c);i.accessToken={accessToken:c,claims:p.payload,expiresAt:Number(u)+h,tokenType:s,scopes:o,authorizeUrl:r.authorizeUrl,userinfoUrl:r.userinfoUrl}}if(l&&(i.refreshToken={refreshToken:l,expiresAt:Number(u)+h,scopes:o,tokenUrl:r.tokenUrl,authorizeUrl:r.authorizeUrl,issuer:r.issuer}),f){var d=t.token.decode(f),v={idToken:f,claims:d.payload,expiresAt:d.payload.exp-d.payload.iat+h,scopes:o,authorizeUrl:r.authorizeUrl,issuer:r.issuer,clientId:a},y={clientId:a,issuer:r.issuer,nonce:e.nonce,accessToken:c};return void 0!==e.ignoreSignature&&(y.ignoreSignature=e.ignoreSignature),ue(t,v,y).then((function(){return i.idToken=v,i}))}return i})).then((function(t){if(-1!==i.indexOf("token")&&!t.accessToken)throw new ut.c('Unable to parse OAuth flow response: response type "token" was requested but "access_token" was not returned.');if(-1!==i.indexOf("id_token")&&!t.idToken)throw new ut.c('Unable to parse OAuth flow response: response type "id_token" was requested but "id_token" was not returned.');return{tokens:t,state:n.state,code:n.code}}))}function ce(t,e){return arguments.length>2?Promise.reject(new B.a('As of version 3.0, "getToken" takes only a single set of options')):Ht(t,e=e||{}).then((function(n){var r,o;switch(e.sessionToken?Object.assign(n,{prompt:"none",responseMode:"okta_post_message",display:null}):e.idp&&Object.assign(n,{display:"popup"}),o=jt(t,n),r=(e.codeVerifier?o.tokenUrl:o.authorizeUrl)+ct(n),n.sessionToken||null===n.display?"IFRAME":"popup"===n.display?"POPUP":"IMPLICIT"){case"IFRAME":var i=Tt(t,e.timeout,n.state),a=xt(r);return i.then((function(e){return se(t,n,e,o)})).finally((function(){document.body.contains(a)&&a.parentElement.removeChild(a)}));case"POPUP":var u;if("okta_post_message"===n.responseMode){if(!t.features.isPopupPostMessageSupported())throw new B.a("This browser doesn't have full postMessage support");u=Tt(t,e.timeout,n.state)}var s=kt(r,{popupTitle:e.popupTitle});return new Promise((function(t,e){var n=setInterval((function(){s&&!s.closed||(clearInterval(n),e(new B.a("Unable to parse OAuth flow response")))}),100);u.then((function(e){clearInterval(n),t(e)})).catch((function(t){clearInterval(n),e(t)}))})).then((function(e){return se(t,n,e,o)})).finally((function(){s&&!s.closed&&s.close()}));default:throw new B.a("The full page redirect flow is not supported")}}))}function fe(t,e){return arguments.length>2?Promise.reject(new ut.c('As of version 3.0, "getWithoutPrompt" takes only a single set of options')):(e=Object(U.b)(e)||{},Object.assign(e,{prompt:"none",responseMode:"okta_post_message",display:null}),ce(t,e))}function le(t,e,n){return function(t,e,n,r){return new(n||(n=Promise))((function(o,i){function a(t){try{s(r.next(t))}catch(t){i(t)}}function u(t){try{s(r.throw(t))}catch(t){i(t)}}function s(t){var e;t.done?o(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(a,u)}s((r=r.apply(t,e||[])).next())}))}(this,void 0,void 0,l.a.mark((function r(){var o,i,a,u,s,c,f;return l.a.wrap((function(r){for(;;)switch(r.prev=r.next){case 0:if(o=t.options.clientId){r.next=3;break}throw new ut.c("A clientId must be specified in the OktaAuth constructor to renew tokens");case 3:return i=Object.assign({},e,{clientId:o}),r.next=6,pt(t,i,n);case 6:return a=r.sent,u=jt(t,e),r.next=10,se(t,i,a,u);case 10:return s=r.sent,c=s.tokens,(f=c.refreshToken)&&!Kt(f,n)&&t.tokenManager.updateRefreshToken(f),r.abrupt("return",c);case 15:case"end":return r.stop()}}),r)})))}function he(){throw new ut.c("Renew must be passed a token with an array of scopes and an accessToken or idToken")}function pe(t,e){return ee(t)?e.idToken:te(t)?e.accessToken:void he()}function de(t,e){return function(t,e,n,r){return new(n||(n=Promise))((function(o,i){function a(t){try{s(r.next(t))}catch(t){i(t)}}function u(t){try{s(r.throw(t))}catch(t){i(t)}}function s(t){var e;t.done?o(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(a,u)}s((r=r.apply(t,e||[])).next())}))}(this,void 0,void 0,l.a.mark((function n(){var r,o,i,a,u,s;return l.a.wrap((function(n){for(;;)switch(n.prev=n.next){case 0:if(ee(e)||te(e)||he(),!(r=t.tokenManager.getTokensSync()).refreshToken){n.next=7;break}return n.next=5,le(t,{scopes:e.scopes},r.refreshToken);case 5:return r=n.sent,n.abrupt("return",pe(e,r));case 7:return o=t.options.pkce?"code":te(e)?"token":"id_token",i=e.scopes,a=e.authorizeUrl,u=e.userinfoUrl,s=e.issuer,n.abrupt("return",fe(t,{responseType:o,scopes:i,authorizeUrl:a,userinfoUrl:u,issuer:s}).then((function(t){return pe(e,t.tokens)})));case 10:case"end":return n.stop()}}),n)})))}function ve(t,e){return function(t,e,n,r){return new(n||(n=Promise))((function(o,i){function a(t){try{s(r.next(t))}catch(t){i(t)}}function u(t){try{s(r.throw(t))}catch(t){i(t)}}function s(t){var e;t.done?o(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(a,u)}s((r=r.apply(t,e||[])).next())}))}(this,void 0,void 0,l.a.mark((function n(){var r,o,i;return l.a.wrap((function(n){for(;;)switch(n.prev=n.next){case 0:if(!(r=t.tokenManager.getTokensSync()).refreshToken){n.next=3;break}return n.abrupt("return",le(t,e,r.refreshToken));case 3:return e=Object.assign({scopes:t.options.scopes,authorizeUrl:t.options.authorizeUrl,userinfoUrl:t.options.userinfoUrl,issuer:t.options.issuer},e),t.options.pkce?e.responseType="code":(o=Rt(t),i=o.responseType,e.responseType=i),n.abrupt("return",fe(t,e).then((function(t){return t.tokens})));case 6:case"end":return n.stop()}}),n)})))}function ye(t,e,n){return function(t,e,n,r){return new(n||(n=Promise))((function(o,i){function a(t){try{s(r.next(t))}catch(t){i(t)}}function u(t){try{s(r.throw(t))}catch(t){i(t)}}function s(t){var e;t.done?o(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(a,u)}s((r=r.apply(t,e||[])).next())}))}(this,void 0,void 0,l.a.mark((function r(){return l.a.wrap((function(r){for(;;)switch(r.prev=r.next){case 0:if(e){r.next=4;break}return r.next=3,t.tokenManager.getTokens();case 3:e=r.sent.accessToken;case 4:if(n){r.next=8;break}return r.next=7,t.tokenManager.getTokens();case 7:n=r.sent.idToken;case 8:if(e&&te(e)){r.next=10;break}return r.abrupt("return",Promise.reject(new ut.c("getUserInfo requires an access token object")));case 10:if(n&&ee(n)){r.next=12;break}return r.abrupt("return",Promise.reject(new ut.c("getUserInfo requires an ID token object")));case 12:return r.abrupt("return",F(t,{url:e.userinfoUrl,method:"GET",accessToken:e.accessToken}).then((function(t){return t.sub===n.claims.sub?t:Promise.reject(new ut.c("getUserInfo request was rejected due to token mismatch"))})).catch((function(t){var e;if(t.xhr&&(401===t.xhr.status||403===t.xhr.status)&&(t.xhr.headers&&Object(U.m)(t.xhr.headers.get)&&t.xhr.headers.get("WWW-Authenticate")?e=t.xhr.headers.get("WWW-Authenticate"):Object(U.m)(t.xhr.getResponseHeader)&&(e=t.xhr.getResponseHeader("WWW-Authenticate")),e)){var n=e.match(/error="(.*?)"/)||[],r=e.match(/error_description="(.*?)"/)||[],o=n[1],i=r[1];o&&i&&(t=new ut.d(o,i))}throw t})));case 13:case"end":return r.stop()}}),r)})))}function ge(t,e){return arguments.length>2?Promise.reject(new ut.c('As of version 3.0, "getWithPopup" takes only a single set of options')):(e=Object(U.b)(e)||{},Object.assign(e,{display:"popup",responseMode:"okta_post_message"}),ce(t,e))}function me(t,e){return arguments.length>2?Promise.reject(new ut.c('As of version 3.0, "getWithRedirect" takes only a single set of options')):(e=Object(U.b)(e)||{},Ht(t,e).then((function(n){var r=jt(t,e),o=r.authorizeUrl+ct(n),i={issuer:t.options.issuer,responseType:n.responseType,state:n.state,nonce:n.nonce,scopes:n.scopes,clientId:n.clientId,urls:r,ignoreSignature:n.ignoreSignature,redirectUri:n.redirectUri,codeVerifier:n.codeVerifier,codeChallenge:n.codeChallenge,codeChallengeMethod:n.codeChallengeMethod};t.transactionManager.save(i,{oauth:!0}),t.token.getWithRedirect._setLocation(o)})))}function be(t,e){e=e||{},e=Object(U.q)(e)?{url:e}:e;var n,r=t.options.pkce?"query":"fragment",o=e.url,i=e.responseMode||t.options.responseMode||r,a=t.token.parseFromUrl._getLocation();if(!(n="query"===i?o?o.substring(o.indexOf("?")):a.search:o?o.substring(o.indexOf("#")):a.hash))return Promise.reject(new ut.c("Unable to parse a token from the url"));var u=t.transactionManager.load({oauth:!0,pkce:t.options.pkce}),s=u.urls;return delete u.urls,Promise.resolve(Yt(n)).then((function(e){return o||("query"===i?function(t){var e=t.token.parseFromUrl._getHistory(),n=t.token.parseFromUrl._getDocument(),r=t.token.parseFromUrl._getLocation();e&&e.replaceState?e.replaceState(null,n.title,r.pathname+r.hash):r.search=""}(t):function(t){var e=t.token.parseFromUrl._getHistory(),n=t.token.parseFromUrl._getDocument(),r=t.token.parseFromUrl._getLocation();e&&e.replaceState?e.replaceState(null,n.title,r.pathname+r.search):r.hash=""}(t)),se(t,u,e,s).catch((function(e){throw Pt(e)||t.transactionManager.clear(),e})).then((function(e){return t.transactionManager.clear(),e}))}))}var we=n(216),xe={getHttpCache:function(){return null},getPKCEStorage:function(){return null},browserHasLocalStorage:function(){try{var t=xe.getLocalStorage();return xe.testStorage(t)}catch(t){return!1}},browserHasSessionStorage:function(){try{var t=xe.getSessionStorage();return xe.testStorage(t)}catch(t){return!1}},testStorageType:function(t){var e=!1;switch(t){case"sessionStorage":e=xe.browserHasSessionStorage();break;case"localStorage":e=xe.browserHasLocalStorage();break;case"cookie":case"memory":e=!0;break;default:e=!1}return e},getStorageByType:function(t,e){var n=null;switch(t){case"sessionStorage":n=xe.getSessionStorage();break;case"localStorage":n=xe.getLocalStorage();break;case"cookie":n=xe.getCookieStorage(e);break;case"memory":n=xe.getInMemoryStorage();break;default:throw new B.a("Unrecognized storage option: ".concat(t))}return n},findStorageType:function(t){var e,n;return e=(t=t.slice()).shift(),(n=t.length?t[0]:null)?xe.testStorageType(e)?e:(Object(U.y)("This browser doesn't support ".concat(e,". Switching to ").concat(n,".")),xe.findStorageType(t)):e},getLocalStorage:function(){return localStorage},getSessionStorage:function(){return sessionStorage},getCookieStorage:function(t){var e=t.secure,n=t.sameSite,r=t.sessionCookie;if(void 0===e||void 0===n)throw new B.a('getCookieStorage: "secure" and "sameSite" options must be provided');var o={getItem:xe.storage.get,setItem:function(t,o){var i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"2200-01-01T00:00:00.000Z";i=r?null:i,xe.storage.set(t,o,i,{secure:e,sameSite:n})},removeItem:function(t){xe.storage.delete(t)}};return t.useMultipleCookies?{getItem:function(t){var e=o.getItem(),n={};return Object.keys(e).forEach((function(r){0===r.indexOf(t)&&(n[r.replace("".concat(t,"_"),"")]=JSON.parse(e[r]))})),JSON.stringify(n)},setItem:function(t,e){var n=JSON.parse(this.getItem(t));e=JSON.parse(e),Object.keys(e).forEach((function(r){var i=t+"_"+r,a=JSON.stringify(e[r]);o.setItem(i,a),delete n[r]})),Object.keys(n).forEach((function(e){o.removeItem(t+"_"+e)}))},removeItem:function(t){var e=JSON.parse(this.getItem(t));Object.keys(e).forEach((function(e){o.removeItem(t+"_"+e)}))}}:o},inMemoryStore:{},getInMemoryStorage:function(){var t=this;return{getItem:function(e){return t.inMemoryStore[e]},setItem:function(e,n){t.inMemoryStore[e]=n}}},testStorage:function(t){var e="okta-test-storage";try{return t.setItem(e,e),t.removeItem(e),!0}catch(t){return!1}},storage:{set:function(t,e,n,r){var o=r.sameSite,i=r.secure;if(void 0===i||void 0===o)throw new B.a('storage.set: "secure" and "sameSite" options must be provided');var a={path:r.path||"/",secure:i,sameSite:o};return Date.parse(n)&&(a.expires=new Date(n)),we.set(t,e,a),xe.storage.get(t)},get:function(t){return we.get(t)},delete:function(t){return we.remove(t,{path:"/"})}}},ke=xe;function Te(t){var e=(t=t||{}).issuer;if(!e)throw new B.a('No issuer passed to constructor. Required usage: new OktaAuth({issuer: "https://{yourOktaDomain}.com/oauth2/{authServerId}"})');if(!new RegExp("^http?s?://.+").test(t.issuer))throw new B.a('Issuer must be a valid URL. Required usage: new OktaAuth({issuer: "https://{yourOktaDomain}.com/oauth2/{authServerId}"})');if(-1!==e.indexOf("-admin."))throw new B.a('Issuer URL passed to constructor contains "-admin" in subdomain. Required usage: new OktaAuth({issuer: "https://{yourOktaDomain}.com})')}function Oe(t,e){var n=t.userAgent||{};return n.value?n.value:n.template?n.template.replace("$OKTA_AUTH_JS",e):e}var Se=function(){function t(e){u()(this,t),this.localOffset=parseInt(e||0)}return c()(t,[{key:"now",value:function(){return(Date.now()+this.localOffset)/1e3}}],[{key:"create",value:function(){return new t(0)}}]),t}(),_e=function(){function t(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};u()(this,t),this.tokenManager=e,this.options=n}return c()(t,[{key:"start",value:function(){var t=this,e=[];this.onTokenExpiredHandler=function(n){if(t.options.autoRenew)if(function(t){var e=!1;if(t.push(Date.now()),t.length>=10){var n=t.shift();e=t[t.length-1]-n<3e4}return e}(e)){var r=new ut.c("Too many token renew requests");t.tokenManager.emitError(r)}else t.tokenManager.renew(n).catch((function(){}));else t.options.autoRemove&&t.tokenManager.remove(n)},this.tokenManager.on(je,this.onTokenExpiredHandler),this.tokenManager.setExpireEventTimeoutAll(),this.options.syncStorage&&Object(mt.isBrowser)()&&(this.storageListener=function(e){var n=e.key,r=e.newValue,o=e.oldValue;(!n||n===t.options.storageKey&&r!==o)&&(t.syncTimeout=setTimeout((function(){return t.tokenManager.resetExpireEventTimeoutAll(),void t.tokenManager.emitEventsForCrossTabsStorageUpdate(r,o)}),t.options._storageEventDelay))},window.addEventListener("storage",this.storageListener))}},{key:"stop",value:function(){this.tokenManager.clearExpireEventTimeoutAll(),this.tokenManager.off(je,this.onTokenExpiredHandler),this.options.syncStorage&&Object(mt.isBrowser)()&&(window.removeEventListener("storage",this.storageListener),clearTimeout(this.syncTimeout))}}]),t}(),Ee=function(t,e,n,r){return new(n||(n=Promise))((function(o,i){function a(t){try{s(r.next(t))}catch(t){i(t)}}function u(t){try{s(r.throw(t))}catch(t){i(t)}}function s(t){var e;t.done?o(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(a,u)}s((r=r.apply(t,e||[])).next())}))},Ae={autoRenew:!0,autoRemove:!0,storage:void 0,expireEarlySeconds:30,storageKey:b,syncStorage:!0,_storageEventDelay:0},je="expired",Re="renewed",Pe="added",Ce="removed",Ie="error",Me=function(){function t(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(u()(this,t),this.sdk=e,this.emitter=e.emitter,!this.emitter)throw new ut.c("Emitter should be initialized before TokenManager");n=Object.assign({},Ae,Object(U.t)(n)),Object(mt.isIE11OrLess)()&&(n._storageEventDelay=n._storageEventDelay||1e3),Object(mt.isLocalhost)()||(n.expireEarlySeconds=Ae.expireEarlySeconds),this.options=n;var r=Object(U.t)({storageKey:n.storageKey,secure:n.secure});"object"===M()(n.storage)?r.storageProvider=n.storage:n.storage&&(r.storageType=n.storage),this.storage=e.storageManager.getTokenStorage(r),this.clock=Se.create(),this.state={expireTimeouts:{},renewPromise:null},this.on=this.emitter.on.bind(this.emitter),this.off=this.emitter.off.bind(this.emitter)}return c()(t,[{key:"start",value:function(){this.service&&this.stop(),this.service=new _e(this,this.getOptions()),this.service.start()}},{key:"stop",value:function(){this.service&&(this.service.stop(),this.service=null)}},{key:"getOptions",value:function(){return Object(U.b)(this.options)}},{key:"getExpireTime",value:function(t){return t.expiresAt-this.options.expireEarlySeconds}},{key:"hasExpired",value:function(t){return this.getExpireTime(t)<=this.clock.now()}},{key:"emitExpired",value:function(t,e){this.emitter.emit(je,t,e)}},{key:"emitRenewed",value:function(t,e,n){this.emitter.emit(Re,t,e,n)}},{key:"emitAdded",value:function(t,e){this.emitter.emit(Pe,t,e)}},{key:"emitRemoved",value:function(t,e){this.emitter.emit(Ce,t,e)}},{key:"emitError",value:function(t){this.emitter.emit(Ie,t)}},{key:"emitEventsForCrossTabsStorageUpdate",value:function(t,e){var n=this,r=this.getTokensFromStorageValue(e),o=this.getTokensFromStorageValue(t);Object.keys(o).forEach((function(t){var e=r[t],i=o[t];JSON.stringify(e)!==JSON.stringify(i)&&n.emitAdded(t,i)})),Object.keys(r).forEach((function(t){var e=r[t];o[t]||n.emitRemoved(t,e)}))}},{key:"clearExpireEventTimeout",value:function(t){clearTimeout(this.state.expireTimeouts[t]),delete this.state.expireTimeouts[t],this.state.renewPromise=null}},{key:"clearExpireEventTimeoutAll",value:function(){var t=this.state.expireTimeouts;for(var e in t)Object.prototype.hasOwnProperty.call(t,e)&&this.clearExpireEventTimeout(e)}},{key:"setExpireEventTimeout",value:function(t,e){var n=this;if(!ne(e)){var r=this.getExpireTime(e),o=1e3*Math.max(r-this.clock.now(),0);this.clearExpireEventTimeout(t);var i=setTimeout((function(){n.emitExpired(t,e)}),o);this.state.expireTimeouts[t]=i}}},{key:"setExpireEventTimeoutAll",value:function(){var t=this.storage.getStorage();for(var e in t)if(Object.prototype.hasOwnProperty.call(t,e)){var n=t[e];this.setExpireEventTimeout(e,n)}}},{key:"resetExpireEventTimeoutAll",value:function(){this.clearExpireEventTimeoutAll(),this.setExpireEventTimeoutAll()}},{key:"add",value:function(t,e){var n=this.storage.getStorage();re(e),n[t]=e,this.storage.setStorage(n),this.emitAdded(t,e),this.setExpireEventTimeout(t,e)}},{key:"getSync",value:function(t){return this.storage.getStorage()[t]}},{key:"get",value:function(t){return Ee(this,void 0,void 0,l.a.mark((function e(){return l.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.abrupt("return",this.getSync(t));case 1:case"end":return e.stop()}}),e,this)})))}},{key:"getTokensSync",value:function(){var t={},e=this.storage.getStorage();return Object.keys(e).forEach((function(n){var r=e[n];te(r)?t.accessToken=r:ee(r)?t.idToken=r:ne(r)&&(t.refreshToken=r)})),t}},{key:"getTokens",value:function(){return Ee(this,void 0,void 0,l.a.mark((function t(){return l.a.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.abrupt("return",this.getTokensSync());case 1:case"end":return t.stop()}}),t,this)})))}},{key:"getStorageKeyByType",value:function(t){var e=this.storage.getStorage();return Object.keys(e).filter((function(n){var r=e[n];return te(r)&&"accessToken"===t||ee(r)&&"idToken"===t||ne(r)&&"refreshToken"===t}))[0]}},{key:"getTokenType",value:function(t){if(te(t))return"accessToken";if(ee(t))return"idToken";if(ne(t))return"refreshToken";throw new ut.c("Unknown token type")}},{key:"setTokens",value:function(t,e,n,r){var o=this,i=function(t,i){var a=o.getTokenType(i);"accessToken"===a?e&&e(t,i):"idToken"===a?n&&n(t,i):"refreshToken"===a&&r&&r(t,i)},a=function(t,e){o.emitAdded(t,e),o.setExpireEventTimeout(t,e),i(t,e)},u=function(t,e){o.clearExpireEventTimeout(t),o.emitRemoved(t,e),i(t,e)},s=["idToken","accessToken","refreshToken"],c=this.getTokensSync();s.forEach((function(e){var n=t[e];n&&re(n,e)}));var f=s.reduce((function(e,n){var r=t[n];return r&&(e[o.getStorageKeyByType(n)||n]=r),e}),{});this.storage.setStorage(f),s.forEach((function(e){var n,r,s,f=t[e],l=c[e],h=o.getStorageKeyByType(e)||e;f&&l?(u(h,l),a(h,f),n=h,r=f,s=l,o.emitRenewed(n,r,s),o.clearExpireEventTimeout(n),o.setExpireEventTimeout(n,r),i(n,r)):f?a(h,f):l&&u(h,l)}))}},{key:"remove",value:function(t){this.clearExpireEventTimeout(t);var e=this.storage.getStorage(),n=e[t];delete e[t],this.storage.setStorage(e),this.emitRemoved(t,n)}},{key:"renewToken",value:function(t){return Ee(this,void 0,void 0,l.a.mark((function e(){return l.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.abrupt("return",this.sdk.token.renew(t));case 1:case"end":return e.stop()}}),e,this)})))}},{key:"validateToken",value:function(t){return re(t)}},{key:"renew",value:function(t){var e=this;if(this.state.renewPromise)return this.state.renewPromise;try{var n=this.getSync(t);if(!n)throw new ut.c("The tokenManager has no token for the key: "+t)}catch(t){return Promise.reject(t)}return this.clearExpireEventTimeout(t),this.state.renewPromise=this.sdk.token.renewTokens().then((function(t){return e.setTokens(t),t[e.getTokenType(n)]})).catch((function(n){throw(Vt(n)||"OAuthError"===n.name||"AuthSdkError"===n.name)&&(e.remove(t),n.tokenKey=t,e.emitError(n)),n})).finally((function(){e.state.renewPromise=null})),this.state.renewPromise}},{key:"clear",value:function(){this.clearExpireEventTimeoutAll(),this.storage.clearStorage()}},{key:"getTokensFromStorageValue",value:function(t){var e;try{e=JSON.parse(t)||{}}catch(t){e={}}return e}},{key:"updateRefreshToken",value:function(t){var e=this.getStorageKeyByType("refreshToken")||_,n=this.storage.getStorage();re(t),n[e]=t,this.storage.setStorage(n)}}]),t}(),Ue=function(){function t(){u()(this,t),this.queue=[],this.running=!1}return c()(t,[{key:"push",value:function(t,e){for(var n=this,r=arguments.length,o=new Array(r>2?r-2:0),i=2;i<r;i++)o[i-2]=arguments[i];return new Promise((function(r,i){n.queue.push({method:t,thisObject:e,args:o,resolve:r,reject:i}),n.run()}))}},{key:"run",value:function(){var t=this;if(!this.running&&0!==this.queue.length){this.running=!0;var e=this.queue.shift(),n=e.method.apply(e.thisObject,e.args);Object(U.p)(n)?n.then(e.resolve,e.reject).finally((function(){t.running=!1,t.run()})):(e.resolve(n),this.running=!1,this.run())}}}]),t}();function Le(t,e){return e=e||{},Object(mt.isFingerprintSupported)()?new Promise((function(i,a){(r=document.createElement("iframe")).style.display="none",o=function(e){if(e&&e.data&&e.origin===t.getIssuerOrigin()){try{var n=JSON.parse(e.data)}catch(t){return}if(n)return"FingerprintAvailable"===n.type?i(n.fingerprint):void("FingerprintServiceReady"===n.type&&e.source.postMessage(JSON.stringify({type:"GetFingerprint"}),e.origin))}},bt(window,"message",o),r.src=t.getIssuerOrigin()+"/auth/services/devicefingerprint",document.body.appendChild(r),n=setTimeout((function(){a(new ut.c("Fingerprinting timed out"))}),e.timeout||15e3)})).finally((function(){clearTimeout(n),wt(window,"message",o),document.body.contains(r)&&r.parentElement.removeChild(r)})):Promise.reject(new ut.c("Fingerprinting is not supported on this device"));var n,r,o}var Fe=n(217),Ne=null,De={updateAuthStatePromise:null,canceledTimes:0},Be=function(){function t(e){var n=this;if(u()(this,t),!e.emitter)throw new ut.c("Emitter should be initialized before AuthStateManager");this._sdk=e,this._pending=Object.assign({},De),this._authState=Ne,this._logOptions={},e.tokenManager.on(Pe,(function(t,e){n._setLogOptions({event:Pe,key:t,token:e}),n.updateAuthState()})),e.tokenManager.on(Ce,(function(t,e){n._setLogOptions({event:Ce,key:t,token:e}),n.updateAuthState()}))}return c()(t,[{key:"_setLogOptions",value:function(t){this._logOptions=t}},{key:"getAuthState",value:function(){return this._authState}},{key:"updateAuthState",value:function(){return function(t,e,n,r){return new(n||(n=Promise))((function(o,i){function a(t){try{s(r.next(t))}catch(t){i(t)}}function u(t){try{s(r.throw(t))}catch(t){i(t)}}function s(t){var e;t.done?o(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(a,u)}s((r=r.apply(t,e||[])).next())}))}(this,void 0,void 0,l.a.mark((function t(){var e,n,r,o,i,a,u,s=this;return l.a.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(e=this._sdk.options,n=e.transformAuthState,r=e.devMode,o=function(t){var e=s._logOptions,n=e.event,r=e.key,o=e.token;Object(U.i)().group("OKTA-AUTH-JS:updateAuthState: Event:".concat(n," Status:").concat(t)),Object(U.i)().log(r,o),Object(U.i)().log("Current authState",s._authState),Object(U.i)().groupEnd(),s._logOptions={}},i=function(t){var e,n;n=t,(e=s._authState)&&e.isAuthenticated===n.isAuthenticated&&JSON.stringify(e.idToken)===JSON.stringify(n.idToken)&&JSON.stringify(e.accessToken)===JSON.stringify(n.accessToken)&&e.error===n.error?r&&o("unchanged"):(s._authState=t,s._sdk.emitter.emit("authStateChange",Object.assign({},t)),r&&o("emitted"))},a=function t(e){return s._pending.updateAuthStatePromise.then((function(){var n=s._pending.updateAuthStatePromise;return n&&n!==e?t(n):s.getAuthState()}))},!this._pending.updateAuthStatePromise){t.next=11;break}if(!(this._pending.canceledTimes>=10)){t.next=10;break}return r&&o("terminated"),t.abrupt("return",a(this._pending.updateAuthStatePromise));case 10:this._pending.updateAuthStatePromise.cancel();case 11:return u=new Fe((function(t,e,a){a.shouldReject=!1,a((function(){s._pending.updateAuthStatePromise=null,s._pending.canceledTimes=s._pending.canceledTimes+1,r&&o("canceled")}));var c=function(e){u.isCanceled?t():(i(e),t(),s._pending=Object.assign({},De))};s._sdk.isAuthenticated().then((function(){if(u.isCanceled)t();else{var e=s._sdk.tokenManager.getTokensSync(),r=e.accessToken,o=e.idToken,i=e.refreshToken,a={accessToken:r,idToken:o,refreshToken:i,isAuthenticated:!(!r||!o)};(n?n(s._sdk,a):Promise.resolve(a)).then((function(t){return c(t)})).catch((function(t){return c({accessToken:r,idToken:o,refreshToken:i,isAuthenticated:!1,error:t})}))}}))})),this._pending.updateAuthStatePromise=u,t.abrupt("return",a(u));case 14:case"end":return t.stop()}}),t,this)})))}},{key:"subscribe",value:function(t){this._sdk.emitter.on("authStateChange",t)}},{key:"unsubscribe",value:function(t){this._sdk.emitter.off("authStateChange",t)}}]),t}(),qe=function(){function t(e,n){if(u()(this,t),!e)throw new B.a('"storage" is required');if("string"!=typeof n||!n.length)throw new B.a('"storageName" is required');this.storageName=n,this.storageProvider=e}return c()(t,[{key:"getItem",value:function(t){return this.getStorage()[t]}},{key:"setItem",value:function(t,e){return this.updateStorage(t,e)}},{key:"removeItem",value:function(t){return this.clearStorage(t)}},{key:"getStorage",value:function(){var t=this.storageProvider.getItem(this.storageName);t=t||"{}";try{return JSON.parse(t)}catch(t){throw new B.a("Unable to parse storage string: "+this.storageName)}}},{key:"setStorage",value:function(t){try{var e=t?JSON.stringify(t):"{}";this.storageProvider.setItem(this.storageName,e)}catch(t){throw new B.a("Unable to set storage: "+this.storageName)}}},{key:"clearStorage",value:function(t){if(t){var e=this.getStorage();delete e[t],this.setStorage(e)}else this.storageProvider.removeItem?this.storageProvider.removeItem(this.storageName):this.setStorage()}},{key:"updateStorage",value:function(t,e){var n=this.getStorage();n[t]=e,this.setStorage(n)}}]),t}();function He(t){Object(mt.isBrowser)()||t.storageProvider||t.storageProvider||Object(U.y)("Memory storage can only support simple single user use case on server side, please provide custom storageProvider or storageKey if advanced scenarios need to be supported.")}var Ke=function(){function t(e,n,r){u()(this,t),this.storageManagerOptions=e,this.cookieOptions=n,this.storageUtil=r}return c()(t,[{key:"getOptionsForSection",value:function(t,e){return Object.assign({},this.storageManagerOptions[t],e)}},{key:"getStorage",value:function(t){if((t=Object.assign({},this.cookieOptions,t)).storageProvider)return t.storageProvider;var e=t,n=e.storageType,r=e.storageTypes;if("sessionStorage"===n&&(t.sessionCookie=!0),n&&r){var o=r.indexOf(n);o>=0&&(r=r.slice(o),n=null)}return n||(n=this.storageUtil.findStorageType(r)),this.storageUtil.getStorageByType(n,t)}},{key:"getTransactionStorage",value:function(t){He(t=this.getOptionsForSection("transaction",t));var e=this.getStorage(t),n=t.storageKey||k;return new qe(e,n)}},{key:"getIdxResponseStorage",value:function(t){var e;if(Object(mt.isBrowser)())try{e=this.storageUtil.getStorageByType("memory",t)}catch(t){Object(U.y)("No response storage found, you may want to provide custom implementation for intermediate idx responses to optimize the network traffic")}else{var n=this.getTransactionStorage(t);n&&(e={getItem:function(t){var e=n.getStorage();return e&&e[t]?e[t]:null},setItem:function(t,e){var r=n.getStorage();if(!r)throw new ut.c("Transaction has been cleared, failed to save idxState");r[t]=e,n.setStorage(r)},removeItem:function(t){var e=n.getStorage();e&&(delete e[t],n.setStorage(e))}})}return e?new qe(e,T):null}},{key:"getTokenStorage",value:function(t){He(t=this.getOptionsForSection("token",t));var e=this.getStorage(t),n=t.storageKey||b;return new qe(e,n)}},{key:"getHttpCache",value:function(t){t=this.getOptionsForSection("cache",t);var e=this.getStorage(t),n=t.storageKey||w;return new qe(e,n)}},{key:"getLegacyPKCEStorage",value:function(t){t=this.getOptionsForSection("legacy-pkce",t);var e=this.getStorage(t),n=t.storageKey||x;return new qe(e,n)}},{key:"getLegacyOAuthParamsStorage",value:function(t){t=this.getOptionsForSection("legacy-oauth-params",t);var e=this.getStorage(t),n=t.storageKey||y;return new qe(e,n)}}]),t}();function Ve(t){return t&&t.version}var Ye=function(){function t(e){u()(this,t),this.storageManager=e.storageManager,this.legacyWidgetSupport=!1!==e.legacyWidgetSupport,this.saveNonceCookie=!1!==e.saveNonceCookie,this.saveStateCookie=!1!==e.saveStateCookie,this.saveParamsCookie=!1!==e.saveParamsCookie,this.options=e}return c()(t,[{key:"clear",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};this.storageManager.getTransactionStorage().clearStorage();var e=this.storageManager.getIdxResponseStorage();null==e||e.clearStorage(),this.legacyWidgetSupport&&(t.oauth&&this.clearLegacyOAuthParams(),t.pkce&&this.clearLegacyPKCE())}},{key:"save",value:function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=this.storageManager.getTransactionStorage();if(Zt(n.getStorage())&&Object(U.y)("a saved auth transaction exists in storage. This may indicate another auth flow is already in progress."),n.setStorage(t),e.oauth&&(this.saveNonceCookie||this.saveStateCookie||this.saveParamsCookie)){var r=this.storageManager.getStorage({storageType:"cookie"});if(this.saveParamsCookie){var o={responseType:t.responseType,state:t.state,nonce:t.nonce,scopes:t.scopes,clientId:t.clientId,urls:t.urls,ignoreSignature:t.ignoreSignature};r.setItem(y,JSON.stringify(o),null)}this.saveNonceCookie&&t.nonce&&r.setItem(m,t.nonce,null),this.saveStateCookie&&t.state&&r.setItem(g,t.state,null)}}},{key:"exists",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};try{return!!this.load(t)}catch(t){return!1}}},{key:"load",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},e=this.storageManager.getTransactionStorage().getStorage();if(Zt(e))return e;if(!this.legacyWidgetSupport)return null;if(t.oauth)try{var n=this.loadLegacyOAuthParams();Object.assign(e,n)}finally{this.clearLegacyOAuthParams()}if(t.pkce)try{var r=this.loadLegacyPKCE();Object.assign(e,r)}finally{this.clearLegacyPKCE()}return Zt(e)?e:null}},{key:"clearLegacyPKCE",value:function(){this.storageManager.storageUtil.testStorageType("localStorage")&&this.storageManager.getLegacyPKCEStorage({storageType:"localStorage"}).clearStorage(),this.storageManager.storageUtil.testStorageType("sessionStorage")&&this.storageManager.getLegacyPKCEStorage({storageType:"sessionStorage"}).clearStorage()}},{key:"loadLegacyPKCE",value:function(){var t;if(this.storageManager.storageUtil.testStorageType("localStorage")&&(t=this.storageManager.getLegacyPKCEStorage({storageType:"localStorage"}).getStorage())&&t.codeVerifier)return t;if(this.storageManager.storageUtil.testStorageType("sessionStorage")&&(t=this.storageManager.getLegacyPKCEStorage({storageType:"sessionStorage"}).getStorage())&&t.codeVerifier)return t;throw new ut.c("Could not load PKCE codeVerifier from storage. This may indicate the auth flow has already completed or multiple auth flows are executing concurrently.",null)}},{key:"clearLegacyOAuthParams",value:function(){this.storageManager.storageUtil.testStorageType("sessionStorage")&&this.storageManager.getLegacyOAuthParamsStorage({storageType:"sessionStorage"}).clearStorage(),this.storageManager.storageUtil.testStorageType("cookie")&&this.storageManager.getLegacyOAuthParamsStorage({storageType:"cookie"}).clearStorage()}},{key:"loadLegacyOAuthParams",value:function(){var t;if(this.storageManager.storageUtil.testStorageType("sessionStorage")&&(t=this.storageManager.getLegacyOAuthParamsStorage({storageType:"sessionStorage"}).getStorage()),Jt(t))return t;if(this.storageManager.storageUtil.testStorageType("cookie")&&(t=this.storageManager.getLegacyOAuthParamsStorage({storageType:"cookie"}).getStorage()),Jt(t))return t;throw new ut.c("Unable to retrieve OAuth redirect params from storage")}},{key:"saveIdxResponse",value:function(t){var e=this.storageManager.getIdxResponseStorage();e&&e.setStorage(t)}},{key:"loadIdxResponse",value:function(){var t=this.storageManager.getIdxResponseStorage();if(!t)return null;var e=t.getStorage();return Ve(e)?e:null}}]),t}(),ze=n(209),Ge=new(n(218)),Je=function(){function t(e){u()(this,t),this.nodeCache=e}return c()(t,[{key:"set",value:function(t,e,n){if(Date.parse(n)){var r=(Date.parse(n)-Date.now())/1e3;this.nodeCache.set(t,e,r)}else this.nodeCache.set(t,e);return this.get(t)}},{key:"get",value:function(t){return this.nodeCache.get(t)}},{key:"delete",value:function(t){return this.nodeCache.del(t)}}]),t}(),We=new(function(){function t(e){u()(this,t),this.nodeCache=e,this.storage=new Je(e)}return c()(t,[{key:"testStorageType",value:function(t){var e=!1;return"memory"===t&&(e=!0),e}},{key:"getStorageByType",value:function(t){if("memory"!==t)throw new ut.c("Unrecognized storage option: ".concat(t));return this.getStorage()}},{key:"findStorageType",value:function(){return"memory"}},{key:"getHttpCache",value:function(){return null}},{key:"getStorage",value:function(){var t=this;return{getItem:this.nodeCache.get,setItem:function(e,n){t.nodeCache.set(e,n,"2200-01-01T00:00:00.000Z")}}}}]),t}())(Ge),$e={token:{storageTypes:["localStorage","sessionStorage","cookie"],useMultipleCookies:!0},cache:{storageTypes:["localStorage","sessionStorage","cookie"]},transaction:{storageTypes:["sessionStorage","localStorage","cookie"]}},Xe={token:{storageTypes:["memory"]},cache:{storageTypes:["memory"]},transaction:{storageTypes:["memory"]}};function Ze(){var t=arguments.length>1?arguments[1]:void 0,e=(arguments.length>0&&void 0!==arguments[0]?arguments[0]:{}).cookies||{};return void 0===e.secure&&(e.secure=t),void 0===e.sameSite&&(e.sameSite=e.secure?"none":"lax"),e.secure&&!t&&(Object(U.y)('The current page is not being served with the HTTPS protocol.\nFor security reasons, we strongly recommend using HTTPS.\nIf you cannot use HTTPS, set "cookies.secure" option to false.'),e.secure=!1),"none"!==e.sameSite||e.secure||(e.sameSite="lax"),e}function Qe(){var t=Object(mt.isBrowser)()?ke:We,e=Object(mt.isBrowser)()?$e:Xe;return{devMode:!1,httpRequestClient:ze.a,storageUtil:t,storageManager:e}}function tn(t,e){return Object.assign({},t,Object(U.t)(e),{storageManager:Object.assign({},t.storageManager,e.storageManager)})}var en=n(31),nn=n.n(en);function rn(t){if(t.transactionManager.exists()){var e=t.transactionManager.load();if(un(t,e)&&e.interactionHandle)return!0}return!1}function on(t){return function(t,e,n,r){return new(n||(n=Promise))((function(o,i){function a(t){try{s(r.next(t))}catch(t){i(t)}}function u(t){try{s(r.throw(t))}catch(t){i(t)}}function s(t){var e;t.done?o(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(a,u)}s((r=r.apply(t,e||[])).next())}))}(this,void 0,void 0,l.a.mark((function e(){var n,r,o,i,a,u,s,c,f,h,p,d,v,y,g,m,b;return l.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(!t.transactionManager.exists()){e.next=5;break}if(n=t.transactionManager.load(),!un(t,n)){e.next=4;break}return e.abrupt("return",n);case 4:Object(U.y)("Saved transaction meta does not match the current configuration. This may indicate that two apps are sharing a storage key.");case 5:return e.next=7,t.token.prepareTokenParams();case 7:return r=e.sent,o=jt(t,r),i=t.options.issuer,a=r.pkce,u=r.clientId,s=r.redirectUri,c=r.responseType,f=r.responseMode,h=r.scopes,p=r.state,d=r.nonce,v=r.ignoreSignature,y=r.codeVerifier,g=r.codeChallengeMethod,m=r.codeChallenge,b={issuer:i,pkce:a,clientId:u,redirectUri:s,responseType:c,responseMode:f,scopes:h,state:p,nonce:d,urls:o,ignoreSignature:v,codeVerifier:y,codeChallengeMethod:g,codeChallenge:m},e.abrupt("return",b);case 13:case"end":return e.stop()}}),e)})))}function an(t,e){t.transactionManager.save(e)}function un(t,e){return!["issuer","clientId","redirectUri"].find((function(n){return t.options[n]!==e[n]}))}var sn=function(t,e,n,r){return new(n||(n=Promise))((function(o,i){function a(t){try{s(r.next(t))}catch(t){i(t)}}function u(t){try{s(r.throw(t))}catch(t){i(t)}}function s(t){var e;t.done?o(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(a,u)}s((r=r.apply(t,e||[])).next())}))};function cn(t){return{meta:t,interactionHandle:t.interactionHandle,state:t.state}}function fn(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return sn(this,void 0,void 0,l.a.mark((function n(){var r,o,i,a,u,s,c,f,h;return l.a.wrap((function(n){for(;;)switch(n.prev=n.next){case 0:return n.next=2,on(t);case 2:if(!(r=n.sent).interactionHandle){n.next=5;break}return n.abrupt("return",cn(r));case 5:return o=r.codeChallenge,i=r.codeChallengeMethod,a=t.options,u=a.clientId,s=a.redirectUri,c=e.state||t.options.state||r.state,f=e.scopes||t.options.scopes||r.scopes,h=Et(t),n.abrupt("return",nn.a.interact({clientId:u,baseUrl:h,scopes:f,state:c,redirectUri:s,codeChallenge:o,codeChallengeMethod:i}).then((function(e){var n=Object.assign(Object.assign({},r),{interactionHandle:e,state:c,scopes:f});return an(t,n),cn(n)})));case 11:case"end":return n.stop()}}),n)})))}function ln(t,e){return function(t,e,n,r){return new(n||(n=Promise))((function(o,i){function a(t){try{s(r.next(t))}catch(t){i(t)}}function u(t){try{s(r.throw(t))}catch(t){i(t)}}function s(t){var e;t.done?o(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(a,u)}s((r=r.apply(t,e||[])).next())}))}(this,void 0,void 0,l.a.mark((function n(){var r,o,i;return l.a.wrap((function(n){for(;;)switch(n.prev=n.next){case 0:if(r=t.transactionManager.loadIdxResponse()){n.next=7;break}return o=P,i=At(t),n.next=6,nn.a.introspect(Object.assign({domain:i,version:o},e));case 6:r=n.sent;case 7:return n.abrupt("return",nn.a.makeIdxState(r));case 8:case"end":return n.stop()}}),n)})))}var hn=n(11),pn=n.n(hn);function dn(t,e){var n="undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(!n){if(Array.isArray(t)||(n=function(t,e){if(t){if("string"==typeof t)return vn(t,e);var n=Object.prototype.toString.call(t).slice(8,-1);return"Object"===n&&t.constructor&&(n=t.constructor.name),"Map"===n||"Set"===n?Array.from(t):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?vn(t,e):void 0}}(t))||e&&t&&"number"==typeof t.length){n&&(t=n);var r=0,o=function(){};return{s:o,n:function(){return r>=t.length?{done:!0}:{done:!1,value:t[r++]}},e:function(t){throw t},f:o}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var i,a=!0,u=!1;return{s:function(){n=n.call(t)},n:function(){var t=n.next();return a=t.done,t},e:function(t){u=!0,i=t},f:function(){try{a||null==n.return||n.return()}finally{if(u)throw i}}}}function vn(t,e){(null==e||e>t.length)&&(e=t.length);for(var n=0,r=new Array(e);n<e;n++)r[n]=t[n];return r}var yn={resend:"currentAuthenticatorEnrollment-resend"};function gn(t,e,n){var r,o,i=n.flow,a=n.flowMonitor,u=[],s=dn(t);try{for(s.s();!(o=s.n()).done;){var c=o.value;if(Object.keys(i).includes(c.name)&&(r=new(0,i[c.name])(c,e),a.isRemediatorCandidate(r,t,e))){if(r.canRemediate())return r;u.push(r)}}}catch(t){s.e(t)}finally{s.f()}return u[0]}function mn(t){var e=t.neededToProceed,n=t.interactionCode;return!e.length&&!n}function bn(t,e){var n,r=[],o=t.rawIdxState,i=t.neededToProceed,a=null===(n=o.messages)||void 0===n?void 0:n.value.map((function(t){return t}));a&&(r=[].concat(pn()(r),pn()(a)));var u,s=dn(i);try{for(s.s();!(u=s.n()).done;){var c=u.value,f=e[c.name];if(f){var l=new f(c).getMessages();l&&(r=[].concat(pn()(r),pn()(l)))}}}catch(t){s.e(t)}finally{s.f()}return r}function wn(t,e){var n=t.getNextStep(),r=function(t){return t.neededToProceed.some((function(t){return"skip"===t.name}))}(e),o=function(t){return Object.keys(t.actions).some((function(t){return t.includes("resend")}))}(e);return Object.assign(Object.assign(Object.assign({},n),r&&{canSkip:r}),o&&{canResend:o})}function xn(t,e,n){if(Ve(t)){var r=nn.a.makeIdxState(t),o=mn(r),i=bn(r,e);if(o)return{terminal:o,messages:i};var a=n&&wn(n,r);return Object.assign({messages:i},a&&{nextStep:a})}throw t}function kn(t){var e=Object.keys(t).find((function(t){return yn[t]}));return yn[e]}function Tn(t,e){var n=Object.keys(yn).find((function(t){return yn[t]===e}));return Object.keys(t).filter((function(t){return t!==n})).reduce((function(e,n){return e[n]=t[n],e}),{})}function On(t,e,n){return function(t,e,n,r){return new(n||(n=Promise))((function(o,i){function a(t){try{s(r.next(t))}catch(t){i(t)}}function u(t){try{s(r.throw(t))}catch(t){i(t)}}function s(t){var e;t.done?o(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(a,u)}s((r=r.apply(t,e||[])).next())}))}(this,void 0,void 0,l.a.mark((function r(){var o,i,a,u,s,c,f,h,p,d,v,y,g,m,b,w,x,k,T,O;return l.a.wrap((function(r){for(;;)switch(r.prev=r.next){case 0:if(i=(o=t).neededToProceed,a=o.interactionCode,u=n.flow,s=n.flowMonitor,!a){r.next=4;break}return r.abrupt("return",{idxResponse:t});case 4:if(c=mn(t),f=bn(t,u),!c){r.next=8;break}return r.abrupt("return",{terminal:c,messages:f});case 8:if(h=kn(e),!(p=[].concat(pn()(n.actions||[]),pn()(h&&[h]||[])))){r.next=40;break}d=dn(p),r.prev=12,d.s();case 14:if((v=d.n()).done){r.next=32;break}if(y=v.value,g=Tn(e,y),"function"!=typeof t.actions[y]){r.next=30;break}return r.prev=18,r.next=21,t.actions[y]();case 21:t=r.sent,r.next=27;break;case 24:return r.prev=24,r.t0=r.catch(18),r.abrupt("return",xn(r.t0,u));case 27:if("cancel"!==y){r.next=29;break}return r.abrupt("return",{canceled:!0});case 29:return r.abrupt("return",On(t,g,n));case 30:r.next=14;break;case 32:r.next=37;break;case 34:r.prev=34,r.t1=r.catch(12),d.e(r.t1);case 37:return r.prev=37,d.f(),r.finish(37);case 40:if(m=gn(i,e,n)){r.next=43;break}throw new ut.c("\n      No remediation can match current flow, check policy settings in your org.\n      Remediations: [".concat(i.reduce((function(t,e){return t?t+" ,"+e.name:e.name}),""),"]\n    "));case 43:if(!s.loopDetected(m)){r.next=45;break}throw new ut.c("\n      Remediation run into loop, break!!! remediation: ".concat(m.getName(),"\n    "));case 45:if(m.canRemediate()){r.next=48;break}return b=wn(m,t),r.abrupt("return",{idxResponse:t,nextStep:b});case 48:return w=m.getName(),x=m.getData(),r.prev=50,r.next=53,t.proceed(w,x);case 53:return t=r.sent,r.next=56,s.trackRemediations(w);case 56:if(!t.interactionCode){r.next=58;break}return r.abrupt("return",{idxResponse:t});case 58:if(k=mn(t),T=bn(t,u),!k){r.next=62;break}return r.abrupt("return",{terminal:k,messages:T});case 62:if(!T.length){r.next=65;break}return O=wn(m,t),r.abrupt("return",{nextStep:O,messages:T});case 65:return e=m.getValuesAfterProceed(),r.abrupt("return",On(t,e,n));case 69:return r.prev=69,r.t2=r.catch(50),r.abrupt("return",xn(r.t2,u,m));case 72:case"end":return r.stop()}}),r,null,[[12,34,37,40],[18,24],[50,69]])})))}function Sn(t){return t.charAt(0).toUpperCase()+t.substring(1)}function _n(t){return t.value.find((function(t){return"authenticator"===t.name}))}var En=function(){function t(e){var n,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};u()(this,t),r.authenticators=(null===(n=r.authenticators)||void 0===n?void 0:n.map((function(t){return"string"==typeof t?{type:t}:t})))||[],this.values=r,this.remediation=e}return c()(t,[{key:"getName",value:function(){return this.remediation.name}},{key:"canRemediate",value:function(){var t=this;return!!this.map&&!this.remediation.value.reduce((function(t,e){return e.required&&t.push(e.name),t}),[]).find((function(e){return!t.hasData(e)}))}},{key:"getData",value:function(t){var e=this;if(!t)return this.remediation.value.map((function(t){return t.name})).reduce((function(t,n){return t[n]=e.getData(n),t}),{});if("function"==typeof this["map".concat(Sn(t))])return this["map".concat(Sn(t))](this.remediation.value.find((function(e){return e.name===t})));if(!this.map)return this.values[t];var n=this.map[t];if(!n)return this.values[t];for(var r=0;r<n.length;r++){var o=this.values[n[r]];if(o)return o}}},{key:"hasData",value:function(t){var e=this.getData(t);return"object"===M()(e)?!!Object.keys(e).find((function(t){return!!e[t]})):!!e}},{key:"getNextStep",value:function(){var t=this.getName(),e=this.getRelatesToType(),n=this.getInputs();return Object.assign({name:t,inputs:n},e&&{type:e})}},{key:"getInputs",value:function(){var t=this;return this.map?Object.keys(this.map).reduce((function(e,n){var r,o=t.remediation.value.find((function(t){return t.name===n}));if(!o)return e;var i=t.map[n],a=o.type;if("function"==typeof t["getInput".concat(Sn(n))])r=t["getInput".concat(Sn(n))](o);else if("object"!==a){var u;(u=1===i.length?i[0]:i.find((function(e){return Object.keys(t.values).includes(e)})))&&(r=Object.assign(Object.assign({},o),{name:u}))}if(!r)throw new ut.c("Missing custom getInput".concat(Sn(n)," method in Remediator: ").concat(t.getName()));return Array.isArray(r)?r.forEach((function(t){return e.push(t)})):e.push(r),e}),[]):[]}},{key:"getMessages",value:function(){var t,e;if(this.remediation.value)return null===(e=null===(t=this.remediation.value[0])||void 0===t?void 0:t.form)||void 0===e?void 0:e.value.reduce((function(t,e){return e.messages&&(t=[].concat(pn()(t),pn()(e.messages.value))),t}),[])}},{key:"getValuesAfterProceed",value:function(){var t,e=this.getRelatesToType(),n=null===(t=this.values.authenticators)||void 0===t?void 0:t.filter((function(t){return t.type!==e}));return Object.assign(Object.assign({},this.values),{authenticators:n})}},{key:"getRelatesToType",value:function(){var t;return null===(t=this.remediation.relatesTo)||void 0===t?void 0:t.value.type}}]),t}(),An=n(6),jn=n.n(An),Rn=n(7),Pn=n.n(Rn),Cn=n(3),In=n.n(Cn);var Mn=function(t){jn()(n,t);var e=function(t){var e=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}();return function(){var n,r=In()(t);if(e){var o=In()(this).constructor;n=Reflect.construct(r,arguments,o)}else n=r.apply(this,arguments);return Pn()(this,n)}}(n);function n(){var t;return u()(this,n),(t=e.apply(this,arguments)).map={credentials:[]},t}return c()(n,[{key:"canRemediate",value:function(){var t=this.getRelatesToType();return!(!this.values.verificationCode||!["email","phone"].includes(t))||!(!this.values.password||"password"!==t)}},{key:"mapCredentials",value:function(){return{passcode:this.values.verificationCode||this.values.password}}},{key:"getInputCredentials",value:function(t){var e="password"===this.getRelatesToType()?"password":"verificationCode";return Object.assign(Object.assign({},t.form.value[0]),{name:e,type:"string",required:t.required})}}]),n}(En);Mn.remediationName="challenge-authenticator";var Un=function(t){jn()(n,t);var e=function(t){var e=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}();return function(){var n,r=In()(t);if(e){var o=In()(this).constructor;n=Reflect.construct(r,arguments,o)}else n=r.apply(this,arguments);return Pn()(this,n)}}(n);function n(){return u()(this,n),e.apply(this,arguments)}return n}(Mn);Un.remediationName="enroll-authenticator";var Ln=function(t){jn()(n,t);var e=function(t){var e=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}();return function(){var n,r=In()(t);if(e){var o=In()(this).constructor;n=Reflect.construct(r,arguments,o)}else n=r.apply(this,arguments);return Pn()(this,n)}}(n);function n(){return u()(this,n),e.apply(this,arguments)}return n}(Mn);Ln.remediationName="challenge-authenticator";var Fn=function(t){jn()(n,t);var e=function(t){var e=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}();return function(){var n,r=In()(t);if(e){var o=In()(this).constructor;n=Reflect.construct(r,arguments,o)}else n=r.apply(this,arguments);return Pn()(this,n)}}(n);function n(){return u()(this,n),e.apply(this,arguments)}return n}(Mn);Fn.remediationName="reset-authenticator";var Nn=n(210),Dn=n.n(Nn);var Bn=function(t){jn()(n,t);var e=function(t){var e=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}();return function(){var n,r=In()(t);if(e){var o=In()(this).constructor;n=Reflect.construct(r,arguments,o)}else n=r.apply(this,arguments);return Pn()(this,n)}}(n);function n(){var t;return u()(this,n),(t=e.apply(this,arguments)).map={userProfile:[]},t}return c()(n,[{key:"mapUserProfile",value:function(t){var e=this;return t.form.value.map((function(t){return t.name})).reduce((function(t,n){return e.values[n]?Object.assign(Object.assign({},t),Dn()({},n,e.values[n])):t}),{})}},{key:"getInputUserProfile",value:function(t){return pn()(t.form.value)}},{key:"getErrorMessages",value:function(t){return t.value[0].form.value.reduce((function(t,e){return e.messages&&t.push(e.messages.value[0].message),t}),[])}}]),n}(En);Bn.remediationName="enroll-profile";var qn=n(18),Hn=n.n(qn);var Kn=function(t){jn()(n,t);var e=function(t){var e=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}();return function(){var n,r=In()(t);if(e){var o=In()(this).constructor;n=Reflect.construct(r,arguments,o)}else n=r.apply(this,arguments);return Pn()(this,n)}}(n);function n(t,r){var o;u()(this,n),(o=e.call(this,t,r)).map={identifier:["username"],credentials:[]};var i=o.values,a=i.password,s=i.authenticators;return a&&!s.some((function(t){return"password"===t.type}))&&(o.values=Object.assign(Object.assign({},o.values),{authenticators:[{type:"password"}].concat(pn()(s))})),o}return c()(n,[{key:"canRemediate",value:function(){return!!this.getData().identifier}},{key:"mapCredentials",value:function(){return{passcode:this.values.password}}},{key:"getInputCredentials",value:function(t){return Object.assign(Object.assign({},t.form.value[0]),{name:"password",required:t.required})}},{key:"getValuesAfterProceed",value:function(){var t;if(this.remediation.value.some((function(t){return"credentials"===t.name}))){var e=null===(t=this.values.authenticators)||void 0===t?void 0:t.filter((function(t){return"password"!==t.type}));return Object.assign(Object.assign({},this.values),{authenticators:e})}return Hn()(In()(n.prototype),"getValuesAfterProceed",this).call(this)}}]),n}(En);Kn.remediationName="identify";var Vn=function(t){jn()(n,t);var e=function(t){var e=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}();return function(){var n,r=In()(t);if(e){var o=In()(this).constructor;n=Reflect.construct(r,arguments,o)}else n=r.apply(this,arguments);return Pn()(this,n)}}(n);function n(){var t;return u()(this,n),(t=e.apply(this,arguments)).map={credentials:[]},t}return c()(n,[{key:"mapCredentials",value:function(){return{passcode:this.values.newPassword}}},{key:"getInputCredentials",value:function(t){var e="password"===this.getRelatesToType()?"newPassword":"verificationCode";return Object.assign(Object.assign({},t.form.value[0]),{name:e})}}]),n}(En);Vn.remediationName="reenroll-authenticator";var Yn=function(t){jn()(n,t);var e=function(t){var e=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}();return function(){var n,r=In()(t);if(e){var o=In()(this).constructor;n=Reflect.construct(r,arguments,o)}else n=r.apply(this,arguments);return Pn()(this,n)}}(n);function n(){return u()(this,n),e.apply(this,arguments)}return c()(n,[{key:"canRemediate",value:function(){return!1}},{key:"getNextStep",value:function(){var t=this.remediation;return{name:t.name,type:t.type,idp:t.idp,href:t.href}}}]),n}(En);function zn(t,e){(null==e||e>t.length)&&(e=t.length);for(var n=0,r=new Array(e);n<e;n++)r[n]=t[n];return r}function Gn(t,e){var n,r,o=function(t,e){var n="undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(!n){if(Array.isArray(t)||(n=function(t,e){if(t){if("string"==typeof t)return zn(t,e);var n=Object.prototype.toString.call(t).slice(8,-1);return"Object"===n&&t.constructor&&(n=t.constructor.name),"Map"===n||"Set"===n?Array.from(t):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?zn(t,e):void 0}}(t))||e&&t&&"number"==typeof t.length){n&&(t=n);var r=0,o=function(){};return{s:o,n:function(){return r>=t.length?{done:!0}:{done:!1,value:t[r++]}},e:function(t){throw t},f:o}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var i,a=!0,u=!1;return{s:function(){n=n.call(t)},n:function(){var t=n.next();return a=t.done,t},e:function(t){u=!0,i=t},f:function(){try{a||null==n.return||n.return()}finally{if(u)throw i}}}}(t);try{var i=function(){var t=r.value;if(n=e.find((function(e){return e.relatesTo.type===t.type})))return"break"};for(o.s();!(r=o.n()).done&&"break"!==i(););}catch(t){o.e(t)}finally{o.f()}return n}Yn.remediationName="redirect-idp";var Jn=function(t){jn()(n,t);var e=function(t){var e=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}();return function(){var n,r=In()(t);if(e){var o=In()(this).constructor;n=Reflect.construct(r,arguments,o)}else n=r.apply(this,arguments);return Pn()(this,n)}}(n);function n(t){var r,o=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};u()(this,n),(r=e.call(this,t,o)).map={authenticator:[]};var i=r.values,a=i.authenticator,s=i.authenticators,c=null==s?void 0:s.some((function(t){return t.type===a}));return a&&!c&&(r.values.authenticators=[].concat(pn()(s||[]),[{type:a}])),r}return c()(n,[{key:"canRemediate",value:function(){var t=this.values.authenticators,e=_n(this.remediation).options;return!(!t||!t.length||!Gn(t,e))}},{key:"getNextStep",value:function(){var t=Hn()(In()(n.prototype),"getNextStep",this).call(this),e=_n(this.remediation).options.map((function(t){return{label:t.label,value:t.relatesTo.type}}));return Object.assign(Object.assign({},t),{options:e})}},{key:"mapAuthenticator",value:function(t){var e=Gn(this.values.authenticators,t.options);return{id:null==e?void 0:e.value.form.value.find((function(t){return"id"===t.name})).value}}},{key:"getInputAuthenticator",value:function(){return{name:"authenticator",type:"string"}}}]),n}(En);var Wn=function(t){jn()(n,t);var e=function(t){var e=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}();return function(){var n,r=In()(t);if(e){var o=In()(this).constructor;n=Reflect.construct(r,arguments,o)}else n=r.apply(this,arguments);return Pn()(this,n)}}(n);function n(){return u()(this,n),e.apply(this,arguments)}return n}(Jn);Wn.remediationName="select-authenticator-authenticate";var $n=function(t){jn()(n,t);var e=function(t){var e=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}();return function(){var n,r=In()(t);if(e){var o=In()(this).constructor;n=Reflect.construct(r,arguments,o)}else n=r.apply(this,arguments);return Pn()(this,n)}}(n);function n(){return u()(this,n),e.apply(this,arguments)}return n}(Jn);$n.remediationName="select-authenticator-enroll";var Xn=function(t){jn()(n,t);var e=function(t){var e=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}();return function(){var n,r=In()(t);if(e){var o=In()(this).constructor;n=Reflect.construct(r,arguments,o)}else n=r.apply(this,arguments);return Pn()(this,n)}}(n);function n(){return u()(this,n),e.apply(this,arguments)}return c()(n,[{key:"canRemediate",value:function(){return!0}}]),n}(En);Xn.remediationName="select-enroll-profile";var Zn=function(t){jn()(n,t);var e=function(t){var e=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}();return function(){var n,r=In()(t);if(e){var o=In()(this).constructor;n=Reflect.construct(r,arguments,o)}else n=r.apply(this,arguments);return Pn()(this,n)}}(n);function n(t){var r,o,i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};u()(this,n),(r=e.call(this,t,i)).map={authenticator:[]};var a=r.values.authenticators,s=r.getRelatesToType(),c=null===(o=a)||void 0===o?void 0:o.find((function(t){return t.type===s}));return r.values.authenticators=c?a.map((function(t){return s===t.type?r.mapAuthenticatorFromValues(t):t})):[].concat(pn()(a),[r.mapAuthenticatorFromValues()]),r}return c()(n,[{key:"getNextStep",value:function(){var t=Hn()(In()(n.prototype),"getNextStep",this).call(this),e=this.getMethodTypes();return Object.assign(Object.assign({},t),e&&{options:e})}},{key:"getAuthenticatorFromValues",value:function(){if(!this.values.authenticators)return null;var t=this.getRelatesToType();return this.values.authenticators.find((function(e){return e.type===t}))}},{key:"mapAuthenticatorFromValues",value:function(t){var e=this.getRelatesToType(),n=this.values.methodType;return Object.assign(Object.assign({type:e},t&&t),n&&{methodType:n})}},{key:"getAuthenticatorFromRemediation",value:function(){return this.remediation.value.find((function(t){return"authenticator"===t.name}))}},{key:"getMethodTypes",value:function(){var t;return null===(t=this.getAuthenticatorFromRemediation().form.value.find((function(t){return"methodType"===t.name})))||void 0===t?void 0:t.options}}]),n}(En);var Qn=function(t){jn()(n,t);var e=function(t){var e=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}();return function(){var n,r=In()(t);if(e){var o=In()(this).constructor;n=Reflect.construct(r,arguments,o)}else n=r.apply(this,arguments);return Pn()(this,n)}}(n);function n(){return u()(this,n),e.apply(this,arguments)}return c()(n,[{key:"canRemediate",value:function(){var t=this.getAuthenticatorFromValues();return!(!t||!t.methodType)}},{key:"mapAuthenticator",value:function(){var t=this.getAuthenticatorFromRemediation(),e=this.getAuthenticatorFromValues();return{id:t.form.value.find((function(t){return"id"===t.name})).value,enrollmentId:t.form.value.find((function(t){return"enrollmentId"===t.name})).value,methodType:e.methodType}}},{key:"getInputAuthenticator",value:function(){var t=this.getAuthenticatorFromRemediation(),e=t.form.value.find((function(t){return"methodType"===t.name}));return e&&e.options?{name:"methodType",type:"string",required:!0}:pn()(t.form.value)}}]),n}(Zn);Qn.remediationName="authenticator-verification-data";var tr=function(t){jn()(n,t);var e=function(t){var e=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}();return function(){var n,r=In()(t);if(e){var o=In()(this).constructor;n=Reflect.construct(r,arguments,o)}else n=r.apply(this,arguments);return Pn()(this,n)}}(n);function n(){return u()(this,n),e.apply(this,arguments)}return c()(n,[{key:"canRemediate",value:function(){var t=this.getAuthenticatorFromValues();return!!(t&&t.methodType&&t.phoneNumber)}},{key:"mapAuthenticator",value:function(){var t=this.getAuthenticatorFromValues();return{id:_n(this.remediation).form.value.find((function(t){return"id"===t.name})).value,methodType:t.methodType,phoneNumber:t.phoneNumber}}},{key:"getInputAuthenticator",value:function(){return[{name:"methodType",type:"string",required:!0},{name:"phoneNumber",type:"string",required:!0}]}},{key:"mapAuthenticatorFromValues",value:function(t){t=Hn()(In()(n.prototype),"mapAuthenticatorFromValues",this).call(this,t);var e=this.values.phoneNumber;return Object.assign(Object.assign({},t),e&&{phoneNumber:e})}}]),n}(Zn);tr.remediationName="authenticator-enrollment-data";var er=function(t){jn()(n,t);var e=function(t){var e=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}();return function(){var n,r=In()(t);if(e){var o=In()(this).constructor;n=Reflect.construct(r,arguments,o)}else n=r.apply(this,arguments);return Pn()(this,n)}}(n);function n(){return u()(this,n),e.apply(this,arguments)}return c()(n,[{key:"canRemediate",value:function(){return!!this.values.skip}}]),n}(En);function nr(t,e){(null==e||e>t.length)&&(e=t.length);for(var n=0,r=new Array(e);n<e;n++)r[n]=t[n];return r}er.remediationName="skip";function rr(t){var e=[],n=t.actions,r=t.neededToProceed;return n["currentAuthenticator-recover"]&&e.push(gt.PASSWORD_RECOVERY),r.some((function(t){return"select-enroll-profile"===t.name}))&&e.push(gt.REGISTRATION),r.some((function(t){return"redirect-idp"===t.name}))&&e.push(gt.SOCIAL_IDP),e}function or(t){var e,n=[],r=Object.values(o).reduce((function(t,e){return e.remediationName&&(t[e.remediationName]=e),t}),{}),i=function(t,e){var n="undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(!n){if(Array.isArray(t)||(n=function(t,e){if(t){if("string"==typeof t)return nr(t,e);var n=Object.prototype.toString.call(t).slice(8,-1);return"Object"===n&&t.constructor&&(n=t.constructor.name),"Map"===n||"Set"===n?Array.from(t):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?nr(t,e):void 0}}(t))||e&&t&&"number"==typeof t.length){n&&(t=n);var r=0,o=function(){};return{s:o,n:function(){return r>=t.length?{done:!0}:{done:!1,value:t[r++]}},e:function(t){throw t},f:o}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var i,a=!0,u=!1;return{s:function(){n=n.call(t)},n:function(){var t=n.next();return a=t.done,t},e:function(t){u=!0,i=t},f:function(){try{a||null==n.return||n.return()}finally{if(u)throw i}}}}(t);try{for(i.s();!(e=i.n()).done;){var a=e.value,u=r[a.name];if(u){var s=new u(a);n.push(s.getNextStep())}}}catch(t){i.e(t)}finally{i.f()}return n}function ir(t,e){return function(t,e,n,r){return new(n||(n=Promise))((function(o,i){function a(t){try{s(r.next(t))}catch(t){i(t)}}function u(t){try{s(r.throw(t))}catch(t){i(t)}}function s(t){var e;t.done?o(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(a,u)}s((r=r.apply(t,e||[])).next())}))}(this,void 0,void 0,l.a.mark((function n(){var r,o,i,a,u,s,c,f,h,p,d,v,y,g,m,b,w,x,k,T,O,S,_,E,A,j;return l.a.wrap((function(n){for(;;)switch(n.prev=n.next){case 0:return f=yt.PENDING,h=!1,n.prev=2,n.next=5,fn(t,e);case 5:return p=n.sent,d=p.interactionHandle,v=p.meta,n.next=10,ln(t,{interactionHandle:d});case 10:if(y=n.sent,e.flow||e.actions){n.next=17;break}u=v,s=rr(y),c=or(y.neededToProceed),n.next=46;break;case 17:return g=Object.assign(Object.assign({},e),{stateHandle:y.rawIdxState.stateHandle}),n.next=20,On(y,g,e);case 20:if(m=n.sent,b=m.idxResponse,w=m.nextStep,x=m.terminal,k=m.canceled,T=m.messages,i=T,(o=w)&&b&&t.transactionManager.saveIdxResponse(b.rawIdxState),x&&(f=yt.TERMINAL,h=!0),!k){n.next=35;break}f=yt.CANCELED,h=!0,n.next=46;break;case 35:if(!(null==b?void 0:b.interactionCode)){n.next=46;break}return n.next=38,e.flowMonitor.isFinished();case 38:if(n.sent){n.next=40;break}throw new ut.c("Current flow is not supported, check policy settings in your org.");case 40:return O=v.clientId,S=v.codeVerifier,_=v.ignoreSignature,E=v.redirectUri,A=v.urls,j=v.scopes,n.next=43,t.token.exchangeCodeForTokens({interactionCode:b.interactionCode,clientId:O,codeVerifier:S,ignoreSignature:_,redirectUri:E,scopes:j},A);case 43:r=n.sent,f=yt.SUCCESS,h=!0;case 46:n.next=53;break;case 48:n.prev=48,n.t0=n.catch(2),a=n.t0,f=yt.FAILURE,h=!0;case 53:return h&&t.transactionManager.clear(),n.abrupt("return",Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({status:f},u&&{meta:u}),s&&{enabledFeatures:s}),c&&{availableSteps:c}),r&&{tokens:r.tokens}),o&&{nextStep:o}),i&&{messages:i}),a&&{error:a}));case 55:case"end":return n.stop()}}),n,null,[[2,48]])})))}var ar=function(){function t(e){u()(this,t),this.authClient=e}return c()(t,[{key:"loopDetected",value:function(t){return this.previousRemediator&&this.previousRemediator.getName()===t.getName()||(this.previousRemediator=t,!1)}},{key:"isRemediatorCandidate",value:function(t,e,n){var r=t.getName();return!(!n.skip&&"skip"===r||n.skip&&"skip"!==r)}},{key:"trackRemediations",value:function(t){return function(t,e,n,r){return new(n||(n=Promise))((function(o,i){function a(t){try{s(r.next(t))}catch(t){i(t)}}function u(t){try{s(r.throw(t))}catch(t){i(t)}}function s(t){var e;t.done?o(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(a,u)}s((r=r.apply(t,e||[])).next())}))}(this,void 0,void 0,l.a.mark((function e(){var n,r;return l.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,on(this.authClient);case 2:n=e.sent,r=n.remediations||[],n=Object.assign(Object.assign({},n),{remediations:[].concat(pn()(r),[t])}),an(this.authClient,n);case 6:case"end":return e.stop()}}),e,this)})))}},{key:"isFinished",value:function(){return Promise.resolve(!0)}}]),t}();var ur=function(t){jn()(n,t);var e=function(t){var e=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}();return function(){var n,r=In()(t);if(e){var o=In()(this).constructor;n=Reflect.construct(r,arguments,o)}else n=r.apply(this,arguments);return Pn()(this,n)}}(n);function n(){return u()(this,n),e.apply(this,arguments)}return c()(n,[{key:"isRemediatorCandidate",value:function(t,e,r){var o,i=null===(o=this.previousRemediator)||void 0===o?void 0:o.getName();return("select-authenticator-enroll"!==t.getName()||!["select-authenticator-enroll","authenticator-enrollment-data"].includes(i))&&Hn()(In()(n.prototype),"isRemediatorCandidate",this).call(this,t,e,r)}}]),n}(ar);var sr=function(t){jn()(n,t);var e=function(t){var e=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}();return function(){var n,r=In()(t);if(e){var o=In()(this).constructor;n=Reflect.construct(r,arguments,o)}else n=r.apply(this,arguments);return Pn()(this,n)}}(n);function n(){return u()(this,n),e.apply(this,arguments)}return c()(n,[{key:"isRemediatorCandidate",value:function(t,e,r){var o,i=null===(o=this.previousRemediator)||void 0===o?void 0:o.getName(),a=t.getName();return("select-authenticator-authenticate"!==a||!["select-authenticator-authenticate"].includes(i))&&("select-authenticator-authenticate"!==a||!e.some((function(t){return"challenge-authenticator"===t.name})))&&("select-authenticator-enroll"!==a||!["select-authenticator-enroll","authenticator-enrollment-data"].includes(i))&&Hn()(In()(n.prototype),"isRemediatorCandidate",this).call(this,t,e,r)}}]),n}(ar);var cr=function(t){jn()(n,t);var e=function(t){var e=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}();return function(){var n,r=In()(t);if(e){var o=In()(this).constructor;n=Reflect.construct(r,arguments,o)}else n=r.apply(this,arguments);return Pn()(this,n)}}(n);function n(){return u()(this,n),e.apply(this,arguments)}return c()(n,[{key:"isRemediatorCandidate",value:function(t,e,r){var o,i=null===(o=this.previousRemediator)||void 0===o?void 0:o.getName(),a=t.getName();return("select-authenticator-authenticate"!==a||!["select-authenticator-authenticate","reenroll-authenticator"].includes(i))&&("select-authenticator-authenticate"!==a||!e.some((function(t){return"challenge-authenticator"===t.name})))&&Hn()(In()(n.prototype),"isRemediatorCandidate",this).call(this,t,e,r)}},{key:"isFinished",value:function(){var t=this,e=Object.create(null,{isFinished:{get:function(){return Hn()(In()(n.prototype),"isFinished",t)}}});return function(t,e,n,r){return new(n||(n=Promise))((function(o,i){function a(t){try{s(r.next(t))}catch(t){i(t)}}function u(t){try{s(r.throw(t))}catch(t){i(t)}}function s(t){var e;t.done?o(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(a,u)}s((r=r.apply(t,e||[])).next())}))}(this,void 0,void 0,l.a.mark((function t(){return l.a.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,on(this.authClient);case 2:if(t.sent.remediations.includes("reset-authenticator")){t.next=6;break}return t.abrupt("return",!1);case 6:return t.next=8,e.isFinished.call(this);case 8:return t.abrupt("return",t.sent);case 9:case"end":return t.stop()}}),t,this)})))}}]),n}(ar),fr={identify:Kn,"select-authenticator-authenticate":Wn,"select-authenticator-enroll":$n,"authenticator-enrollment-data":tr,"authenticator-verification-data":Qn,"enroll-authenticator":Un,"challenge-authenticator":Ln,"reenroll-authenticator":Vn,"redirect-idp":Yn};function lr(t,e){return function(t,e,n,r){return new(n||(n=Promise))((function(o,i){function a(t){try{s(r.next(t))}catch(t){i(t)}}function u(t){try{s(r.throw(t))}catch(t){i(t)}}function s(t){var e;t.done?o(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(a,u)}s((r=r.apply(t,e||[])).next())}))}(this,void 0,void 0,l.a.mark((function n(){var r;return l.a.wrap((function(n){for(;;)switch(n.prev=n.next){case 0:return r=new sr(t),n.abrupt("return",ir(t,Object.assign(Object.assign({},e),{flow:fr,flowMonitor:r})));case 2:case"end":return n.stop()}}),n)})))}function hr(t,e){return function(t,e,n,r){return new(n||(n=Promise))((function(o,i){function a(t){try{s(r.next(t))}catch(t){i(t)}}function u(t){try{s(r.throw(t))}catch(t){i(t)}}function s(t){var e;t.done?o(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(a,u)}s((r=r.apply(t,e||[])).next())}))}(this,void 0,void 0,l.a.mark((function n(){return l.a.wrap((function(n){for(;;)switch(n.prev=n.next){case 0:return n.abrupt("return",ir(t,Object.assign(Object.assign({},e),{actions:["cancel"]})));case 1:case"end":return n.stop()}}),n)})))}var pr=function(t,e,n,r){return new(n||(n=Promise))((function(o,i){function a(t){try{s(r.next(t))}catch(t){i(t)}}function u(t){try{s(r.throw(t))}catch(t){i(t)}}function s(t){var e;t.done?o(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(a,u)}s((r=r.apply(t,e||[])).next())}))};function dr(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return pr(this,void 0,void 0,l.a.mark((function n(){return l.a.wrap((function(n){for(;;)switch(n.prev=n.next){case 0:return n.abrupt("return",ir(t,e));case 1:case"end":return n.stop()}}),n)})))}var vr={"select-enroll-profile":Xn,"enroll-profile":Bn,"authenticator-enrollment-data":tr,"select-authenticator-enroll":$n,"enroll-authenticator":Un,skip:er};function yr(t,e){return function(t,e,n,r){return new(n||(n=Promise))((function(o,i){function a(t){try{s(r.next(t))}catch(t){i(t)}}function u(t){try{s(r.throw(t))}catch(t){i(t)}}function s(t){var e;t.done?o(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(a,u)}s((r=r.apply(t,e||[])).next())}))}(this,void 0,void 0,l.a.mark((function n(){var r,o,i,a;return l.a.wrap((function(n){for(;;)switch(n.prev=n.next){case 0:if(rn(t)){n.next=8;break}return n.next=3,dr(t,e);case 3:if(r=n.sent,!(o=r.enabledFeatures)||o.includes(gt.REGISTRATION)){n.next=8;break}return i=new ut.c("Registration is not supported based on your current org configuration."),n.abrupt("return",{status:yt.FAILURE,error:i});case 8:return a=new ur(t),n.abrupt("return",ir(t,Object.assign(Object.assign({},e),{flow:vr,flowMonitor:a})));case 10:case"end":return n.stop()}}),n)})))}var gr={identify:Kn,"identify-recovery":Kn,"select-authenticator-authenticate":Wn,"challenge-authenticator":Ln,"authenticator-verification-data":Qn,"reset-authenticator":Fn,"reenroll-authenticator":Vn};function mr(t,e){return function(t,e,n,r){return new(n||(n=Promise))((function(o,i){function a(t){try{s(r.next(t))}catch(t){i(t)}}function u(t){try{s(r.throw(t))}catch(t){i(t)}}function s(t){var e;t.done?o(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(a,u)}s((r=r.apply(t,e||[])).next())}))}(this,void 0,void 0,l.a.mark((function n(){var r;return l.a.wrap((function(n){for(;;)switch(n.prev=n.next){case 0:return r=new cr(t),n.abrupt("return",ir(t,Object.assign(Object.assign({},e),{flow:gr,flowMonitor:r,actions:["currentAuthenticator-recover","currentAuthenticatorEnrollment-recover"]})));case 2:case"end":return n.stop()}}),n)})))}function br(t,e){return function(t,e,n,r){return new(n||(n=Promise))((function(o,i){function a(t){try{s(r.next(t))}catch(t){i(t)}}function u(t){try{s(r.throw(t))}catch(t){i(t)}}function s(t){var e;t.done?o(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(a,u)}s((r=r.apply(t,e||[])).next())}))}(this,void 0,void 0,l.a.mark((function n(){var r,o,i,a,u,s,c,f,h,p;return l.a.wrap((function(n){for(;;)switch(n.prev=n.next){case 0:if(r=t.transactionManager.load()){n.next=3;break}throw new ut.c("No transaction data was found in storage");case 3:if(o=r.codeVerifier,i=r.state,a=new URL(e),u=a.searchParams,s=u.get("state"),c=u.get("interaction_code"),!(f=u.get("error"))){n.next=10;break}throw new ut.d(f,u.get("error_description"));case 10:if(s===i){n.next=12;break}throw new ut.c("State in redirect uri does not match with transaction state");case 12:if(c){n.next=14;break}throw new ut.c("Unable to parse interaction_code from the url");case 14:return n.next=16,t.token.exchangeCodeForTokens({interactionCode:c,codeVerifier:o});case 16:h=n.sent,p=h.tokens,t.tokenManager.setTokens(p);case 19:case"end":return n.stop()}}),n)})))}var wr=n(211),xr=function(t,e,n,r){return new(n||(n=Promise))((function(o,i){function a(t){try{s(r.next(t))}catch(t){i(t)}}function u(t){try{s(r.throw(t))}catch(t){i(t)}}function s(t){var e;t.done?o(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(a,u)}s((r=r.apply(t,e||[])).next())}))},kr=function(t,e){var n={};for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&e.indexOf(r)<0&&(n[r]=t[r]);if(null!=t&&"function"==typeof Object.getOwnPropertySymbols){var o=0;for(r=Object.getOwnPropertySymbols(t);o<r.length;o++)e.indexOf(r[o])<0&&Object.prototype.propertyIsEnumerable.call(t,r[o])&&(n[r[o]]=t[r[o]])}return n},Tr=n(413),Or=function(){function t(e){var n=this;u()(this,t),this.options=function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return Te(t),t=tn(Qe(),t),Object(U.t)({issuer:Object(U.u)(t.issuer),tokenUrl:Object(U.u)(t.tokenUrl),authorizeUrl:Object(U.u)(t.authorizeUrl),userinfoUrl:Object(U.u)(t.userinfoUrl),revokeUrl:Object(U.u)(t.revokeUrl),logoutUrl:Object(U.u)(t.logoutUrl),clientId:t.clientId,redirectUri:t.redirectUri,state:t.state,scopes:t.scopes,postLogoutRedirectUri:t.postLogoutRedirectUri,responseMode:t.responseMode,responseType:t.responseType,pkce:!1!==t.pkce,useInteractionCodeFlow:t.useInteractionCodeFlow,httpRequestClient:t.httpRequestClient,transformErrorXHR:t.transformErrorXHR,transformAuthState:t.transformAuthState,restoreOriginalUri:t.restoreOriginalUri,storageUtil:t.storageUtil,headers:t.headers,devMode:!!t.devMode,storageManager:t.storageManager,cookies:Object(mt.isBrowser)()?Ze(t,Object(mt.isHTTPS)()):t.cookies,ignoreSignature:!!t.ignoreSignature,clientSecret:t.clientSecret})}(e);var r=this.options,o=r.storageManager,i=r.cookies,a=r.storageUtil;this.storageManager=new Ke(o,i,a),this.transactionManager=new Ye(Object.assign({storageManager:this.storageManager},e.transactionManager)),this._oktaUserAgent=new wr.a,this.tx={status:J.bind(null,this),resume:W.bind(null,this),exists:Object.assign(X.bind(null,this),{_get:function(t){return a.storage.get(t)}}),introspect:$.bind(null,this)},this.pkce={DEFAULT_CODE_CHALLENGE_METHOD:et.DEFAULT_CODE_CHALLENGE_METHOD,generateVerifier:et.generateVerifier,computeChallenge:et.computeChallenge},Object.assign(this.options.storageUtil,{getPKCEStorage:this.storageManager.getLegacyPKCEStorage.bind(this.storageManager),getHttpCache:this.storageManager.getHttpCache.bind(this.storageManager)}),this._pending={handleLogin:!1},Object(mt.isBrowser)()?(this.options=Object.assign(this.options,{redirectUri:Object(U.v)(e.redirectUri,window.location.origin)}),this.userAgent=Oe(e,"okta-auth-js/".concat("5.5.0"))):this.userAgent=Oe(e,"okta-auth-js-server/".concat("5.5.0")),e.maxClockSkew||0===e.maxClockSkew?this.options.maxClockSkew=e.maxClockSkew:this.options.maxClockSkew=d,this.options.ignoreLifetime=!!e.ignoreLifetime,this.session={close:ot.bind(null,this),exists:nt.bind(null,this),get:rt.bind(null,this),refresh:it.bind(null,this),setCookieAndRedirect:at.bind(null,this)},this._tokenQueue=new Ue,this.token={prepareTokenParams:Ht.bind(null,this),exchangeCodeForTokens:ae.bind(null,this),getWithoutPrompt:fe.bind(null,this),getWithPopup:ge.bind(null,this),getWithRedirect:me.bind(null,this),parseFromUrl:be.bind(null,this),decode:oe,revoke:ie.bind(null,this),renew:de.bind(null,this),renewTokensWithRefresh:le.bind(null,this),renewTokens:ve.bind(null,this),getUserInfo:ye.bind(null,this),verify:ue.bind(null,this),isLoginRedirect:Bt.bind(null,this)};var s,c,f=["decode","isLoginRedirect"];Object.keys(this.token).forEach((function(t){if(!(f.indexOf(t)>=0)){var e=n.token[t];n.token[t]=Ue.prototype.push.bind(n._tokenQueue,e,null)}})),Object.assign(this.token.getWithRedirect,{_setLocation:function(t){window.location=t}}),Object.assign(this.token.parseFromUrl,{_getHistory:function(){return window.history},_getLocation:function(){return window.location},_getDocument:function(){return window.document}}),this.idx={interact:fn.bind(null,this),introspect:ln.bind(null,this),authenticate:lr.bind(null,this),register:yr.bind(null,this),cancel:hr.bind(null,this),recoverPassword:mr.bind(null,this),handleInteractionCodeRedirect:br.bind(null,this),startTransaction:dr.bind(null,this)},c=this,s=function(t){var e=c._oktaUserAgent.getHttpHeader(),n=Object.assign(Object.assign({},e),c.options.headers);Object.keys(n).forEach((function(e){t.headers[e]=n[e]}))},nn.a.client.interceptors.request.use(s),this.http={setRequestHeader:C.bind(null,this)},this.fingerprint=Le.bind(null,this),this.emitter=new Tr,this.tokenManager=new Me(this,e.tokenManager),this.authStateManager=new Be(this)}return c()(t,[{key:"start",value:function(){this.tokenManager.start(),this.token.isLoginRedirect()||this.authStateManager.updateAuthState()}},{key:"stop",value:function(){this.tokenManager.stop()}},{key:"isInteractionRequired",value:function(){return qt(this)}},{key:"isInteractionRequiredError",value:function(t){return Pt(t)}},{key:"signIn",value:function(t){return xr(this,void 0,void 0,l.a.mark((function e(){return l.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.abrupt("return",this.signInWithCredentials(t));case 1:case"end":return e.stop()}}),e,this)})))}},{key:"signInWithCredentials",value:function(t){return xr(this,void 0,void 0,l.a.mark((function e(){var n,r=this;return l.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(t=Object(U.b)(t||{}),n=function(e){return(e=e||{}).withCredentials=!0,delete t.sendFingerprint,Z(r,"/api/v1/authn",t,e)},t.sendFingerprint){e.next=4;break}return e.abrupt("return",n());case 4:return e.abrupt("return",this.fingerprint().then((function(t){return n({headers:{"X-Device-Fingerprint":t}})})));case 5:case"end":return e.stop()}}),e,this)})))}},{key:"signInWithRedirect",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return xr(this,void 0,void 0,l.a.mark((function e(){var n,r,o;return l.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(n=t.originalUri,r=kr(t,["originalUri"]),!this._pending.handleLogin){e.next=3;break}return e.abrupt("return");case 3:return this._pending.handleLogin=!0,e.prev=4,n&&this.setOriginalUri(n),o=Object.assign({scopes:this.options.scopes||["openid","email","profile"]},r),e.next=9,this.token.getWithRedirect(o);case 9:return e.prev=9,this._pending.handleLogin=!1,e.finish(9);case 12:case"end":return e.stop()}}),e,this,[[4,,9,12]])})))}},{key:"closeSession",value:function(){return this.tokenManager.clear(),this.session.close().catch((function(t){if("AuthApiError"===t.name&&"E0000007"===t.errorCode)return null;throw t}))}},{key:"revokeAccessToken",value:function(t){return xr(this,void 0,void 0,l.a.mark((function e(){var n;return l.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(t){e.next=6;break}return e.next=3,this.tokenManager.getTokens();case 3:t=e.sent.accessToken,n=this.tokenManager.getStorageKeyByType("accessToken"),this.tokenManager.remove(n);case 6:if(t){e.next=8;break}return e.abrupt("return",Promise.resolve(null));case 8:return e.abrupt("return",this.token.revoke(t));case 9:case"end":return e.stop()}}),e,this)})))}},{key:"revokeRefreshToken",value:function(t){return xr(this,void 0,void 0,l.a.mark((function e(){var n;return l.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(t){e.next=6;break}return e.next=3,this.tokenManager.getTokens();case 3:t=e.sent.refreshToken,n=this.tokenManager.getStorageKeyByType("refreshToken"),this.tokenManager.remove(n);case 6:if(t){e.next=8;break}return e.abrupt("return",Promise.resolve(null));case 8:return e.abrupt("return",this.token.revoke(t));case 9:case"end":return e.stop()}}),e,this)})))}},{key:"getSignOutRedirectUrl",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},e=t.idToken,n=t.postLogoutRedirectUri,r=t.state;if(e||(e=this.tokenManager.getTokensSync().idToken),!e)return"";n||(n=this.options.postLogoutRedirectUri);var o=jt(this).logoutUrl,i=e.idToken,a=o+"?id_token_hint="+encodeURIComponent(i);return n&&(a+="&post_logout_redirect_uri="+encodeURIComponent(n)),r&&(a+="&state="+encodeURIComponent(r)),a}},{key:"signOut",value:function(t){return xr(this,void 0,void 0,l.a.mark((function e(){var n,r,o,i,a,u,s,c;return l.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(t=Object.assign({},t),n=window.location.origin,r=window.location.href,o=t.postLogoutRedirectUri||this.options.postLogoutRedirectUri||n,i=t.accessToken,a=t.refreshToken,u=!1!==t.revokeAccessToken,(s=!1!==t.revokeRefreshToken)&&void 0===a&&(a=this.tokenManager.getTokensSync().refreshToken),u&&void 0===i&&(i=this.tokenManager.getTokensSync().accessToken),t.idToken||(t.idToken=this.tokenManager.getTokensSync().idToken),this.tokenManager.clear(),!s||!a){e.next=15;break}return e.next=15,this.revokeRefreshToken(a);case 15:if(!u||!i){e.next=18;break}return e.next=18,this.revokeAccessToken(i);case 18:if(c=this.getSignOutRedirectUrl(Object.assign(Object.assign({},t),{postLogoutRedirectUri:o}))){e.next=23;break}return e.abrupt("return",this.closeSession().then((function(){o===r?window.location.reload():window.location.assign(o)})));case 23:window.location.assign(c);case 24:case"end":return e.stop()}}),e,this)})))}},{key:"webfinger",value:function(t){return N(this,"/.well-known/webfinger"+Object(U.w)(t),{headers:{Accept:"application/jrd+json"}})}},{key:"isAuthenticated",value:function(){return xr(this,void 0,void 0,l.a.mark((function t(){var e,n,r,o,i,a;return l.a.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(e=this.tokenManager.getTokensSync(),n=e.accessToken,r=e.idToken,o=this.tokenManager.getOptions(),i=o.autoRenew,a=o.autoRemove,!n||!this.tokenManager.hasExpired(n)){t.next=11;break}if(n=null,!i){t.next=10;break}return t.next=7,this.tokenManager.renew("accessToken");case 7:n=t.sent,t.next=11;break;case 10:a&&this.tokenManager.remove("accessToken");case 11:if(!r||!this.tokenManager.hasExpired(r)){t.next=20;break}if(r=null,!i){t.next=19;break}return t.next=16,this.tokenManager.renew("idToken");case 16:r=t.sent,t.next=20;break;case 19:a&&this.tokenManager.remove("idToken");case 20:return t.abrupt("return",!(!n||!r));case 21:case"end":return t.stop()}}),t,this)})))}},{key:"getUser",value:function(){return xr(this,void 0,void 0,l.a.mark((function t(){var e,n,r;return l.a.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return e=this.tokenManager.getTokensSync(),n=e.idToken,r=e.accessToken,t.abrupt("return",this.token.getUserInfo(r,n));case 2:case"end":return t.stop()}}),t,this)})))}},{key:"getIdToken",value:function(){var t=this.tokenManager.getTokensSync().idToken;return t?t.idToken:void 0}},{key:"getAccessToken",value:function(){var t=this.tokenManager.getTokensSync().accessToken;return t?t.accessToken:void 0}},{key:"getRefreshToken",value:function(){var t=this.tokenManager.getTokensSync().refreshToken;return t?t.refreshToken:void 0}},{key:"storeTokensFromRedirect",value:function(){return xr(this,void 0,void 0,l.a.mark((function t(){var e,n;return l.a.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,this.token.parseFromUrl();case 2:e=t.sent,n=e.tokens,this.tokenManager.setTokens(n);case 5:case"end":return t.stop()}}),t,this)})))}},{key:"setOriginalUri",value:function(t){ke.getSessionStorage().setItem(E,t)}},{key:"getOriginalUri",value:function(){return ke.getSessionStorage().getItem(E)}},{key:"removeOriginalUri",value:function(){ke.getSessionStorage().removeItem(E)}},{key:"isLoginRedirect",value:function(){return Bt(this)}},{key:"handleLoginRedirect",value:function(t){return xr(this,void 0,void 0,l.a.mark((function e(){var n,r;return l.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(!t){e.next=4;break}this.tokenManager.setTokens(t),e.next=10;break;case 4:if(!this.isLoginRedirect()){e.next=9;break}return e.next=7,this.storeTokensFromRedirect();case 7:e.next=10;break;case 9:return e.abrupt("return");case 10:return e.next=12,this.authStateManager.updateAuthState();case 12:if(n=this.getOriginalUri(),this.removeOriginalUri(),!(r=this.options.restoreOriginalUri)){e.next=20;break}return e.next=18,r(this,n);case 18:e.next=21;break;case 20:window.location.replace(n);case 21:case"end":return e.stop()}}),e,this)})))}},{key:"isPKCE",value:function(){return!!this.options.pkce}},{key:"hasResponseType",value:function(t){return Array.isArray(this.options.responseType)&&this.options.responseType.length?this.options.responseType.indexOf(t)>=0:this.options.responseType===t}},{key:"isAuthorizationCodeFlow",value:function(){return this.hasResponseType("code")}},{key:"getIssuerOrigin",value:function(){return this.options.issuer.split("/oauth2/")[0]}},{key:"forgotPassword",value:function(t){return Z(this,"/api/v1/authn/recovery/password",t)}},{key:"unlockAccount",value:function(t){return Z(this,"/api/v1/authn/recovery/unlock",t)}},{key:"verifyRecoveryToken",value:function(t){return Z(this,"/api/v1/authn/recovery/token",t)}}]),t}();Or.features=Or.prototype.features=mt,Object.assign(Or,{constants:r,isInteractionRequiredError:Pt});var Sr=Or}])}},e={};function n(r){var o=e[r];if(void 0!==o)return o.exports;var i=e[r]={exports:{}};return t[r].call(i.exports,i,i.exports,n),i.exports}n.d=(t,e)=>{for(var r in e)n.o(e,r)&&!n.o(t,r)&&Object.defineProperty(t,r,{enumerable:!0,get:e[r]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(t){if("object"==typeof window)return window}}(),n.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),n.r=t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})};var r={};(()=>{"use strict";function t(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var r in n)t[r]=n[r]}return t}n.r(r),n.d(r,{decodeIdToken:()=>A,generateStateToken:()=>B,getAuthClient:()=>R,getAuthConfig:()=>P,getToken:()=>E,handleIdle:()=>D,isEntitled:()=>F,isLoggedIn:()=>O,logout:()=>_,logoutOnly:()=>S,redirectToLogin:()=>j,setAccessTokeninCookie:()=>U,setIdTokenCookie:()=>M,setMaiCookie:()=>C,setOktaIdCookie:()=>I,setTokens:()=>N,updateConfig:()=>L}),n(147),n(310);const e=function e(n,r){function o(e,o,i){if("undefined"!=typeof document){"number"==typeof(i=t({},r,i)).expires&&(i.expires=new Date(Date.now()+864e5*i.expires)),i.expires&&(i.expires=i.expires.toUTCString()),e=encodeURIComponent(e).replace(/%(2[346B]|5E|60|7C)/g,decodeURIComponent).replace(/[()]/g,escape);var a="";for(var u in i)i[u]&&(a+="; "+u,!0!==i[u]&&(a+="="+i[u].split(";")[0]));return document.cookie=e+"="+n.write(o,e)+a}}return Object.create({set:o,get:function(t){if("undefined"!=typeof document&&(!arguments.length||t)){for(var e=document.cookie?document.cookie.split("; "):[],r={},o=0;o<e.length;o++){var i=e[o].split("="),a=i.slice(1).join("=");try{var u=decodeURIComponent(i[0]);if(r[u]=n.read(a,u),t===u)break}catch(t){}}return t?r[t]:r}},remove:function(e,n){o(e,"",t({},n,{expires:-1}))},withAttributes:function(n){return e(this.converter,t({},this.attributes,n))},withConverter:function(n){return e(t({},this.converter,n),this.attributes)}},{attributes:{value:Object.freeze(r)},converter:{value:Object.freeze(n)}})}({read:function(t){return'"'===t[0]&&(t=t.slice(1,-1)),t.replace(/(%[\dA-F]{2})+/gi,decodeURIComponent)},write:function(t){return encodeURIComponent(t).replace(/%(2[346BF]|3[AC-F]|40|5[BDE]|60|7[BCD])/g,decodeURIComponent)}},{path:"/"});var o=n(840),i=n(686),a="idToken",u="accessToken",s="okta-token-storage";function c(){return c=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(t[r]=n[r])}return t},c.apply(this,arguments)}var f=["mai","mlbunifieddata","okta-access-token"],l=function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=c({},t,e);return{clientId:n.clientId,url:n.okta,issuer:n.issuer,redirectUri:"".concat(window.location.origin,"/login"),tokenManager:n.tokenManager||{autoRenew:!1},pkce:!0}};function h(t,n){try{f.forEach((function(t){e.remove(t,{path:"/",domain:n})})),t.tokenManager.clear()}catch(t){console.warn("Warning: removing auth cookies or storage.",t)}}function p(t){return parseInt("".concat(t,"000"),10)}function d(t){return!!t&&new Date(p(t.expiresAt)).getTime()>Date.now()}var v=function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:function(t){return t},e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"",n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];try{t.call(null)}catch(t){throw t.message=e,t.redirect=n,t}},y=function(t){return function(){if(!t)throw new Error}};function g(t,e){t.tokenManager.clear(),t.tokenManager.add(a,e.idToken),t.tokenManager.add(u,e.accessToken);var n=JSON.parse(localStorage.getItem(s));n.id_token=n.idToken,n.access_token=n.accessToken,localStorage.setItem(s,JSON.stringify(n))}function m(t){return t.token.getWithoutPrompt().then((function(e){g(t,e.tokens)})).catch((function(t){return Promise.reject(t)}))}function b(t){var e=t.tokenManager.getSync(a),n=t.tokenManager.getSync(u);v(y(e),"Id token is not set.",!0),v(y(n),"Access token is not set.",!0)}function w(){return w=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(t[r]=n[r])}return t},w.apply(this,arguments)}var x=window.location.hostname.split("."),k=".".concat(x.slice(-2).join(".")),T=new o.OktaAuth(l(i.config)),O=function(){return new Promise((function(t){var n=T.tokenManager.getSync(u),r=T.tokenManager.getSync(a),o=!d(n)||!d(r);return e.get("oktaid")||".mlb.com"!==k?o?"complete"===document.readyState||"loaded"===document.readyState||"interactive"===document.readyState?t(m(T).then((function(){return b(T),{loggedIn:!0,accessToken:T.tokenManager.getSync(u),idToken:T.tokenManager.getSync(a)}})).catch((function(t){v(!1,t,!0)}))):new Promise((function(){window.addEventListener("DOMContentLoaded",(function(){t(m(T).then((function(){return b(T),{loggedIn:!0,accessToken:T.tokenManager.getSync(u),idToken:T.tokenManager.getSync(a)}})).catch((function(t){v(!1,t,!0)})))}),!1)})):t({loggedIn:!0,accessToken:n,idToken:r}):v(!1,"",!0)})).catch((function(t){return h(T,k),Promise.reject(t)}))},S=function(){return h(T,k),T.signOut().catch((function(t){return console.warn(t)}))},_=function(){return S().then((function(){return window.location.reload()}))},E=function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:a,e={access_token:u,id_token:a};try{var n=t.replace(/access_token|id_token/gi,(function(t){return e[t]})),r=T.tokenManager.getSync(n);return r||(console.warn("Client has no ".concat(n,", please check type or login.")),{})}catch(t){return console.warn("Warning: could not get geToken",t),{}}},A=function(){try{var t=E(a).idToken;return t?T.token.decode(t).payload:{}}catch(t){return console.warn("Warning: unable to decode token",t),{}}},j=function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"/login",e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:window.location.pathname,n=t.indexOf("?")>-1,r=n?"&":"?";window.location.assign("".concat(t).concat(r,"redirectUri=").concat(e))},R=function(){return T.tokenManager.get=E,T},P=function(){return i.config},C=function(){var t=["lastName","firstName","birthYear","birthDay","birthMonth","avatar","email"],n={expires:365,path:"/",domain:k},r=A(),o=Object.keys(r).filter((function(e){return-1!==t.indexOf(e)})).filter((function(t){return r[t]})).map((function(t){var e="email"===t?"_email":t,n=r[t];return"".concat(e,"=").concat(n)})).join("&");return e.set("mai",o,n),"mai"},I=function(){var t=new Date((new Date).getTime()+31536e6),n="oktaid",r=A().sub||"",o={expires:t,path:"/",domain:k};return e.set(n,r,o),n},M=function(){var t,n=new Date((new Date).getTime()+6e4),r="okta-id-token",o={claims:(t=E(a).claims||{},{aud:t.aud,sub:t.sub,email:t.email,firstName:t.firstName,lastName:t.lastName,birthYear:t.birthYear,birthMonth:t.birthMonth,birthDay:t.birthDay})},i={expires:n,path:"/",secure:!0,domain:k};return e.set(r,JSON.stringify(o),i),r},U=function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},n=t.useExpires,r="okta-access-token",o=E(u),i=new Date(p(o.expiresAt)),a=new Date((new Date).getTime()+6e4),s=n?i:a,c={expires:s,path:"/",secure:!0,domain:k};return e.set(r,JSON.stringify(o),c),{name:r,expires:s}},L=function(t){try{w(i.config,t),T=new o.OktaAuth(l(i.config))}catch(t){console.warn("Error updating config for OktaAuth: ",t)}},F=function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{entitlements:[]};try{var e=E(u).accessToken,n=t.entitlements,r=T.token.decode(e).payload.uid,o="".concat(i.config.entitlementServices,"principalType=user&principalId=").concat(r);return fetch(o,{headers:{Authorization:"Bearer ".concat(e)}}).then((function(t){return t.json()})).then((function(t){var e=t.contents;if(e.filter((function(t){return-1!==n.indexOf(t.entitlementCode)})).length<1)throw console.warn("entitlements issue. user has:",e,"but needs:",n),new Error("does not have valid entitlements");return!0})).catch((function(t){return console.warn("entitlements request error",t.message),!1}))}catch(t){return console.warn(t),Promise.reject(!1)}},N=function(t){g(T,t)},D=function(){T.tokenManager.on("expired",(function(){m(T)})),T.tokenManager.on("error",(function(t){console.warn("TokenManager error: ",t)}))},B=function(){return(0,o.generateState)()}})(),window.mlbOkta=r})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,